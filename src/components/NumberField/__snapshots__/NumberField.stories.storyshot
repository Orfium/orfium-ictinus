// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Design System/NumberField NumberField with Label and Placeholder 1`] = `
.emotion-0 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  position: relative;
  padding: 0.25rem;
}

.emotion-1 {
  margin: 1rem;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  box-shadow: 0 0 0 0.0625rem #b9cdfc;
  border-radius: 0.25rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  opacity: 1;
  cursor: text;
  height: 3.25rem;
  min-width: 8.75rem;
  background-color: #ffffff;
}

.emotion-3:hover {
  background-color: #F5F5FF;
}

.emotion-3:focus-within {
  box-shadow: 0 0 0 0.125rem #175bf5;
  background-color: #F5F5FF;
}

.emotion-4 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  vertical-align: top;
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
  padding: 0 0 0 0.75rem;
  padding-right: 0.75rem;
}

.emotion-4>div {
  position: relative;
}

.emotion-5 {
  width: 100%;
}

.emotion-7 {
  font-family: Roboto;
  font-weight: 400;
  line-height: 1.25rem;
  font-size: 0.875rem;
  letter-spacing: 0.015625rem;
  background: transparent;
  border: none;
  color: #212332;
  display: block;
  position: relative;
  top: 0.4375rem;
  z-index: 1;
  text-overflow: ellipsis;
  width: 0;
  min-width: 100%;
}

.emotion-7+label {
  font-size: 0.9375rem;
}

.emotion-7::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7::-moz-placeholder {
  color: transparent;
}

.emotion-7:-ms-input-placeholder {
  color: transparent;
}

.emotion-7::placeholder {
  color: transparent;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7:focus::placeholder {
  color: transparent;
}

.emotion-7:not(:focus):placeholder-shown+label {
  font-weight: normal;
}

.emotion-7:focus-within+label,
.emotion-7:not(:placeholder-shown)+label {
  -webkit-transform: translate(0.1875rem, -35%) scale(0.8);
  -moz-transform: translate(0.1875rem, -35%) scale(0.8);
  -ms-transform: translate(0.1875rem, -35%) scale(0.8);
  transform: translate(0.1875rem, -35%) scale(0.8);
  font-weight: 700;
}

.emotion-7:focus-within+label {
  color: #1552DD;
}

.emotion-7:disabled {
  cursor: not-allowed;
}

.emotion-8 {
  -webkit-transition: -webkit-transform 0.25s,opacity 0.25s ease-in-out;
  transition: transform 0.25s,opacity 0.25s ease-in-out;
  transform-origin: 0 0;
  line-height: normal;
  width: 100%;
  position: absolute;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transform: translate(0.1875rem, 0);
  -moz-transform: translate(0.1875rem, 0);
  -ms-transform: translate(0.1875rem, 0);
  transform: translate(0.1875rem, 0);
  font-size: 0.875rem;
  font-weight: 400;
  color: #5f6c85;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  top: 0;
  bottom: 0;
  margin: auto;
  white-space: nowrap;
}

.emotion-13 {
  font-family: Roboto;
  font-weight: 400;
  line-height: 1.25rem;
  font-size: 0.875rem;
  letter-spacing: 0.015625rem;
  background: transparent;
  border: none;
  color: #212332;
  display: block;
  position: relative;
  top: 0.4375rem;
  z-index: 1;
  text-overflow: ellipsis;
  width: 0;
  min-width: 100%;
}

.emotion-13+label {
  font-size: 0.9375rem;
}

.emotion-13::-webkit-input-placeholder {
  color: transparent;
}

.emotion-13::-moz-placeholder {
  color: transparent;
}

.emotion-13:-ms-input-placeholder {
  color: transparent;
}

.emotion-13::placeholder {
  color: transparent;
}

.emotion-13:focus {
  outline: none;
}

.emotion-13:focus::-webkit-input-placeholder {
  color: #54587F;
}

.emotion-13:focus::-moz-placeholder {
  color: #54587F;
}

.emotion-13:focus:-ms-input-placeholder {
  color: #54587F;
}

.emotion-13:focus::placeholder {
  color: #54587F;
}

.emotion-13:not(:focus):placeholder-shown+label {
  font-weight: normal;
}

.emotion-13:focus-within+label,
.emotion-13:not(:placeholder-shown)+label {
  -webkit-transform: translate(0.1875rem, -35%) scale(0.8);
  -moz-transform: translate(0.1875rem, -35%) scale(0.8);
  -ms-transform: translate(0.1875rem, -35%) scale(0.8);
  transform: translate(0.1875rem, -35%) scale(0.8);
  font-weight: 700;
}

.emotion-13:focus-within+label {
  color: #1552DD;
}

.emotion-13:disabled {
  cursor: not-allowed;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      className="emotion-2"
    >
      <div
        style={
          Object {
            "margin": 5,
          }
        }
      >
        <div
          onClick={[Function]}
        >
          <div
            className="emotion-3"
          >
            <div
              className="emotion-4"
            >
              <div
                className="emotion-5"
              >
                <div
                  className="react-aria-NumberField"
                >
                  <div
                    className="emotion-6"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    role="group"
                  >
                    <input
                      aria-disabled={null}
                      aria-invalid={false}
                      aria-label={null}
                      aria-labelledby={null}
                      aria-readonly={null}
                      aria-required={null}
                      aria-roledescription="Number field"
                      aria-valuemax={null}
                      aria-valuemin={null}
                      aria-valuenow={null}
                      aria-valuetext={null}
                      autoComplete="off"
                      autoCorrect="off"
                      className="emotion-7"
                      data-testid="input"
                      disabled={false}
                      id="numberfield__00"
                      inputMode="numeric"
                      onBeforeInput={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      placeholder="Label"
                      readOnly={false}
                      required={false}
                      role={null}
                      spellCheck="false"
                      type="text"
                      value=""
                    />
                    <label
                      className="emotion-8"
                      htmlFor="numberfield__00"
                    >
                      Label
                       
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "margin": 5,
          }
        }
      >
        <div
          onClick={[Function]}
        >
          <div
            className="emotion-3"
          >
            <div
              className="emotion-4"
            >
              <div
                className="emotion-5"
              >
                <div
                  className="react-aria-NumberField"
                >
                  <div
                    className="emotion-6"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    role="group"
                  >
                    <input
                      aria-disabled={null}
                      aria-invalid={false}
                      aria-label={null}
                      aria-labelledby={null}
                      aria-readonly={null}
                      aria-required={null}
                      aria-roledescription="Number field"
                      aria-valuemax={null}
                      aria-valuemin={null}
                      aria-valuenow={null}
                      aria-valuetext={null}
                      autoComplete="off"
                      autoCorrect="off"
                      className="emotion-13"
                      data-testid="input"
                      disabled={false}
                      id="numberfield__00"
                      inputMode="numeric"
                      onBeforeInput={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      placeholder="Placeholder "
                      readOnly={false}
                      required={false}
                      role={null}
                      spellCheck="false"
                      type="text"
                      value=""
                    />
                    <label
                      className="emotion-8"
                      htmlFor="numberfield__00"
                    >
                      Label
                       
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Design System/NumberField NumberField with Label, Placeholder and Statuses 1`] = `
.emotion-0 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  position: relative;
  padding: 0.25rem;
}

.emotion-1 {
  margin: 1rem;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  box-shadow: 0 0 0 0.0625rem #b9cdfc;
  border-radius: 0.25rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  opacity: 1;
  cursor: text;
  height: 3.25rem;
  min-width: 8.75rem;
  background-color: #ffffff;
}

.emotion-3:hover {
  background-color: #F5F5FF;
}

.emotion-3:focus-within {
  box-shadow: 0 0 0 0.125rem #175bf5;
  background-color: #F5F5FF;
}

.emotion-4 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  vertical-align: top;
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
  padding: 0 0 0 0.75rem;
  padding-right: 0.75rem;
}

.emotion-4>div {
  position: relative;
}

.emotion-5 {
  width: 100%;
}

.emotion-7 {
  font-family: Roboto;
  font-weight: 400;
  line-height: 1.25rem;
  font-size: 0.875rem;
  letter-spacing: 0.015625rem;
  background: transparent;
  border: none;
  color: #212332;
  display: block;
  position: relative;
  top: 0.4375rem;
  z-index: 1;
  text-overflow: ellipsis;
  width: 0;
  min-width: 100%;
}

.emotion-7+label {
  font-size: 0.9375rem;
}

.emotion-7::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7::-moz-placeholder {
  color: transparent;
}

.emotion-7:-ms-input-placeholder {
  color: transparent;
}

.emotion-7::placeholder {
  color: transparent;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7:focus::placeholder {
  color: transparent;
}

.emotion-7:not(:focus):placeholder-shown+label {
  font-weight: normal;
}

.emotion-7:focus-within+label,
.emotion-7:not(:placeholder-shown)+label {
  -webkit-transform: translate(0.1875rem, -35%) scale(0.8);
  -moz-transform: translate(0.1875rem, -35%) scale(0.8);
  -ms-transform: translate(0.1875rem, -35%) scale(0.8);
  transform: translate(0.1875rem, -35%) scale(0.8);
  font-weight: 700;
}

.emotion-7:focus-within+label {
  color: #1552DD;
}

.emotion-7:disabled {
  cursor: not-allowed;
}

.emotion-8 {
  -webkit-transition: -webkit-transform 0.25s,opacity 0.25s ease-in-out;
  transition: transform 0.25s,opacity 0.25s ease-in-out;
  transform-origin: 0 0;
  line-height: normal;
  width: 100%;
  position: absolute;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transform: translate(0.1875rem, 0);
  -moz-transform: translate(0.1875rem, 0);
  -ms-transform: translate(0.1875rem, 0);
  transform: translate(0.1875rem, 0);
  font-size: 0.875rem;
  font-weight: 400;
  color: #5f6c85;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  top: 0;
  bottom: 0;
  margin: auto;
  white-space: nowrap;
}

.emotion-9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.25rem;
  opacity: 1;
  color: #54587F;
  padding: 0.5rem 0 0;
  font-family: Roboto;
  font-weight: 400;
  line-height: 1.125rem;
  font-size: 0.75rem;
  letter-spacing: 0.015625rem;
}

.emotion-9 span {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  padding: 0;
}

.emotion-10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  box-shadow: 0 0 0 0.125rem #F882AC;
  border-radius: 0.25rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  opacity: 1;
  cursor: text;
  height: 3.25rem;
  min-width: 8.75rem;
  background-color: #FFE7F0;
}

.emotion-10:hover {
  background-color: #FFB8D1;
}

.emotion-10:focus-within {
  box-shadow: 0 0 0 0.125rem #175bf5;
  background-color: #F5F5FF;
}

.emotion-15 {
  -webkit-transition: -webkit-transform 0.25s,opacity 0.25s ease-in-out;
  transition: transform 0.25s,opacity 0.25s ease-in-out;
  transform-origin: 0 0;
  line-height: normal;
  width: 100%;
  position: absolute;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transform: translate(0.1875rem, 0);
  -moz-transform: translate(0.1875rem, 0);
  -ms-transform: translate(0.1875rem, 0);
  transform: translate(0.1875rem, 0);
  font-size: 0.875rem;
  font-weight: 400;
  color: #FF176B;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  top: 0;
  bottom: 0;
  margin: auto;
  white-space: nowrap;
}

.emotion-16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.25rem;
  opacity: 1;
  color: #CB205D;
  padding: 0.5rem 0 0;
  font-family: Roboto;
  font-weight: 400;
  line-height: 1.125rem;
  font-size: 0.75rem;
  letter-spacing: 0.015625rem;
}

.emotion-16 span {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  padding: 0;
}

.emotion-17 {
  padding: 0.125rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

.emotion-18 {
  fill: #CB205D;
  width: 0.75rem;
  height: 0.75rem;
}

.emotion-18 path {
  fill: #CB205D;
}

.emotion-19 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  box-shadow: 0 0 0 0.0625rem #b9cdfc;
  border-radius: 0.25rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  opacity: 1;
  cursor: not-allowed;
  height: 3.25rem;
  min-width: 8.75rem;
  background-color: #F5F5FF;
}

.emotion-19:hover {
  background-color: #F5F5FF;
}

.emotion-19:focus-within {
  box-shadow: 0 0 0 0.125rem #b9cdfc;
  background-color: #F5F5FF;
}

.emotion-20 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  vertical-align: top;
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
  padding: 0 0 0 0.75rem;
}

.emotion-20>div {
  position: relative;
}

.emotion-25 {
  min-width: 2.75rem;
  overflow: hidden;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  cursor: unset;
}

.emotion-27 {
  fill: #5f6c85;
  width: 1rem;
  height: 1rem;
}

.emotion-27 path {
  fill: #5f6c85;
}

.emotion-28 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  box-shadow: 0 0 0 0.0625rem #b9cdfc;
  border-radius: 0.25rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  opacity: 50%;
  cursor: not-allowed;
  height: 3.25rem;
  min-width: 8.75rem;
  background-color: #ffffff;
}

.emotion-28:focus-within {
  box-shadow: 0 0 0 0.125rem transparent;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      className="emotion-2"
    >
      <div
        style={
          Object {
            "margin": 5,
          }
        }
      >
        <div
          onClick={[Function]}
        >
          <div
            className="emotion-3"
          >
            <div
              className="emotion-4"
            >
              <div
                className="emotion-5"
              >
                <div
                  className="react-aria-NumberField"
                >
                  <div
                    className="emotion-6"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    role="group"
                  >
                    <input
                      aria-describedby="numberfield__00_hintMessage"
                      aria-disabled={null}
                      aria-invalid={false}
                      aria-label={null}
                      aria-labelledby={null}
                      aria-readonly={null}
                      aria-required={null}
                      aria-roledescription="Number field"
                      aria-valuemax={null}
                      aria-valuemin={null}
                      aria-valuenow={null}
                      aria-valuetext={null}
                      autoComplete="off"
                      autoCorrect="off"
                      className="emotion-7"
                      data-testid="input"
                      disabled={false}
                      id="numberfield__00"
                      inputMode="numeric"
                      onBeforeInput={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      placeholder="Label"
                      readOnly={false}
                      required={false}
                      role={null}
                      spellCheck="false"
                      type="text"
                      value=""
                    />
                    <label
                      className="emotion-8"
                      htmlFor="numberfield__00"
                    >
                      Label
                       
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className="emotion-9"
            data-testid="error"
          >
            <span
              id="numberfield__00_hintMessage"
            >
              Hint in Text Field
            </span>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "margin": 5,
          }
        }
      >
        <div
          onClick={[Function]}
        >
          <div
            className="emotion-10"
          >
            <div
              className="emotion-4"
            >
              <div
                className="emotion-5"
              >
                <div
                  className="react-aria-NumberField"
                >
                  <div
                    className="emotion-6"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    role="group"
                  >
                    <input
                      aria-describedby="numberfield__00_hintMessage"
                      aria-disabled={null}
                      aria-invalid={true}
                      aria-label={null}
                      aria-labelledby={null}
                      aria-readonly={null}
                      aria-required={null}
                      aria-roledescription="Number field"
                      aria-valuemax={null}
                      aria-valuemin={null}
                      aria-valuenow={null}
                      aria-valuetext={null}
                      autoComplete="off"
                      autoCorrect="off"
                      className="emotion-7"
                      data-testid="input"
                      disabled={false}
                      id="numberfield__00"
                      inputMode="numeric"
                      onBeforeInput={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      placeholder="Label"
                      readOnly={false}
                      required={false}
                      role={null}
                      spellCheck="false"
                      type="text"
                      value=""
                    />
                    <label
                      className="emotion-15"
                      htmlFor="numberfield__00"
                    >
                      Label
                       
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className="emotion-16"
            data-testid="error"
          >
            <span
              className="emotion-17"
              onClick={[Function]}
            >
              <span
                className="emotion-18"
              />
            </span>
            <span
              id="numberfield__00_hintMessage"
            >
              Error in Text Field
            </span>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "margin": 5,
          }
        }
      >
        <div
          onClick={[Function]}
        >
          <div
            className="emotion-19"
          >
            <div
              className="emotion-20"
            >
              <div
                className="emotion-5"
              >
                <div
                  className="react-aria-NumberField"
                >
                  <div
                    className="emotion-6"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    role="group"
                  >
                    <input
                      aria-disabled={null}
                      aria-invalid={false}
                      aria-label={null}
                      aria-labelledby={null}
                      aria-readonly={null}
                      aria-required={null}
                      aria-roledescription="Number field"
                      aria-valuemax={null}
                      aria-valuemin={null}
                      aria-valuenow={null}
                      aria-valuetext={null}
                      autoComplete="off"
                      autoCorrect="off"
                      className="emotion-7"
                      data-testid="input"
                      disabled={true}
                      id="numberfield__00"
                      inputMode="numeric"
                      onBeforeInput={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      placeholder="Label"
                      readOnly={true}
                      required={false}
                      role={null}
                      spellCheck="false"
                      type="text"
                      value=""
                    />
                    <label
                      className="emotion-8"
                      htmlFor="numberfield__00"
                    >
                      Label
                       
                    </label>
                  </div>
                </div>
              </div>
              <div
                aria-hidden={false}
                className="emotion-25"
              >
                <span
                  className="emotion-17"
                  onClick={[Function]}
                >
                  <span
                    className="emotion-27"
                  />
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "margin": 5,
          }
        }
      >
        <div
          onClick={[Function]}
        >
          <div
            className="emotion-28"
          >
            <div
              className="emotion-4"
            >
              <div
                className="emotion-5"
              >
                <div
                  className="react-aria-NumberField"
                >
                  <div
                    className="emotion-6"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    role="group"
                  >
                    <input
                      aria-disabled={null}
                      aria-invalid={false}
                      aria-label={null}
                      aria-labelledby={null}
                      aria-readonly={null}
                      aria-required={null}
                      aria-roledescription="Number field"
                      aria-valuemax={null}
                      aria-valuemin={null}
                      aria-valuenow={null}
                      aria-valuetext={null}
                      autoComplete="off"
                      autoCorrect="off"
                      className="emotion-7"
                      data-testid="input"
                      disabled={true}
                      id="numberfield__00"
                      inputMode="numeric"
                      onBeforeInput={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      placeholder="Label"
                      readOnly={false}
                      required={false}
                      role={null}
                      spellCheck="false"
                      type="text"
                      value=""
                    />
                    <label
                      className="emotion-8"
                      htmlFor="numberfield__00"
                    >
                      Label
                       
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Design System/NumberField NumberField with min and max values 1`] = `
.emotion-0 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  position: relative;
  padding: 0.25rem;
}

.emotion-1 {
  margin: 1rem;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  box-shadow: 0 0 0 0.0625rem #b9cdfc;
  border-radius: 0.25rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  opacity: 1;
  cursor: text;
  height: 3.25rem;
  min-width: 8.75rem;
  background-color: #ffffff;
}

.emotion-3:hover {
  background-color: #F5F5FF;
}

.emotion-3:focus-within {
  box-shadow: 0 0 0 0.125rem #175bf5;
  background-color: #F5F5FF;
}

.emotion-4 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  vertical-align: top;
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
  padding: 0 0 0 0.75rem;
}

.emotion-4>div {
  position: relative;
}

.emotion-5 {
  width: 100%;
}

.emotion-7 {
  font-family: Roboto;
  font-weight: 400;
  line-height: 1.25rem;
  font-size: 0.875rem;
  letter-spacing: 0.015625rem;
  background: transparent;
  border: none;
  color: #212332;
  display: block;
  position: relative;
  top: 0.4375rem;
  z-index: 1;
  text-overflow: ellipsis;
  width: 0;
  min-width: 100%;
}

.emotion-7+label {
  font-size: 0.9375rem;
}

.emotion-7::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7::-moz-placeholder {
  color: transparent;
}

.emotion-7:-ms-input-placeholder {
  color: transparent;
}

.emotion-7::placeholder {
  color: transparent;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7:focus::placeholder {
  color: transparent;
}

.emotion-7:not(:focus):placeholder-shown+label {
  font-weight: normal;
}

.emotion-7:focus-within+label,
.emotion-7:not(:placeholder-shown)+label {
  -webkit-transform: translate(0.1875rem, -35%) scale(0.8);
  -moz-transform: translate(0.1875rem, -35%) scale(0.8);
  -ms-transform: translate(0.1875rem, -35%) scale(0.8);
  transform: translate(0.1875rem, -35%) scale(0.8);
  font-weight: 700;
}

.emotion-7:focus-within+label {
  color: #1552DD;
}

.emotion-7:disabled {
  cursor: not-allowed;
}

.emotion-8 {
  -webkit-transition: -webkit-transform 0.25s,opacity 0.25s ease-in-out;
  transition: transform 0.25s,opacity 0.25s ease-in-out;
  transform-origin: 0 0;
  line-height: normal;
  width: 100%;
  position: absolute;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transform: translate(0.1875rem, 0);
  -moz-transform: translate(0.1875rem, 0);
  -ms-transform: translate(0.1875rem, 0);
  transform: translate(0.1875rem, 0);
  font-size: 0.875rem;
  font-weight: 400;
  color: #5f6c85;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  top: 0;
  bottom: 0;
  margin: auto;
  white-space: nowrap;
}

.emotion-9 {
  min-width: 2.75rem;
  overflow: hidden;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  cursor: unset;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      className="emotion-2"
    >
      <div
        style={
          Object {
            "margin": 5,
          }
        }
      >
        <div
          onClick={[Function]}
        >
          <div
            className="emotion-3"
          >
            <div
              className="emotion-4"
            >
              <div
                className="emotion-5"
              >
                <div
                  className="react-aria-NumberField"
                >
                  <div
                    className="emotion-6"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    role="group"
                  >
                    <input
                      aria-disabled={null}
                      aria-invalid={false}
                      aria-label={null}
                      aria-labelledby={null}
                      aria-readonly={null}
                      aria-required={null}
                      aria-roledescription="Number field"
                      aria-valuemax={null}
                      aria-valuemin={null}
                      aria-valuenow={null}
                      aria-valuetext={null}
                      autoComplete="off"
                      autoCorrect="off"
                      className="emotion-7"
                      data-testid="input"
                      disabled={false}
                      id="numberfield__00"
                      inputMode="numeric"
                      onBeforeInput={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      placeholder="Label"
                      readOnly={false}
                      required={false}
                      role={null}
                      spellCheck="false"
                      type="text"
                      value=""
                    />
                    <label
                      className="emotion-8"
                      htmlFor="numberfield__00"
                    >
                      Label
                       
                    </label>
                  </div>
                </div>
              </div>
              <div
                aria-hidden={false}
                className="emotion-9"
              >
                <div
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                >
                  %
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Design System/NumberField NumberField with number format 1`] = `
.emotion-0 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  position: relative;
  padding: 0.25rem;
}

.emotion-1 {
  margin: 1rem;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  box-shadow: 0 0 0 0.0625rem #b9cdfc;
  border-radius: 0.25rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  opacity: 1;
  cursor: text;
  height: 3.25rem;
  min-width: 8.75rem;
  background-color: #ffffff;
}

.emotion-3:hover {
  background-color: #F5F5FF;
}

.emotion-3:focus-within {
  box-shadow: 0 0 0 0.125rem #175bf5;
  background-color: #F5F5FF;
}

.emotion-4 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  vertical-align: top;
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
  padding: 0 0 0 0.75rem;
  padding-right: 0.75rem;
}

.emotion-4>div {
  position: relative;
}

.emotion-5 {
  width: 100%;
}

.emotion-7 {
  font-family: Roboto;
  font-weight: 400;
  line-height: 1.25rem;
  font-size: 0.875rem;
  letter-spacing: 0.015625rem;
  background: transparent;
  border: none;
  color: #212332;
  display: block;
  position: relative;
  top: 0.4375rem;
  z-index: 1;
  text-overflow: ellipsis;
  width: 0;
  min-width: 100%;
}

.emotion-7+label {
  font-size: 0.9375rem;
}

.emotion-7::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7::-moz-placeholder {
  color: transparent;
}

.emotion-7:-ms-input-placeholder {
  color: transparent;
}

.emotion-7::placeholder {
  color: transparent;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7:focus::placeholder {
  color: transparent;
}

.emotion-7:not(:focus):placeholder-shown+label {
  font-weight: normal;
}

.emotion-7:focus-within+label,
.emotion-7:not(:placeholder-shown)+label {
  -webkit-transform: translate(0.1875rem, -35%) scale(0.8);
  -moz-transform: translate(0.1875rem, -35%) scale(0.8);
  -ms-transform: translate(0.1875rem, -35%) scale(0.8);
  transform: translate(0.1875rem, -35%) scale(0.8);
  font-weight: 700;
}

.emotion-7:focus-within+label {
  color: #1552DD;
}

.emotion-7:disabled {
  cursor: not-allowed;
}

.emotion-8 {
  -webkit-transition: -webkit-transform 0.25s,opacity 0.25s ease-in-out;
  transition: transform 0.25s,opacity 0.25s ease-in-out;
  transform-origin: 0 0;
  line-height: normal;
  width: 100%;
  position: absolute;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transform: translate(0.1875rem, 0);
  -moz-transform: translate(0.1875rem, 0);
  -ms-transform: translate(0.1875rem, 0);
  transform: translate(0.1875rem, 0);
  font-size: 0.875rem;
  font-weight: 400;
  color: #5f6c85;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  top: 0;
  bottom: 0;
  margin: auto;
  white-space: nowrap;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      className="emotion-2"
    >
      <div
        style={
          Object {
            "margin": 5,
          }
        }
      >
        <div
          onClick={[Function]}
        >
          <div
            className="emotion-3"
          >
            <div
              className="emotion-4"
            >
              <div
                className="emotion-5"
              >
                <div
                  className="react-aria-NumberField"
                >
                  <div
                    className="emotion-6"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    role="group"
                  >
                    <input
                      aria-disabled={null}
                      aria-invalid={false}
                      aria-label={null}
                      aria-labelledby={null}
                      aria-readonly={null}
                      aria-required={null}
                      aria-roledescription="Number field"
                      aria-valuemax={null}
                      aria-valuemin={null}
                      aria-valuenow={null}
                      aria-valuetext={null}
                      autoComplete="off"
                      autoCorrect="off"
                      className="emotion-7"
                      data-testid="input"
                      disabled={false}
                      id="numberfield__00"
                      inputMode="numeric"
                      onBeforeInput={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      placeholder="Label"
                      readOnly={false}
                      required={false}
                      role={null}
                      spellCheck="false"
                      type="text"
                      value=""
                    />
                    <label
                      className="emotion-8"
                      htmlFor="numberfield__00"
                    >
                      Label
                       
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Design System/NumberField NumberField with suffix or Stepper 1`] = `
.emotion-0 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  position: relative;
  padding: 0.25rem;
}

.emotion-1 {
  margin: 1rem;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  box-shadow: 0 0 0 0.0625rem #b9cdfc;
  border-radius: 0.25rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  opacity: 1;
  cursor: text;
  height: 3.25rem;
  min-width: 8.75rem;
  background-color: #ffffff;
}

.emotion-3:hover {
  background-color: #F5F5FF;
}

.emotion-3:focus-within {
  box-shadow: 0 0 0 0.125rem #175bf5;
  background-color: #F5F5FF;
}

.emotion-4 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  vertical-align: top;
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
  padding: 0 0 0 0.75rem;
}

.emotion-4>div {
  position: relative;
}

.emotion-5 {
  width: 100%;
}

.emotion-7 {
  font-family: Roboto;
  font-weight: 400;
  line-height: 1.25rem;
  font-size: 0.875rem;
  letter-spacing: 0.015625rem;
  background: transparent;
  border: none;
  color: #212332;
  display: block;
  position: relative;
  top: 0.4375rem;
  z-index: 1;
  text-overflow: ellipsis;
  width: 0;
  min-width: 100%;
}

.emotion-7+label {
  font-size: 0.9375rem;
}

.emotion-7::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7::-moz-placeholder {
  color: transparent;
}

.emotion-7:-ms-input-placeholder {
  color: transparent;
}

.emotion-7::placeholder {
  color: transparent;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7:focus::placeholder {
  color: transparent;
}

.emotion-7:not(:focus):placeholder-shown+label {
  font-weight: normal;
}

.emotion-7:focus-within+label,
.emotion-7:not(:placeholder-shown)+label {
  -webkit-transform: translate(0.1875rem, -35%) scale(0.8);
  -moz-transform: translate(0.1875rem, -35%) scale(0.8);
  -ms-transform: translate(0.1875rem, -35%) scale(0.8);
  transform: translate(0.1875rem, -35%) scale(0.8);
  font-weight: 700;
}

.emotion-7:focus-within+label {
  color: #1552DD;
}

.emotion-7:disabled {
  cursor: not-allowed;
}

.emotion-8 {
  -webkit-transition: -webkit-transform 0.25s,opacity 0.25s ease-in-out;
  transition: transform 0.25s,opacity 0.25s ease-in-out;
  transform-origin: 0 0;
  line-height: normal;
  width: 100%;
  position: absolute;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transform: translate(0.1875rem, 0);
  -moz-transform: translate(0.1875rem, 0);
  -ms-transform: translate(0.1875rem, 0);
  transform: translate(0.1875rem, 0);
  font-size: 0.875rem;
  font-weight: 400;
  color: #5f6c85;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  top: 0;
  bottom: 0;
  margin: auto;
  white-space: nowrap;
}

.emotion-9 {
  min-width: 2.75rem;
  overflow: hidden;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  cursor: unset;
}

.emotion-13 {
  width: calc(100% - 2.75rem);
}

.emotion-16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 2.75rem;
  position: absolute;
  right: 0;
  top: -0.9375rem;
  z-index: 1;
}

.emotion-17 {
  background: transparent;
  border: none;
  height: calc(3.25rem / 2);
}

.emotion-17:hover {
  cursor: pointer;
}

.emotion-18 {
  padding: 0.125rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

.emotion-19 {
  fill: #54587F;
  width: 0.75rem;
  height: 0.75rem;
}

.emotion-19 path {
  fill: #54587F;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      className="emotion-2"
    >
      <div
        style={
          Object {
            "margin": 5,
          }
        }
      >
        <div
          onClick={[Function]}
        >
          <div
            className="emotion-3"
          >
            <div
              className="emotion-4"
            >
              <div
                className="emotion-5"
              >
                <div
                  className="react-aria-NumberField"
                >
                  <div
                    className="emotion-6"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    role="group"
                  >
                    <input
                      aria-disabled={null}
                      aria-invalid={false}
                      aria-label={null}
                      aria-labelledby={null}
                      aria-readonly={null}
                      aria-required={null}
                      aria-roledescription="Number field"
                      aria-valuemax={null}
                      aria-valuemin={null}
                      aria-valuenow={null}
                      aria-valuetext={null}
                      autoComplete="off"
                      autoCorrect="off"
                      className="emotion-7"
                      data-testid="input"
                      disabled={false}
                      id="numberfield__00"
                      inputMode="numeric"
                      onBeforeInput={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      placeholder="Label"
                      readOnly={false}
                      required={false}
                      role={null}
                      spellCheck="false"
                      type="text"
                      value=""
                    />
                    <label
                      className="emotion-8"
                      htmlFor="numberfield__00"
                    >
                      Label
                       
                    </label>
                  </div>
                </div>
              </div>
              <div
                aria-hidden={false}
                className="emotion-9"
              >
                <div
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                >
                  %
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "margin": 5,
          }
        }
      >
        <div
          onClick={[Function]}
        >
          <div
            className="emotion-3"
          >
            <div
              className="emotion-4"
            >
              <div
                className="emotion-5"
              >
                <div
                  className="react-aria-NumberField"
                >
                  <div
                    className="emotion-13"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    role="group"
                  >
                    <input
                      aria-disabled={null}
                      aria-invalid={false}
                      aria-label={null}
                      aria-labelledby={null}
                      aria-readonly={null}
                      aria-required={null}
                      aria-roledescription="Number field"
                      aria-valuemax={null}
                      aria-valuemin={null}
                      aria-valuenow={null}
                      aria-valuetext={null}
                      autoComplete="off"
                      autoCorrect="off"
                      className="emotion-7"
                      data-testid="input"
                      disabled={false}
                      id="numberfield__00"
                      inputMode="numeric"
                      onBeforeInput={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      placeholder="Label"
                      readOnly={false}
                      required={false}
                      role={null}
                      spellCheck="false"
                      type="text"
                      value=""
                    />
                    <label
                      className="emotion-8"
                      htmlFor="numberfield__00"
                    >
                      Label
                       
                    </label>
                    <div
                      className="emotion-16"
                    >
                      <button
                        aria-controls="react-aria-generated-id"
                        aria-label="Increase"
                        aria-labelledby={null}
                        className="emotion-17"
                        data-testid="number_increment"
                        disabled={false}
                        id={null}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragStart={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchCancel={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        slot="increment"
                        tabIndex={-1}
                        type="button"
                      >
                        <span
                          className="emotion-18"
                          onClick={[Function]}
                        >
                          <span
                            className="emotion-19"
                          />
                        </span>
                      </button>
                      <button
                        aria-controls="react-aria-generated-id"
                        aria-label="Decrease"
                        aria-labelledby={null}
                        className="emotion-17"
                        data-testid="number_decrement"
                        disabled={false}
                        id={null}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragStart={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchCancel={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        slot="decrement"
                        tabIndex={-1}
                        type="button"
                      >
                        <span
                          className="emotion-18"
                          onClick={[Function]}
                        >
                          <span
                            className="emotion-19"
                          />
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Design System/NumberField Playground 1`] = `
.emotion-0 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  position: relative;
  padding: 0.25rem;
}

.emotion-1 {
  margin: 1rem;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  transition: background-color 0.25s,box-shadow 0.25s,border-color 0.25s;
  box-shadow: 0 0 0 0.0625rem #b9cdfc;
  border-radius: 0.25rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  opacity: 1;
  cursor: text;
  height: 3.25rem;
  min-width: 8.75rem;
  background-color: #ffffff;
}

.emotion-3:hover {
  background-color: #F5F5FF;
}

.emotion-3:focus-within {
  box-shadow: 0 0 0 0.125rem #175bf5;
  background-color: #F5F5FF;
}

.emotion-4 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  vertical-align: top;
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
  padding: 0 0 0 0.75rem;
}

.emotion-4>div {
  position: relative;
}

.emotion-5 {
  width: 100%;
}

.emotion-7 {
  font-family: Roboto;
  font-weight: 400;
  line-height: 1.25rem;
  font-size: 0.875rem;
  letter-spacing: 0.015625rem;
  background: transparent;
  border: none;
  color: #212332;
  display: block;
  position: relative;
  top: 0.4375rem;
  z-index: 1;
  text-overflow: ellipsis;
  width: 0;
  min-width: 100%;
}

.emotion-7+label {
  font-size: 0.9375rem;
}

.emotion-7::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7::-moz-placeholder {
  color: transparent;
}

.emotion-7:-ms-input-placeholder {
  color: transparent;
}

.emotion-7::placeholder {
  color: transparent;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7:focus::placeholder {
  color: transparent;
}

.emotion-7:not(:focus):placeholder-shown+label {
  font-weight: normal;
}

.emotion-7:focus-within+label,
.emotion-7:not(:placeholder-shown)+label {
  -webkit-transform: translate(0.1875rem, -35%) scale(0.8);
  -moz-transform: translate(0.1875rem, -35%) scale(0.8);
  -ms-transform: translate(0.1875rem, -35%) scale(0.8);
  transform: translate(0.1875rem, -35%) scale(0.8);
  font-weight: 700;
}

.emotion-7:focus-within+label {
  color: #1552DD;
}

.emotion-7:disabled {
  cursor: not-allowed;
}

.emotion-8 {
  -webkit-transition: -webkit-transform 0.25s,opacity 0.25s ease-in-out;
  transition: transform 0.25s,opacity 0.25s ease-in-out;
  transform-origin: 0 0;
  line-height: normal;
  width: 100%;
  position: absolute;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transform: translate(0.1875rem, 0);
  -moz-transform: translate(0.1875rem, 0);
  -ms-transform: translate(0.1875rem, 0);
  transform: translate(0.1875rem, 0);
  font-size: 0.875rem;
  font-weight: 400;
  color: #5f6c85;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  top: 0;
  bottom: 0;
  margin: auto;
  white-space: nowrap;
}

.emotion-9 {
  min-width: 2.75rem;
  overflow: hidden;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  cursor: unset;
}

.emotion-10 {
  padding: 0.125rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

.emotion-11 {
  fill: #5f6c85;
  width: 1rem;
  height: 1rem;
}

.emotion-11 path {
  fill: #5f6c85;
}

.emotion-12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.25rem;
  opacity: 1;
  color: #54587F;
  padding: 0.5rem 0 0;
  font-family: Roboto;
  font-weight: 400;
  line-height: 1.125rem;
  font-size: 0.75rem;
  letter-spacing: 0.015625rem;
}

.emotion-12 span {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  padding: 0;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      className="emotion-2"
    >
      <div
        style={
          Object {
            "margin": 5,
          }
        }
      >
        <div
          onClick={[Function]}
        >
          <div
            className="emotion-3"
          >
            <div
              className="emotion-4"
            >
              <div
                className="emotion-5"
              >
                <div
                  className="react-aria-NumberField"
                >
                  <div
                    className="emotion-6"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    role="group"
                  >
                    <input
                      aria-describedby="numberfield__00_hintMessage"
                      aria-disabled={null}
                      aria-invalid={false}
                      aria-label={null}
                      aria-labelledby={null}
                      aria-readonly={null}
                      aria-required={null}
                      aria-roledescription="Number field"
                      aria-valuemax={null}
                      aria-valuemin={null}
                      aria-valuenow={null}
                      aria-valuetext={null}
                      autoComplete="off"
                      autoCorrect="off"
                      className="emotion-7"
                      data-testid="input"
                      disabled={false}
                      id="numberfield__00"
                      inputMode="numeric"
                      onBeforeInput={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      placeholder="Label"
                      readOnly={false}
                      required={false}
                      role={null}
                      spellCheck="false"
                      type="text"
                      value=""
                    />
                    <label
                      className="emotion-8"
                      htmlFor="numberfield__00"
                    >
                      Label
                       
                    </label>
                  </div>
                </div>
              </div>
              <div
                aria-hidden={false}
                className="emotion-9"
              >
                <span
                  className="emotion-10"
                  onClick={[Function]}
                >
                  <span
                    className="emotion-11"
                  />
                </span>
              </div>
            </div>
          </div>
          <div
            className="emotion-12"
            data-testid="error"
          >
            <span
              id="numberfield__00_hintMessage"
            >
              Message in Number Field
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
