// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Updated Components/Box Box Background 1`] = `
.emotion-0 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  position: relative;
  padding: 0.25rem;
}

.emotion-1 {
  margin: 1rem;
}

.emotion-2 {
  color: #ffffff;
  background-color: #1B214F;
  margin-bottom: 0.75rem;
}

.emotion-3 {
  background-color: #ffffff;
  margin-bottom: 0.75rem;
}

.emotion-4 {
  background-color: rgba(84,94,255,0);
  margin-bottom: 0.75rem;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      className="emotion-2"
    >
      Background Inverted
    </div>
    <div
      className="emotion-3"
    >
      Background Light
    </div>
    <div
      className="emotion-4"
    >
      Background Transparent
    </div>
  </div>
</div>
`;

exports[`Storyshots Updated Components/Box Box horizontal padding 1`] = `
.emotion-0 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  position: relative;
  padding: 0.25rem;
}

.emotion-1 {
  margin: 1rem;
}

.emotion-2 {
  background-color: #ffffff;
  padding: 0 1.25rem;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      className="emotion-2"
    >
      Padding Horizontal 7
    </div>
  </div>
</div>
`;

exports[`Storyshots Updated Components/Box Box padding (All sides) 1`] = `
.emotion-0 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  position: relative;
  padding: 0.25rem;
}

.emotion-1 {
  margin: 1rem;
}

.emotion-2 {
  background-color: #ffffff;
  padding: 0.25rem;
  margin-bottom: 0.75rem;
}

.emotion-3 {
  background-color: #ffffff;
  padding: 1.25rem;
  margin-bottom: 0.75rem;
}

.emotion-4 {
  background-color: #ffffff;
  padding: 2.75rem;
  margin-bottom: 0.75rem;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      className="emotion-2"
    >
      Padding 3
    </div>
    <div
      className="emotion-3"
    >
      Padding 7
    </div>
    <div
      className="emotion-4"
    >
      Padding 12
    </div>
  </div>
</div>
`;

exports[`Storyshots Updated Components/Box Box vertical padding 1`] = `
.emotion-0 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  position: relative;
  padding: 0.25rem;
}

.emotion-1 {
  margin: 1rem;
}

.emotion-2 {
  background-color: #ffffff;
  padding: 1.25rem 0;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      className="emotion-2"
    >
      Padding Vertical 7
    </div>
  </div>
</div>
`;

exports[`Storyshots Updated Components/Box Overview 1`] = `
.emotion-0 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  position: relative;
  padding: 0.25rem;
}

.emotion-1 {
  margin: 1rem;
}

.emotion-2 {
  margin: -16px;
}

.emotion-3 {
  font-family: Roboto;
  font-weight: 400;
  line-height: 1.375rem;
  font-size: 1rem;
  letter-spacing: 0.015625rem;
  color: #1B214F;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      className="emotion-2"
    >
      <p
        className="emotion-3"
      >
        <div
          style={
            Object {
              "paddingBottom": "16px",
            }
          }
        >
          The Box component is a helper component that lets you write these common less-reusable elements more briefly inline.
        </div>
        <div
          style={
            Object {
              "paddingBottom": "16px",
            }
          }
        >
          One of the most common needs when building web apps is creating layout elements that have certain layout.
        </div>
        <div
          style={
            Object {
              "paddingBottom": "16px",
            }
          }
        >
          The mentality is that we use all CSS props based on
           
          <a
            href="https://developer.mozilla.org/en-US/docs/Web/CSS"
          >
            https://developer.mozilla.org/en-US/docs/Web/CSS
          </a>
          .
        </div>
        <div>
          Only exceptions are margin and padding that use them in acronyms like m and p and direction t|r|b|l ending with m + t | r | l | b = value
        </div>
      </p>
    </div>
  </div>
</div>
`;
