import { SerializedStyles } from '@emotion/react';
import { Theme } from 'theme';
import { SearchProps } from './Search.types';
export declare const searchContainer: () => SerializedStyles;
export declare const searchInputStyles: () => (theme: Theme) => SerializedStyles;
export declare const filterStyles: () => (theme: Theme) => SerializedStyles;
export declare const getSX: ({ hasFilter, isDisabled, sx, }: {
    hasFilter: boolean;
} & Pick<SearchProps, "isDisabled" | "sx">) => (theme: Theme) => {
    wrapper: {
        accentColor?: readonly string[] | import("csstype").Property.AccentColor | readonly import("csstype").Property.AccentColor[];
        alignContent?: readonly string[] | import("csstype").Property.AlignContent | readonly import("csstype").Property.AlignContent[];
        alignItems?: readonly string[] | import("csstype").Property.AlignItems | readonly import("csstype").Property.AlignItems[];
        alignSelf?: readonly string[] | import("csstype").Property.AlignSelf | readonly import("csstype").Property.AlignSelf[];
        alignTracks?: readonly string[] | import("csstype").Property.AlignTracks | readonly import("csstype").Property.AlignTracks[];
        animationComposition?: readonly string[] | import("csstype").Property.AnimationComposition | readonly import("csstype").Property.AnimationComposition[];
        animationDelay?: readonly string[] | import("csstype").Property.AnimationDelay<string & {}> | readonly import("csstype").Property.AnimationDelay<string & {}>[];
        animationDirection?: readonly string[] | import("csstype").Property.AnimationDirection | readonly import("csstype").Property.AnimationDirection[];
        animationDuration?: readonly string[] | import("csstype").Property.AnimationDuration<string & {}> | readonly import("csstype").Property.AnimationDuration<string & {}>[];
        animationFillMode?: readonly string[] | import("csstype").Property.AnimationFillMode | readonly import("csstype").Property.AnimationFillMode[];
        animationIterationCount?: import("csstype").Property.AnimationIterationCount | readonly NonNullable<import("csstype").Property.AnimationIterationCount>[] | readonly ((string & {}) | import('csstype').Globals | "infinite")[];
        animationName?: readonly string[] | import("csstype").Property.AnimationName | readonly import("csstype").Property.AnimationName[];
        animationPlayState?: readonly string[] | import("csstype").Property.AnimationPlayState | readonly import("csstype").Property.AnimationPlayState[];
        animationRangeEnd?: readonly (string | (string & {}))[] | import("csstype").Property.AnimationRangeEnd<string | number> | readonly NonNullable<import("csstype").Property.AnimationRangeEnd<string | number>>[];
        animationRangeStart?: readonly (string | (string & {}))[] | import("csstype").Property.AnimationRangeStart<string | number> | readonly NonNullable<import("csstype").Property.AnimationRangeStart<string | number>>[];
        animationTimeline?: readonly string[] | import("csstype").Property.AnimationTimeline | readonly import("csstype").Property.AnimationTimeline[];
        animationTimingFunction?: readonly string[] | import("csstype").Property.AnimationTimingFunction | readonly import("csstype").Property.AnimationTimingFunction[];
        appearance?: import("csstype").Property.Appearance | readonly NonNullable<import("csstype").Property.Appearance>[] | readonly import("csstype").Property.Appearance[];
        aspectRatio?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.AspectRatio | readonly NonNullable<import("csstype").Property.AspectRatio>[];
        backdropFilter?: readonly string[] | import("csstype").Property.BackdropFilter | readonly import("csstype").Property.BackdropFilter[];
        backfaceVisibility?: import("csstype").Property.BackfaceVisibility | readonly NonNullable<import("csstype").Property.BackfaceVisibility>[] | readonly import("csstype").Property.BackfaceVisibility[];
        backgroundAttachment?: readonly string[] | import("csstype").Property.BackgroundAttachment | readonly import("csstype").Property.BackgroundAttachment[];
        backgroundBlendMode?: readonly string[] | import("csstype").Property.BackgroundBlendMode | readonly import("csstype").Property.BackgroundBlendMode[];
        backgroundClip?: readonly string[] | import("csstype").Property.BackgroundClip | readonly import("csstype").Property.BackgroundClip[];
        backgroundColor?: readonly string[] | import("csstype").Property.BackgroundColor | readonly import("csstype").Property.BackgroundColor[];
        backgroundImage?: readonly string[] | import("csstype").Property.BackgroundImage | readonly import("csstype").Property.BackgroundImage[];
        backgroundOrigin?: readonly string[] | import("csstype").Property.BackgroundOrigin | readonly import("csstype").Property.BackgroundOrigin[];
        backgroundPositionX?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundPositionX<string | number> | readonly NonNullable<import("csstype").Property.BackgroundPositionX<string | number>>[];
        backgroundPositionY?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundPositionY<string | number> | readonly NonNullable<import("csstype").Property.BackgroundPositionY<string | number>>[];
        backgroundRepeat?: readonly string[] | import("csstype").Property.BackgroundRepeat | readonly import("csstype").Property.BackgroundRepeat[];
        backgroundSize?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundSize<string | number> | readonly NonNullable<import("csstype").Property.BackgroundSize<string | number>>[];
        blockOverflow?: readonly string[] | import("csstype").Property.BlockOverflow | readonly import("csstype").Property.BlockOverflow[];
        blockSize?: readonly (string | (string & {}))[] | import("csstype").Property.BlockSize<string | number> | readonly NonNullable<import("csstype").Property.BlockSize<string | number>>[];
        borderBlockColor?: readonly string[] | import("csstype").Property.BorderBlockColor | readonly import("csstype").Property.BorderBlockColor[];
        borderBlockEndColor?: readonly string[] | import("csstype").Property.BorderBlockEndColor | readonly import("csstype").Property.BorderBlockEndColor[];
        borderBlockEndStyle?: import("csstype").Property.BorderBlockEndStyle | readonly NonNullable<import("csstype").Property.BorderBlockEndStyle>[] | readonly import("csstype").Property.BorderBlockEndStyle[];
        borderBlockEndWidth?: readonly string[] | import("csstype").Property.BorderBlockEndWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderBlockEndWidth<string | number>>[];
        borderBlockStartColor?: readonly string[] | import("csstype").Property.BorderBlockStartColor | readonly import("csstype").Property.BorderBlockStartColor[];
        borderBlockStartStyle?: import("csstype").Property.BorderBlockStartStyle | readonly NonNullable<import("csstype").Property.BorderBlockStartStyle>[] | readonly import("csstype").Property.BorderBlockStartStyle[];
        borderBlockStartWidth?: readonly string[] | import("csstype").Property.BorderBlockStartWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderBlockStartWidth<string | number>>[];
        borderBlockStyle?: import("csstype").Property.BorderBlockStyle | readonly NonNullable<import("csstype").Property.BorderBlockStyle>[] | readonly import("csstype").Property.BorderBlockStyle[];
        borderBlockWidth?: readonly string[] | import("csstype").Property.BorderBlockWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderBlockWidth<string | number>>[];
        borderBottomColor?: readonly string[] | import("csstype").Property.BorderBottomColor | readonly import("csstype").Property.BorderBottomColor[];
        borderBottomLeftRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomLeftRadius<string | number>>[];
        borderBottomRightRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomRightRadius<string | number>>[];
        borderBottomStyle?: import("csstype").Property.BorderBottomStyle | readonly NonNullable<import("csstype").Property.BorderBottomStyle>[] | readonly import("csstype").Property.BorderBottomStyle[];
        borderBottomWidth?: readonly string[] | import("csstype").Property.BorderBottomWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomWidth<string | number>>[];
        borderCollapse?: import("csstype").Property.BorderCollapse | readonly NonNullable<import("csstype").Property.BorderCollapse>[] | readonly import("csstype").Property.BorderCollapse[];
        borderEndEndRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderEndEndRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderEndEndRadius<string | number>>[];
        borderEndStartRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderEndStartRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderEndStartRadius<string | number>>[];
        borderImageOutset?: readonly (string | (string & {}))[] | import("csstype").Property.BorderImageOutset<string | number> | readonly NonNullable<import("csstype").Property.BorderImageOutset<string | number>>[];
        borderImageRepeat?: readonly string[] | import("csstype").Property.BorderImageRepeat | readonly import("csstype").Property.BorderImageRepeat[];
        borderImageSlice?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BorderImageSlice | readonly NonNullable<import("csstype").Property.BorderImageSlice>[];
        borderImageSource?: readonly string[] | import("csstype").Property.BorderImageSource | readonly import("csstype").Property.BorderImageSource[];
        borderImageWidth?: readonly (string | (string & {}))[] | import("csstype").Property.BorderImageWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderImageWidth<string | number>>[];
        borderInlineColor?: readonly string[] | import("csstype").Property.BorderInlineColor | readonly import("csstype").Property.BorderInlineColor[];
        borderInlineEndColor?: readonly string[] | import("csstype").Property.BorderInlineEndColor | readonly import("csstype").Property.BorderInlineEndColor[];
        borderInlineEndStyle?: import("csstype").Property.BorderInlineEndStyle | readonly NonNullable<import("csstype").Property.BorderInlineEndStyle>[] | readonly import("csstype").Property.BorderInlineEndStyle[];
        borderInlineEndWidth?: readonly string[] | import("csstype").Property.BorderInlineEndWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineEndWidth<string | number>>[];
        borderInlineStartColor?: readonly string[] | import("csstype").Property.BorderInlineStartColor | readonly import("csstype").Property.BorderInlineStartColor[];
        borderInlineStartStyle?: import("csstype").Property.BorderInlineStartStyle | readonly NonNullable<import("csstype").Property.BorderInlineStartStyle>[] | readonly import("csstype").Property.BorderInlineStartStyle[];
        borderInlineStartWidth?: readonly string[] | import("csstype").Property.BorderInlineStartWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineStartWidth<string | number>>[];
        borderInlineStyle?: import("csstype").Property.BorderInlineStyle | readonly NonNullable<import("csstype").Property.BorderInlineStyle>[] | readonly import("csstype").Property.BorderInlineStyle[];
        borderInlineWidth?: readonly string[] | import("csstype").Property.BorderInlineWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineWidth<string | number>>[];
        borderLeftColor?: readonly string[] | import("csstype").Property.BorderLeftColor | readonly import("csstype").Property.BorderLeftColor[];
        borderLeftStyle?: import("csstype").Property.BorderLeftStyle | readonly NonNullable<import("csstype").Property.BorderLeftStyle>[] | readonly import("csstype").Property.BorderLeftStyle[];
        borderLeftWidth?: readonly string[] | import("csstype").Property.BorderLeftWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderLeftWidth<string | number>>[];
        borderRightColor?: readonly string[] | import("csstype").Property.BorderRightColor | readonly import("csstype").Property.BorderRightColor[];
        borderRightStyle?: import("csstype").Property.BorderRightStyle | readonly NonNullable<import("csstype").Property.BorderRightStyle>[] | readonly import("csstype").Property.BorderRightStyle[];
        borderRightWidth?: readonly string[] | import("csstype").Property.BorderRightWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderRightWidth<string | number>>[];
        borderSpacing?: readonly (string | (string & {}))[] | import("csstype").Property.BorderSpacing<string | number> | readonly NonNullable<import("csstype").Property.BorderSpacing<string | number>>[];
        borderStartEndRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderStartEndRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderStartEndRadius<string | number>>[];
        borderStartStartRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderStartStartRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderStartStartRadius<string | number>>[];
        borderTopColor?: readonly string[] | import("csstype").Property.BorderTopColor | readonly import("csstype").Property.BorderTopColor[];
        borderTopLeftRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopLeftRadius<string | number>>[];
        borderTopRightRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopRightRadius<string | number>>[];
        borderTopStyle?: import("csstype").Property.BorderTopStyle | readonly NonNullable<import("csstype").Property.BorderTopStyle>[] | readonly import("csstype").Property.BorderTopStyle[];
        borderTopWidth?: readonly string[] | import("csstype").Property.BorderTopWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderTopWidth<string | number>>[];
        bottom?: readonly (string | (string & {}))[] | import("csstype").Property.Bottom<string | number> | readonly NonNullable<import("csstype").Property.Bottom<string | number>>[];
        boxDecorationBreak?: import("csstype").Property.BoxDecorationBreak | readonly NonNullable<import("csstype").Property.BoxDecorationBreak>[] | readonly import("csstype").Property.BoxDecorationBreak[];
        boxShadow: string | readonly string[];
        boxSizing?: import("csstype").Property.BoxSizing | readonly NonNullable<import("csstype").Property.BoxSizing>[] | readonly import("csstype").Property.BoxSizing[];
        breakAfter?: import("csstype").Property.BreakAfter | readonly NonNullable<import("csstype").Property.BreakAfter>[] | readonly import("csstype").Property.BreakAfter[];
        breakBefore?: import("csstype").Property.BreakBefore | readonly NonNullable<import("csstype").Property.BreakBefore>[] | readonly import("csstype").Property.BreakBefore[];
        breakInside?: import("csstype").Property.BreakInside | readonly NonNullable<import("csstype").Property.BreakInside>[] | readonly import("csstype").Property.BreakInside[];
        captionSide?: import("csstype").Property.CaptionSide | readonly NonNullable<import("csstype").Property.CaptionSide>[] | readonly import("csstype").Property.CaptionSide[];
        caretColor?: readonly string[] | import("csstype").Property.CaretColor | readonly import("csstype").Property.CaretColor[];
        caretShape?: import("csstype").Property.CaretShape | readonly NonNullable<import("csstype").Property.CaretShape>[] | readonly import("csstype").Property.CaretShape[];
        clear?: import("csstype").Property.Clear | readonly NonNullable<import("csstype").Property.Clear>[] | readonly import("csstype").Property.Clear[];
        clipPath?: readonly string[] | import("csstype").Property.ClipPath | readonly import("csstype").Property.ClipPath[];
        color?: readonly string[] | import("csstype").Property.Color | readonly import("csstype").Property.Color[];
        colorAdjust?: import("csstype").Property.PrintColorAdjust | readonly NonNullable<import("csstype").Property.PrintColorAdjust>[] | readonly import("csstype").Property.PrintColorAdjust[];
        colorScheme?: readonly string[] | import("csstype").Property.ColorScheme | readonly import("csstype").Property.ColorScheme[];
        columnCount?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.ColumnCount | readonly NonNullable<import("csstype").Property.ColumnCount>[];
        columnFill?: import("csstype").Property.ColumnFill | readonly NonNullable<import("csstype").Property.ColumnFill>[] | readonly import("csstype").Property.ColumnFill[];
        columnGap?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnGap<string | number> | readonly NonNullable<import("csstype").Property.ColumnGap<string | number>>[];
        columnRuleColor?: readonly string[] | import("csstype").Property.ColumnRuleColor | readonly import("csstype").Property.ColumnRuleColor[];
        columnRuleStyle?: readonly string[] | import("csstype").Property.ColumnRuleStyle | readonly import("csstype").Property.ColumnRuleStyle[];
        columnRuleWidth?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRuleWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnRuleWidth<string | number>>[];
        columnSpan?: import("csstype").Property.ColumnSpan | readonly NonNullable<import("csstype").Property.ColumnSpan>[] | readonly import("csstype").Property.ColumnSpan[];
        columnWidth?: readonly string[] | import("csstype").Property.ColumnWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnWidth<string | number>>[];
        contain?: readonly string[] | import("csstype").Property.Contain | readonly import("csstype").Property.Contain[];
        containIntrinsicBlockSize?: readonly (string | (string & {}))[] | import("csstype").Property.ContainIntrinsicBlockSize<string | number> | readonly NonNullable<import("csstype").Property.ContainIntrinsicBlockSize<string | number>>[];
        containIntrinsicHeight?: readonly (string | (string & {}))[] | import("csstype").Property.ContainIntrinsicHeight<string | number> | readonly NonNullable<import("csstype").Property.ContainIntrinsicHeight<string | number>>[];
        containIntrinsicInlineSize?: readonly (string | (string & {}))[] | import("csstype").Property.ContainIntrinsicInlineSize<string | number> | readonly NonNullable<import("csstype").Property.ContainIntrinsicInlineSize<string | number>>[];
        containIntrinsicWidth?: readonly (string | (string & {}))[] | import("csstype").Property.ContainIntrinsicWidth<string | number> | readonly NonNullable<import("csstype").Property.ContainIntrinsicWidth<string | number>>[];
        containerName?: readonly string[] | import("csstype").Property.ContainerName | readonly import("csstype").Property.ContainerName[];
        containerType?: import("csstype").Property.ContainerType | readonly NonNullable<import("csstype").Property.ContainerType>[] | readonly import("csstype").Property.ContainerType[];
        content?: readonly string[] | import("csstype").Property.Content | readonly import("csstype").Property.Content[];
        contentVisibility?: import("csstype").Property.ContentVisibility | readonly NonNullable<import("csstype").Property.ContentVisibility>[] | readonly import("csstype").Property.ContentVisibility[];
        counterIncrement?: readonly string[] | import("csstype").Property.CounterIncrement | readonly import("csstype").Property.CounterIncrement[];
        counterReset?: readonly string[] | import("csstype").Property.CounterReset | readonly import("csstype").Property.CounterReset[];
        counterSet?: readonly string[] | import("csstype").Property.CounterSet | readonly import("csstype").Property.CounterSet[];
        cursor?: readonly string[] | import("csstype").Property.Cursor | readonly import("csstype").Property.Cursor[];
        direction?: import("csstype").Property.Direction | readonly NonNullable<import("csstype").Property.Direction>[] | readonly import("csstype").Property.Direction[];
        display?: readonly string[] | import("csstype").Property.Display | readonly import("csstype").Property.Display[];
        emptyCells?: import("csstype").Property.EmptyCells | readonly NonNullable<import("csstype").Property.EmptyCells>[] | readonly import("csstype").Property.EmptyCells[];
        filter?: readonly string[] | import("csstype").Property.Filter | readonly import("csstype").Property.Filter[];
        flexBasis?: readonly (string | (string & {}))[] | import("csstype").Property.FlexBasis<string | number> | readonly NonNullable<import("csstype").Property.FlexBasis<string | number>>[];
        flexDirection?: import("csstype").Property.FlexDirection | readonly NonNullable<import("csstype").Property.FlexDirection>[] | readonly import("csstype").Property.FlexDirection[];
        flexGrow?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FlexGrow | readonly NonNullable<import("csstype").Property.FlexGrow>[];
        flexShrink?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FlexShrink | readonly NonNullable<import("csstype").Property.FlexShrink>[];
        flexWrap?: import("csstype").Property.FlexWrap | readonly NonNullable<import("csstype").Property.FlexWrap>[] | readonly import("csstype").Property.FlexWrap[];
        float?: import("csstype").Property.Float | readonly NonNullable<import("csstype").Property.Float>[] | readonly import("csstype").Property.Float[];
        fontFamily?: readonly string[] | import("csstype").Property.FontFamily | readonly import("csstype").Property.FontFamily[];
        fontFeatureSettings?: readonly string[] | import("csstype").Property.FontFeatureSettings | readonly import("csstype").Property.FontFeatureSettings[];
        fontKerning?: import("csstype").Property.FontKerning | readonly NonNullable<import("csstype").Property.FontKerning>[] | readonly import("csstype").Property.FontKerning[];
        fontLanguageOverride?: readonly string[] | import("csstype").Property.FontLanguageOverride | readonly import("csstype").Property.FontLanguageOverride[];
        fontOpticalSizing?: import("csstype").Property.FontOpticalSizing | readonly NonNullable<import("csstype").Property.FontOpticalSizing>[] | readonly import("csstype").Property.FontOpticalSizing[];
        fontPalette?: readonly string[] | import("csstype").Property.FontPalette | readonly import("csstype").Property.FontPalette[];
        fontSize?: readonly (string | (string & {}))[] | import("csstype").Property.FontSize<string | number> | readonly NonNullable<import("csstype").Property.FontSize<string | number>>[];
        fontSizeAdjust?: import("csstype").Property.FontSizeAdjust | readonly NonNullable<import("csstype").Property.FontSizeAdjust>[] | readonly ("none" | (string & {}) | import('csstype').Globals | "from-font")[];
        fontSmooth?: readonly string[] | import("csstype").Property.FontSmooth<string | number> | readonly NonNullable<import("csstype").Property.FontSmooth<string | number>>[];
        fontStretch?: readonly string[] | import("csstype").Property.FontStretch | readonly import("csstype").Property.FontStretch[];
        fontStyle?: readonly string[] | import("csstype").Property.FontStyle | readonly import("csstype").Property.FontStyle[];
        fontSynthesis?: readonly string[] | import("csstype").Property.FontSynthesis | readonly import("csstype").Property.FontSynthesis[];
        fontSynthesisPosition?: import("csstype").Property.FontSynthesisPosition | readonly NonNullable<import("csstype").Property.FontSynthesisPosition>[] | readonly import("csstype").Property.FontSynthesisPosition[];
        fontSynthesisSmallCaps?: import("csstype").Property.FontSynthesisSmallCaps | readonly NonNullable<import("csstype").Property.FontSynthesisSmallCaps>[] | readonly import("csstype").Property.FontSynthesisSmallCaps[];
        fontSynthesisStyle?: import("csstype").Property.FontSynthesisStyle | readonly NonNullable<import("csstype").Property.FontSynthesisStyle>[] | readonly import("csstype").Property.FontSynthesisStyle[];
        fontSynthesisWeight?: import("csstype").Property.FontSynthesisWeight | readonly NonNullable<import("csstype").Property.FontSynthesisWeight>[] | readonly import("csstype").Property.FontSynthesisWeight[];
        fontVariant?: readonly string[] | import("csstype").Property.FontVariant | readonly import("csstype").Property.FontVariant[];
        fontVariantAlternates?: readonly string[] | import("csstype").Property.FontVariantAlternates | readonly import("csstype").Property.FontVariantAlternates[];
        fontVariantCaps?: import("csstype").Property.FontVariantCaps | readonly NonNullable<import("csstype").Property.FontVariantCaps>[] | readonly import("csstype").Property.FontVariantCaps[];
        fontVariantEastAsian?: readonly string[] | import("csstype").Property.FontVariantEastAsian | readonly import("csstype").Property.FontVariantEastAsian[];
        fontVariantEmoji?: import("csstype").Property.FontVariantEmoji | readonly NonNullable<import("csstype").Property.FontVariantEmoji>[] | readonly import("csstype").Property.FontVariantEmoji[];
        fontVariantLigatures?: readonly string[] | import("csstype").Property.FontVariantLigatures | readonly import("csstype").Property.FontVariantLigatures[];
        fontVariantNumeric?: readonly string[] | import("csstype").Property.FontVariantNumeric | readonly import("csstype").Property.FontVariantNumeric[];
        fontVariantPosition?: import("csstype").Property.FontVariantPosition | readonly NonNullable<import("csstype").Property.FontVariantPosition>[] | readonly import("csstype").Property.FontVariantPosition[];
        fontVariationSettings?: readonly string[] | import("csstype").Property.FontVariationSettings | readonly import("csstype").Property.FontVariationSettings[];
        fontWeight?: import("csstype").Property.FontWeight | readonly NonNullable<import("csstype").Property.FontWeight>[] | readonly ((string & {}) | "normal" | "bold" | import('csstype').Globals | "bolder" | "lighter")[];
        forcedColorAdjust?: import("csstype").Property.ForcedColorAdjust | readonly NonNullable<import("csstype").Property.ForcedColorAdjust>[] | readonly import("csstype").Property.ForcedColorAdjust[];
        gridAutoColumns?: readonly (string | (string & {}))[] | import("csstype").Property.GridAutoColumns<string | number> | readonly NonNullable<import("csstype").Property.GridAutoColumns<string | number>>[];
        gridAutoFlow?: readonly string[] | import("csstype").Property.GridAutoFlow | readonly import("csstype").Property.GridAutoFlow[];
        gridAutoRows?: readonly (string | (string & {}))[] | import("csstype").Property.GridAutoRows<string | number> | readonly NonNullable<import("csstype").Property.GridAutoRows<string | number>>[];
        gridColumnEnd?: import("csstype").Property.GridColumnEnd | readonly NonNullable<import("csstype").Property.GridColumnEnd>[] | readonly ((string & {}) | import('csstype').Globals | "auto")[];
        gridColumnStart?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridColumnStart | readonly NonNullable<import("csstype").Property.GridColumnStart>[];
        gridRowEnd?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridRowEnd | readonly NonNullable<import("csstype").Property.GridRowEnd>[];
        gridRowStart?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridRowStart | readonly NonNullable<import("csstype").Property.GridRowStart>[];
        gridTemplateAreas?: readonly string[] | import("csstype").Property.GridTemplateAreas | readonly import("csstype").Property.GridTemplateAreas[];
        gridTemplateColumns?: readonly (string | (string & {}))[] | import("csstype").Property.GridTemplateColumns<string | number> | readonly NonNullable<import("csstype").Property.GridTemplateColumns<string | number>>[];
        gridTemplateRows?: readonly (string | (string & {}))[] | import("csstype").Property.GridTemplateRows<string | number> | readonly NonNullable<import("csstype").Property.GridTemplateRows<string | number>>[];
        hangingPunctuation?: readonly string[] | import("csstype").Property.HangingPunctuation | readonly import("csstype").Property.HangingPunctuation[];
        height: any;
        hyphenateCharacter?: readonly string[] | import("csstype").Property.HyphenateCharacter | readonly import("csstype").Property.HyphenateCharacter[];
        hyphenateLimitChars?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.HyphenateLimitChars | readonly NonNullable<import("csstype").Property.HyphenateLimitChars>[];
        hyphens?: import("csstype").Property.Hyphens | readonly NonNullable<import("csstype").Property.Hyphens>[] | readonly import("csstype").Property.Hyphens[];
        imageOrientation?: readonly string[] | import("csstype").Property.ImageOrientation | readonly import("csstype").Property.ImageOrientation[];
        imageRendering?: import("csstype").Property.ImageRendering | readonly NonNullable<import("csstype").Property.ImageRendering>[] | readonly import("csstype").Property.ImageRendering[];
        imageResolution?: readonly string[] | import("csstype").Property.ImageResolution | readonly import("csstype").Property.ImageResolution[];
        initialLetter?: import("csstype").Property.InitialLetter | readonly NonNullable<import("csstype").Property.InitialLetter>[] | readonly ((string & {}) | "normal" | import('csstype').Globals)[];
        inlineSize?: readonly (string | (string & {}))[] | import("csstype").Property.InlineSize<string | number> | readonly NonNullable<import("csstype").Property.InlineSize<string | number>>[];
        inputSecurity?: import("csstype").Property.InputSecurity | readonly NonNullable<import("csstype").Property.InputSecurity>[] | readonly import("csstype").Property.InputSecurity[];
        insetBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.InsetBlockEnd<string | number>>[];
        insetBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlockStart<string | number> | readonly NonNullable<import("csstype").Property.InsetBlockStart<string | number>>[];
        insetInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.InsetInlineEnd<string | number>>[];
        insetInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInlineStart<string | number> | readonly NonNullable<import("csstype").Property.InsetInlineStart<string | number>>[];
        isolation?: import("csstype").Property.Isolation | readonly NonNullable<import("csstype").Property.Isolation>[] | readonly import("csstype").Property.Isolation[];
        justifyContent?: readonly string[] | import("csstype").Property.JustifyContent | readonly import("csstype").Property.JustifyContent[];
        justifyItems?: readonly string[] | import("csstype").Property.JustifyItems | readonly import("csstype").Property.JustifyItems[];
        justifySelf?: readonly string[] | import("csstype").Property.JustifySelf | readonly import("csstype").Property.JustifySelf[];
        justifyTracks?: readonly string[] | import("csstype").Property.JustifyTracks | readonly import("csstype").Property.JustifyTracks[];
        left?: readonly (string | (string & {}))[] | import("csstype").Property.Left<string | number> | readonly NonNullable<import("csstype").Property.Left<string | number>>[];
        letterSpacing?: readonly string[] | import("csstype").Property.LetterSpacing<string | number> | readonly NonNullable<import("csstype").Property.LetterSpacing<string | number>>[];
        lineBreak?: import("csstype").Property.LineBreak | readonly NonNullable<import("csstype").Property.LineBreak>[] | readonly import("csstype").Property.LineBreak[];
        lineHeight?: readonly (string | (string & {}))[] | import("csstype").Property.LineHeight<string | number> | readonly NonNullable<import("csstype").Property.LineHeight<string | number>>[];
        lineHeightStep?: readonly string[] | import("csstype").Property.LineHeightStep<string | number> | readonly NonNullable<import("csstype").Property.LineHeightStep<string | number>>[];
        listStyleImage?: readonly string[] | import("csstype").Property.ListStyleImage | readonly import("csstype").Property.ListStyleImage[];
        listStylePosition?: import("csstype").Property.ListStylePosition | readonly NonNullable<import("csstype").Property.ListStylePosition>[] | readonly import("csstype").Property.ListStylePosition[];
        listStyleType?: readonly string[] | import("csstype").Property.ListStyleType | readonly import("csstype").Property.ListStyleType[];
        marginBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.MarginBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.MarginBlockEnd<string | number>>[];
        marginBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.MarginBlockStart<string | number> | readonly NonNullable<import("csstype").Property.MarginBlockStart<string | number>>[];
        marginBottom?: readonly (string | (string & {}))[] | import("csstype").Property.MarginBottom<string | number> | readonly NonNullable<import("csstype").Property.MarginBottom<string | number>>[];
        marginInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineEnd<string | number>>[];
        marginInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineStart<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineStart<string | number>>[];
        marginLeft?: readonly (string | (string & {}))[] | import("csstype").Property.MarginLeft<string | number> | readonly NonNullable<import("csstype").Property.MarginLeft<string | number>>[];
        marginRight?: readonly (string | (string & {}))[] | import("csstype").Property.MarginRight<string | number> | readonly NonNullable<import("csstype").Property.MarginRight<string | number>>[];
        marginTop?: readonly (string | (string & {}))[] | import("csstype").Property.MarginTop<string | number> | readonly NonNullable<import("csstype").Property.MarginTop<string | number>>[];
        marginTrim?: import("csstype").Property.MarginTrim | readonly NonNullable<import("csstype").Property.MarginTrim>[] | readonly import("csstype").Property.MarginTrim[];
        maskBorderMode?: import("csstype").Property.MaskBorderMode | readonly NonNullable<import("csstype").Property.MaskBorderMode>[] | readonly import("csstype").Property.MaskBorderMode[];
        maskBorderOutset?: readonly (string | (string & {}))[] | import("csstype").Property.MaskBorderOutset<string | number> | readonly NonNullable<import("csstype").Property.MaskBorderOutset<string | number>>[];
        maskBorderRepeat?: readonly string[] | import("csstype").Property.MaskBorderRepeat | readonly import("csstype").Property.MaskBorderRepeat[];
        maskBorderSlice?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.MaskBorderSlice | readonly NonNullable<import("csstype").Property.MaskBorderSlice>[];
        maskBorderSource?: readonly string[] | import("csstype").Property.MaskBorderSource | readonly import("csstype").Property.MaskBorderSource[];
        maskBorderWidth?: readonly (string | (string & {}))[] | import("csstype").Property.MaskBorderWidth<string | number> | readonly NonNullable<import("csstype").Property.MaskBorderWidth<string | number>>[];
        maskClip?: readonly string[] | import("csstype").Property.MaskClip | readonly import("csstype").Property.MaskClip[];
        maskComposite?: readonly string[] | import("csstype").Property.MaskComposite | readonly import("csstype").Property.MaskComposite[];
        maskImage?: readonly string[] | import("csstype").Property.MaskImage | readonly import("csstype").Property.MaskImage[];
        maskMode?: readonly string[] | import("csstype").Property.MaskMode | readonly import("csstype").Property.MaskMode[];
        maskOrigin?: readonly string[] | import("csstype").Property.MaskOrigin | readonly import("csstype").Property.MaskOrigin[];
        maskPosition?: readonly (string | (string & {}))[] | import("csstype").Property.MaskPosition<string | number> | readonly NonNullable<import("csstype").Property.MaskPosition<string | number>>[];
        maskRepeat?: readonly string[] | import("csstype").Property.MaskRepeat | readonly import("csstype").Property.MaskRepeat[];
        maskSize?: readonly (string | (string & {}))[] | import("csstype").Property.MaskSize<string | number> | readonly NonNullable<import("csstype").Property.MaskSize<string | number>>[];
        maskType?: import("csstype").Property.MaskType | readonly NonNullable<import("csstype").Property.MaskType>[] | readonly import("csstype").Property.MaskType[];
        masonryAutoFlow?: readonly string[] | import("csstype").Property.MasonryAutoFlow | readonly import("csstype").Property.MasonryAutoFlow[];
        mathDepth?: import("csstype").Property.MathDepth | readonly NonNullable<import("csstype").Property.MathDepth>[] | readonly ((string & {}) | import('csstype').Globals | "auto-add")[];
        mathShift?: import("csstype").Property.MathShift | readonly NonNullable<import("csstype").Property.MathShift>[] | readonly import("csstype").Property.MathShift[];
        mathStyle?: import("csstype").Property.MathStyle | readonly NonNullable<import("csstype").Property.MathStyle>[] | readonly import("csstype").Property.MathStyle[];
        maxBlockSize?: readonly (string | (string & {}))[] | import("csstype").Property.MaxBlockSize<string | number> | readonly NonNullable<import("csstype").Property.MaxBlockSize<string | number>>[];
        maxHeight?: readonly (string | (string & {}))[] | import("csstype").Property.MaxHeight<string | number> | readonly NonNullable<import("csstype").Property.MaxHeight<string | number>>[];
        maxInlineSize?: readonly (string | (string & {}))[] | import("csstype").Property.MaxInlineSize<string | number> | readonly NonNullable<import("csstype").Property.MaxInlineSize<string | number>>[];
        maxLines?: import("csstype").Property.MaxLines | readonly NonNullable<import("csstype").Property.MaxLines>[] | readonly ("none" | (string & {}) | import('csstype').Globals)[];
        maxWidth?: readonly (string | (string & {}))[] | import("csstype").Property.MaxWidth<string | number> | readonly NonNullable<import("csstype").Property.MaxWidth<string | number>>[];
        minBlockSize?: readonly (string | (string & {}))[] | import("csstype").Property.MinBlockSize<string | number> | readonly NonNullable<import("csstype").Property.MinBlockSize<string | number>>[];
        minHeight?: readonly (string | (string & {}))[] | import("csstype").Property.MinHeight<string | number> | readonly NonNullable<import("csstype").Property.MinHeight<string | number>>[];
        minInlineSize?: readonly (string | (string & {}))[] | import("csstype").Property.MinInlineSize<string | number> | readonly NonNullable<import("csstype").Property.MinInlineSize<string | number>>[];
        minWidth: string | number | readonly NonNullable<import("csstype").Property.MinWidth<string | number>>[];
        mixBlendMode?: import("csstype").Property.MixBlendMode | readonly NonNullable<import("csstype").Property.MixBlendMode>[] | readonly import("csstype").Property.MixBlendMode[];
        motionDistance?: readonly (string | (string & {}))[] | import("csstype").Property.OffsetDistance<string | number> | readonly NonNullable<import("csstype").Property.OffsetDistance<string | number>>[];
        motionPath?: readonly string[] | import("csstype").Property.OffsetPath | readonly import("csstype").Property.OffsetPath[];
        motionRotation?: readonly string[] | import("csstype").Property.OffsetRotate | readonly import("csstype").Property.OffsetRotate[];
        objectFit?: import("csstype").Property.ObjectFit | readonly NonNullable<import("csstype").Property.ObjectFit>[] | readonly import("csstype").Property.ObjectFit[];
        objectPosition?: readonly (string | (string & {}))[] | import("csstype").Property.ObjectPosition<string | number> | readonly NonNullable<import("csstype").Property.ObjectPosition<string | number>>[];
        offsetAnchor?: readonly (string | (string & {}))[] | import("csstype").Property.OffsetAnchor<string | number> | readonly NonNullable<import("csstype").Property.OffsetAnchor<string | number>>[];
        offsetDistance?: readonly (string | (string & {}))[] | import("csstype").Property.OffsetDistance<string | number> | readonly NonNullable<import("csstype").Property.OffsetDistance<string | number>>[];
        offsetPath?: readonly string[] | import("csstype").Property.OffsetPath | readonly import("csstype").Property.OffsetPath[];
        offsetPosition?: readonly (string | (string & {}))[] | import("csstype").Property.OffsetPosition<string | number> | readonly NonNullable<import("csstype").Property.OffsetPosition<string | number>>[];
        offsetRotate?: readonly string[] | import("csstype").Property.OffsetRotate | readonly import("csstype").Property.OffsetRotate[];
        offsetRotation?: readonly string[] | import("csstype").Property.OffsetRotate | readonly import("csstype").Property.OffsetRotate[];
        opacity?: import("csstype").Property.Opacity | readonly NonNullable<import("csstype").Property.Opacity>[] | readonly ((string & {}) | import('csstype').Globals)[];
        order?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.Order | readonly NonNullable<import("csstype").Property.Order>[];
        orphans?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.Orphans | readonly NonNullable<import("csstype").Property.Orphans>[];
        outlineColor?: readonly string[] | import("csstype").Property.OutlineColor | readonly import("csstype").Property.OutlineColor[];
        outlineOffset?: readonly string[] | import("csstype").Property.OutlineOffset<string | number> | readonly NonNullable<import("csstype").Property.OutlineOffset<string | number>>[];
        outlineStyle?: readonly string[] | import("csstype").Property.OutlineStyle | readonly import("csstype").Property.OutlineStyle[];
        outlineWidth?: readonly string[] | import("csstype").Property.OutlineWidth<string | number> | readonly NonNullable<import("csstype").Property.OutlineWidth<string | number>>[];
        overflowAnchor?: import("csstype").Property.OverflowAnchor | readonly NonNullable<import("csstype").Property.OverflowAnchor>[] | readonly import("csstype").Property.OverflowAnchor[];
        overflowBlock?: import("csstype").Property.OverflowBlock | readonly NonNullable<import("csstype").Property.OverflowBlock>[] | readonly import("csstype").Property.OverflowBlock[];
        overflowClipBox?: import("csstype").Property.OverflowClipBox | readonly NonNullable<import("csstype").Property.OverflowClipBox>[] | readonly import("csstype").Property.OverflowClipBox[];
        overflowClipMargin?: readonly (string | (string & {}))[] | import("csstype").Property.OverflowClipMargin<string | number> | readonly NonNullable<import("csstype").Property.OverflowClipMargin<string | number>>[];
        overflowInline?: import("csstype").Property.OverflowInline | readonly NonNullable<import("csstype").Property.OverflowInline>[] | readonly import("csstype").Property.OverflowInline[];
        overflowWrap?: import("csstype").Property.OverflowWrap | readonly NonNullable<import("csstype").Property.OverflowWrap>[] | readonly import("csstype").Property.OverflowWrap[];
        overflowX?: import("csstype").Property.OverflowX | readonly NonNullable<import("csstype").Property.OverflowX>[] | readonly import("csstype").Property.OverflowX[];
        overflowY?: import("csstype").Property.OverflowY | readonly NonNullable<import("csstype").Property.OverflowY>[] | readonly import("csstype").Property.OverflowY[];
        overlay?: import("csstype").Property.Overlay | readonly NonNullable<import("csstype").Property.Overlay>[] | readonly import("csstype").Property.Overlay[];
        overscrollBehaviorBlock?: import("csstype").Property.OverscrollBehaviorBlock | readonly NonNullable<import("csstype").Property.OverscrollBehaviorBlock>[] | readonly import("csstype").Property.OverscrollBehaviorBlock[];
        overscrollBehaviorInline?: import("csstype").Property.OverscrollBehaviorInline | readonly NonNullable<import("csstype").Property.OverscrollBehaviorInline>[] | readonly import("csstype").Property.OverscrollBehaviorInline[];
        overscrollBehaviorX?: import("csstype").Property.OverscrollBehaviorX | readonly NonNullable<import("csstype").Property.OverscrollBehaviorX>[] | readonly import("csstype").Property.OverscrollBehaviorX[];
        overscrollBehaviorY?: import("csstype").Property.OverscrollBehaviorY | readonly NonNullable<import("csstype").Property.OverscrollBehaviorY>[] | readonly import("csstype").Property.OverscrollBehaviorY[];
        paddingBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.PaddingBlockEnd<string | number>>[];
        paddingBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingBlockStart<string | number> | readonly NonNullable<import("csstype").Property.PaddingBlockStart<string | number>>[];
        paddingBottom?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingBottom<string | number> | readonly NonNullable<import("csstype").Property.PaddingBottom<string | number>>[];
        paddingInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineEnd<string | number>>[];
        paddingInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineStart<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineStart<string | number>>[];
        paddingLeft?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingLeft<string | number> | readonly NonNullable<import("csstype").Property.PaddingLeft<string | number>>[];
        paddingRight?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingRight<string | number> | readonly NonNullable<import("csstype").Property.PaddingRight<string | number>>[];
        paddingTop?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingTop<string | number> | readonly NonNullable<import("csstype").Property.PaddingTop<string | number>>[];
        page?: readonly string[] | import("csstype").Property.Page | readonly import("csstype").Property.Page[];
        pageBreakAfter?: import("csstype").Property.PageBreakAfter | readonly NonNullable<import("csstype").Property.PageBreakAfter>[] | readonly import("csstype").Property.PageBreakAfter[];
        pageBreakBefore?: import("csstype").Property.PageBreakBefore | readonly NonNullable<import("csstype").Property.PageBreakBefore>[] | readonly import("csstype").Property.PageBreakBefore[];
        pageBreakInside?: import("csstype").Property.PageBreakInside | readonly NonNullable<import("csstype").Property.PageBreakInside>[] | readonly import("csstype").Property.PageBreakInside[];
        paintOrder?: readonly string[] | import("csstype").Property.PaintOrder | readonly import("csstype").Property.PaintOrder[];
        perspective?: readonly string[] | import("csstype").Property.Perspective<string | number> | readonly NonNullable<import("csstype").Property.Perspective<string | number>>[];
        perspectiveOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.PerspectiveOrigin<string | number> | readonly NonNullable<import("csstype").Property.PerspectiveOrigin<string | number>>[];
        pointerEvents?: import("csstype").Property.PointerEvents | readonly NonNullable<import("csstype").Property.PointerEvents>[] | readonly import("csstype").Property.PointerEvents[];
        position?: import("csstype").Property.Position | readonly NonNullable<import("csstype").Property.Position>[] | readonly import("csstype").Property.Position[];
        printColorAdjust?: import("csstype").Property.PrintColorAdjust | readonly NonNullable<import("csstype").Property.PrintColorAdjust>[] | readonly import("csstype").Property.PrintColorAdjust[];
        quotes?: readonly string[] | import("csstype").Property.Quotes | readonly import("csstype").Property.Quotes[];
        resize?: import("csstype").Property.Resize | readonly NonNullable<import("csstype").Property.Resize>[] | readonly import("csstype").Property.Resize[];
        right?: readonly (string | (string & {}))[] | import("csstype").Property.Right<string | number> | readonly NonNullable<import("csstype").Property.Right<string | number>>[];
        rotate?: readonly string[] | import("csstype").Property.Rotate | readonly import("csstype").Property.Rotate[];
        rowGap?: readonly (string | (string & {}))[] | import("csstype").Property.RowGap<string | number> | readonly NonNullable<import("csstype").Property.RowGap<string | number>>[];
        rubyAlign?: import("csstype").Property.RubyAlign | readonly NonNullable<import("csstype").Property.RubyAlign>[] | readonly import("csstype").Property.RubyAlign[];
        rubyMerge?: import("csstype").Property.RubyMerge | readonly NonNullable<import("csstype").Property.RubyMerge>[] | readonly import("csstype").Property.RubyMerge[];
        rubyPosition?: readonly string[] | import("csstype").Property.RubyPosition | readonly import("csstype").Property.RubyPosition[];
        scale?: readonly ("none" | (string & {}) | import('csstype').Globals)[] | import("csstype").Property.Scale | readonly NonNullable<import("csstype").Property.Scale>[];
        scrollBehavior?: import("csstype").Property.ScrollBehavior | readonly NonNullable<import("csstype").Property.ScrollBehavior>[] | readonly import("csstype").Property.ScrollBehavior[];
        scrollMarginBlockEnd?: readonly string[] | import("csstype").Property.ScrollMarginBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginBlockEnd<string | number>>[];
        scrollMarginBlockStart?: readonly string[] | import("csstype").Property.ScrollMarginBlockStart<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginBlockStart<string | number>>[];
        scrollMarginBottom?: readonly string[] | import("csstype").Property.ScrollMarginBottom<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginBottom<string | number>>[];
        scrollMarginInlineEnd?: readonly string[] | import("csstype").Property.ScrollMarginInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginInlineEnd<string | number>>[];
        scrollMarginInlineStart?: readonly string[] | import("csstype").Property.ScrollMarginInlineStart<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginInlineStart<string | number>>[];
        scrollMarginLeft?: readonly string[] | import("csstype").Property.ScrollMarginLeft<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginLeft<string | number>>[];
        scrollMarginRight?: readonly string[] | import("csstype").Property.ScrollMarginRight<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginRight<string | number>>[];
        scrollMarginTop?: readonly string[] | import("csstype").Property.ScrollMarginTop<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginTop<string | number>>[];
        scrollPaddingBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingBlockEnd<string | number>>[];
        scrollPaddingBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingBlockStart<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingBlockStart<string | number>>[];
        scrollPaddingBottom?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingBottom<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingBottom<string | number>>[];
        scrollPaddingInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingInlineEnd<string | number>>[];
        scrollPaddingInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingInlineStart<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingInlineStart<string | number>>[];
        scrollPaddingLeft?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingLeft<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingLeft<string | number>>[];
        scrollPaddingRight?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingRight<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingRight<string | number>>[];
        scrollPaddingTop?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingTop<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingTop<string | number>>[];
        scrollSnapAlign?: readonly string[] | import("csstype").Property.ScrollSnapAlign | readonly import("csstype").Property.ScrollSnapAlign[];
        scrollSnapMarginBottom?: readonly string[] | import("csstype").Property.ScrollMarginBottom<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginBottom<string | number>>[];
        scrollSnapMarginLeft?: readonly string[] | import("csstype").Property.ScrollMarginLeft<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginLeft<string | number>>[];
        scrollSnapMarginRight?: readonly string[] | import("csstype").Property.ScrollMarginRight<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginRight<string | number>>[];
        scrollSnapMarginTop?: readonly string[] | import("csstype").Property.ScrollMarginTop<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginTop<string | number>>[];
        scrollSnapStop?: import("csstype").Property.ScrollSnapStop | readonly NonNullable<import("csstype").Property.ScrollSnapStop>[] | readonly import("csstype").Property.ScrollSnapStop[];
        scrollSnapType?: readonly string[] | import("csstype").Property.ScrollSnapType | readonly import("csstype").Property.ScrollSnapType[];
        scrollTimelineAxis?: readonly string[] | import("csstype").Property.ScrollTimelineAxis | readonly import("csstype").Property.ScrollTimelineAxis[];
        scrollTimelineName?: readonly string[] | import("csstype").Property.ScrollTimelineName | readonly import("csstype").Property.ScrollTimelineName[];
        scrollbarColor?: readonly string[] | import("csstype").Property.ScrollbarColor | readonly import("csstype").Property.ScrollbarColor[];
        scrollbarGutter?: readonly string[] | import("csstype").Property.ScrollbarGutter | readonly import("csstype").Property.ScrollbarGutter[];
        scrollbarWidth?: import("csstype").Property.ScrollbarWidth | readonly NonNullable<import("csstype").Property.ScrollbarWidth>[] | readonly import("csstype").Property.ScrollbarWidth[];
        shapeImageThreshold?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.ShapeImageThreshold | readonly NonNullable<import("csstype").Property.ShapeImageThreshold>[];
        shapeMargin?: readonly (string | (string & {}))[] | import("csstype").Property.ShapeMargin<string | number> | readonly NonNullable<import("csstype").Property.ShapeMargin<string | number>>[];
        shapeOutside?: readonly string[] | import("csstype").Property.ShapeOutside | readonly import("csstype").Property.ShapeOutside[];
        tabSize?: readonly (string | (string & {}))[] | import("csstype").Property.TabSize<string | number> | readonly NonNullable<import("csstype").Property.TabSize<string | number>>[];
        tableLayout?: import("csstype").Property.TableLayout | readonly NonNullable<import("csstype").Property.TableLayout>[] | readonly import("csstype").Property.TableLayout[];
        textAlign?: import("csstype").Property.TextAlign | readonly NonNullable<import("csstype").Property.TextAlign>[] | readonly import("csstype").Property.TextAlign[];
        textAlignLast?: import("csstype").Property.TextAlignLast | readonly NonNullable<import("csstype").Property.TextAlignLast>[] | readonly import("csstype").Property.TextAlignLast[];
        textCombineUpright?: readonly string[] | import("csstype").Property.TextCombineUpright | readonly import("csstype").Property.TextCombineUpright[];
        textDecorationColor?: readonly string[] | import("csstype").Property.TextDecorationColor | readonly import("csstype").Property.TextDecorationColor[];
        textDecorationLine?: readonly string[] | import("csstype").Property.TextDecorationLine | readonly import("csstype").Property.TextDecorationLine[];
        textDecorationSkip?: readonly string[] | import("csstype").Property.TextDecorationSkip | readonly import("csstype").Property.TextDecorationSkip[];
        textDecorationSkipInk?: import("csstype").Property.TextDecorationSkipInk | readonly NonNullable<import("csstype").Property.TextDecorationSkipInk>[] | readonly import("csstype").Property.TextDecorationSkipInk[];
        textDecorationStyle?: import("csstype").Property.TextDecorationStyle | readonly NonNullable<import("csstype").Property.TextDecorationStyle>[] | readonly import("csstype").Property.TextDecorationStyle[];
        textDecorationThickness?: readonly (string | (string & {}))[] | import("csstype").Property.TextDecorationThickness<string | number> | readonly NonNullable<import("csstype").Property.TextDecorationThickness<string | number>>[];
        textEmphasisColor?: readonly string[] | import("csstype").Property.TextEmphasisColor | readonly import("csstype").Property.TextEmphasisColor[];
        textEmphasisPosition?: readonly string[] | import("csstype").Property.TextEmphasisPosition | readonly import("csstype").Property.TextEmphasisPosition[];
        textEmphasisStyle?: readonly string[] | import("csstype").Property.TextEmphasisStyle | readonly import("csstype").Property.TextEmphasisStyle[];
        textIndent?: readonly (string | (string & {}))[] | import("csstype").Property.TextIndent<string | number> | readonly NonNullable<import("csstype").Property.TextIndent<string | number>>[];
        textJustify?: import("csstype").Property.TextJustify | readonly NonNullable<import("csstype").Property.TextJustify>[] | readonly import("csstype").Property.TextJustify[];
        textOrientation?: import("csstype").Property.TextOrientation | readonly NonNullable<import("csstype").Property.TextOrientation>[] | readonly import("csstype").Property.TextOrientation[];
        textOverflow?: readonly string[] | import("csstype").Property.TextOverflow | readonly import("csstype").Property.TextOverflow[];
        textRendering?: import("csstype").Property.TextRendering | readonly NonNullable<import("csstype").Property.TextRendering>[] | readonly import("csstype").Property.TextRendering[];
        textShadow?: readonly string[] | import("csstype").Property.TextShadow | readonly import("csstype").Property.TextShadow[];
        textSizeAdjust?: readonly string[] | import("csstype").Property.TextSizeAdjust | readonly import("csstype").Property.TextSizeAdjust[];
        textTransform?: import("csstype").Property.TextTransform | readonly NonNullable<import("csstype").Property.TextTransform>[] | readonly import("csstype").Property.TextTransform[];
        textUnderlineOffset?: readonly (string | (string & {}))[] | import("csstype").Property.TextUnderlineOffset<string | number> | readonly NonNullable<import("csstype").Property.TextUnderlineOffset<string | number>>[];
        textUnderlinePosition?: readonly string[] | import("csstype").Property.TextUnderlinePosition | readonly import("csstype").Property.TextUnderlinePosition[];
        textWrap?: import("csstype").Property.TextWrap | readonly NonNullable<import("csstype").Property.TextWrap>[] | readonly import("csstype").Property.TextWrap[];
        timelineScope?: readonly string[] | import("csstype").Property.TimelineScope | readonly import("csstype").Property.TimelineScope[];
        top?: readonly (string | (string & {}))[] | import("csstype").Property.Top<string | number> | readonly NonNullable<import("csstype").Property.Top<string | number>>[];
        touchAction?: readonly string[] | import("csstype").Property.TouchAction | readonly import("csstype").Property.TouchAction[];
        transform?: readonly string[] | import("csstype").Property.Transform | readonly import("csstype").Property.Transform[];
        transformBox?: import("csstype").Property.TransformBox | readonly NonNullable<import("csstype").Property.TransformBox>[] | readonly import("csstype").Property.TransformBox[];
        transformOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.TransformOrigin<string | number> | readonly NonNullable<import("csstype").Property.TransformOrigin<string | number>>[];
        transformStyle?: import("csstype").Property.TransformStyle | readonly NonNullable<import("csstype").Property.TransformStyle>[] | readonly import("csstype").Property.TransformStyle[];
        transitionBehavior?: readonly string[] | import("csstype").Property.TransitionBehavior | readonly import("csstype").Property.TransitionBehavior[];
        transitionDelay?: readonly string[] | import("csstype").Property.TransitionDelay<string & {}> | readonly import("csstype").Property.TransitionDelay<string & {}>[];
        transitionDuration?: readonly string[] | import("csstype").Property.TransitionDuration<string & {}> | readonly import("csstype").Property.TransitionDuration<string & {}>[];
        transitionProperty?: readonly string[] | import("csstype").Property.TransitionProperty | readonly import("csstype").Property.TransitionProperty[];
        transitionTimingFunction?: readonly string[] | import("csstype").Property.TransitionTimingFunction | readonly import("csstype").Property.TransitionTimingFunction[];
        translate?: readonly (string | (string & {}))[] | import("csstype").Property.Translate<string | number> | readonly NonNullable<import("csstype").Property.Translate<string | number>>[];
        unicodeBidi?: import("csstype").Property.UnicodeBidi | readonly NonNullable<import("csstype").Property.UnicodeBidi>[] | readonly import("csstype").Property.UnicodeBidi[];
        userSelect?: import("csstype").Property.UserSelect | readonly NonNullable<import("csstype").Property.UserSelect>[] | readonly import("csstype").Property.UserSelect[];
        verticalAlign?: readonly (string | (string & {}))[] | import("csstype").Property.VerticalAlign<string | number> | readonly NonNullable<import("csstype").Property.VerticalAlign<string | number>>[];
        viewTimelineAxis?: readonly string[] | import("csstype").Property.ViewTimelineAxis | readonly import("csstype").Property.ViewTimelineAxis[];
        viewTimelineInset?: readonly (string | (string & {}))[] | import("csstype").Property.ViewTimelineInset<string | number> | readonly NonNullable<import("csstype").Property.ViewTimelineInset<string | number>>[];
        viewTimelineName?: readonly string[] | import("csstype").Property.ViewTimelineName | readonly import("csstype").Property.ViewTimelineName[];
        viewTransitionName?: readonly string[] | import("csstype").Property.ViewTransitionName | readonly import("csstype").Property.ViewTransitionName[];
        visibility?: import("csstype").Property.Visibility | readonly NonNullable<import("csstype").Property.Visibility>[] | readonly import("csstype").Property.Visibility[];
        whiteSpace?: readonly string[] | import("csstype").Property.WhiteSpace | readonly import("csstype").Property.WhiteSpace[];
        whiteSpaceCollapse?: import("csstype").Property.WhiteSpaceCollapse | readonly NonNullable<import("csstype").Property.WhiteSpaceCollapse>[] | readonly import("csstype").Property.WhiteSpaceCollapse[];
        whiteSpaceTrim?: readonly string[] | import("csstype").Property.WhiteSpaceTrim | readonly import("csstype").Property.WhiteSpaceTrim[];
        widows?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.Widows | readonly NonNullable<import("csstype").Property.Widows>[];
        width?: import("csstype").Property.Width<string | number> | readonly NonNullable<import("csstype").Property.Width<string | number>>[] | readonly (string | (string & {}))[];
        willChange?: readonly string[] | import("csstype").Property.WillChange | readonly import("csstype").Property.WillChange[];
        wordBreak?: import("csstype").Property.WordBreak | readonly NonNullable<import("csstype").Property.WordBreak>[] | readonly import("csstype").Property.WordBreak[];
        wordSpacing?: readonly string[] | import("csstype").Property.WordSpacing<string | number> | readonly NonNullable<import("csstype").Property.WordSpacing<string | number>>[];
        wordWrap?: import("csstype").Property.WordWrap | readonly NonNullable<import("csstype").Property.WordWrap>[] | readonly import("csstype").Property.WordWrap[];
        writingMode?: import("csstype").Property.WritingMode | readonly NonNullable<import("csstype").Property.WritingMode>[] | readonly import("csstype").Property.WritingMode[];
        zIndex: number | (string & {}) | "inherit" | "-moz-initial" | "initial" | "revert" | "revert-layer" | "unset" | "auto" | readonly NonNullable<import("csstype").Property.ZIndex>[];
        zoom?: import("csstype").Property.Zoom | readonly NonNullable<import("csstype").Property.Zoom>[] | readonly ((string & {}) | "reset" | "normal" | import('csstype').Globals)[];
        all?: import('csstype').Globals | readonly NonNullable<import('csstype').Globals>[] | readonly import('csstype').Globals[];
        animation?: import("csstype").Property.Animation<string & {}> | readonly NonNullable<import("csstype").Property.Animation<string & {}>>[] | readonly ("none" | (string & {}) | "normal" | "reverse" | import('csstype').Globals | "auto" | "ease" | "ease-in" | "ease-in-out" | "ease-out" | "step-end" | "step-start" | "linear" | "alternate" | "alternate-reverse" | "backwards" | "both" | "forwards" | "infinite" | "paused" | "running")[];
        animationRange?: readonly (string | (string & {}))[] | import("csstype").Property.AnimationRange<string | number> | readonly NonNullable<import("csstype").Property.AnimationRange<string | number>>[];
        background: string | number | readonly NonNullable<import("csstype").Property.Background<string | number>>[];
        backgroundPosition?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundPosition<string | number> | readonly NonNullable<import("csstype").Property.BackgroundPosition<string | number>>[];
        border?: readonly (string | (string & {}))[] | import("csstype").Property.Border<string | number> | readonly NonNullable<import("csstype").Property.Border<string | number>>[];
        borderBlock?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBlock<string | number> | readonly NonNullable<import("csstype").Property.BorderBlock<string | number>>[];
        borderBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.BorderBlockEnd<string | number>>[];
        borderBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBlockStart<string | number> | readonly NonNullable<import("csstype").Property.BorderBlockStart<string | number>>[];
        borderBottom?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottom<string | number> | readonly NonNullable<import("csstype").Property.BorderBottom<string | number>>[];
        borderColor?: readonly string[] | import("csstype").Property.BorderColor | readonly import("csstype").Property.BorderColor[];
        borderImage?: import("csstype").Property.BorderImage | readonly NonNullable<import("csstype").Property.BorderImage>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space")[];
        borderInline?: readonly (string | (string & {}))[] | import("csstype").Property.BorderInline<string | number> | readonly NonNullable<import("csstype").Property.BorderInline<string | number>>[];
        borderInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.BorderInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineEnd<string | number>>[];
        borderInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.BorderInlineStart<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineStart<string | number>>[];
        borderLeft?: readonly (string | (string & {}))[] | import("csstype").Property.BorderLeft<string | number> | readonly NonNullable<import("csstype").Property.BorderLeft<string | number>>[];
        borderRadius: string | number | readonly NonNullable<import("csstype").Property.BorderRadius<string | number>>[];
        borderRight?: readonly (string | (string & {}))[] | import("csstype").Property.BorderRight<string | number> | readonly NonNullable<import("csstype").Property.BorderRight<string | number>>[];
        borderStyle?: readonly string[] | import("csstype").Property.BorderStyle | readonly import("csstype").Property.BorderStyle[];
        borderTop?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTop<string | number> | readonly NonNullable<import("csstype").Property.BorderTop<string | number>>[];
        borderWidth?: readonly (string | (string & {}))[] | import("csstype").Property.BorderWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderWidth<string | number>>[];
        caret?: readonly string[] | import("csstype").Property.Caret | readonly import("csstype").Property.Caret[];
        columnRule?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRule<string | number> | readonly NonNullable<import("csstype").Property.ColumnRule<string | number>>[];
        columns?: readonly (string | (string & {}))[] | import("csstype").Property.Columns<string | number> | readonly NonNullable<import("csstype").Property.Columns<string | number>>[];
        containIntrinsicSize?: readonly (string | (string & {}))[] | import("csstype").Property.ContainIntrinsicSize<string | number> | readonly NonNullable<import("csstype").Property.ContainIntrinsicSize<string | number>>[];
        container?: readonly string[] | import("csstype").Property.Container | readonly import("csstype").Property.Container[];
        flex?: readonly (string | (string & {}))[] | import("csstype").Property.Flex<string | number> | readonly NonNullable<import("csstype").Property.Flex<string | number>>[];
        flexFlow?: readonly string[] | import("csstype").Property.FlexFlow | readonly import("csstype").Property.FlexFlow[];
        font?: readonly string[] | import("csstype").Property.Font | readonly import("csstype").Property.Font[];
        gap?: readonly (string | (string & {}))[] | import("csstype").Property.Gap<string | number> | readonly NonNullable<import("csstype").Property.Gap<string | number>>[];
        grid?: readonly string[] | import("csstype").Property.Grid | readonly import("csstype").Property.Grid[];
        gridArea?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridArea | readonly NonNullable<import("csstype").Property.GridArea>[];
        gridColumn?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridColumn | readonly NonNullable<import("csstype").Property.GridColumn>[];
        gridRow?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridRow | readonly NonNullable<import("csstype").Property.GridRow>[];
        gridTemplate?: readonly string[] | import("csstype").Property.GridTemplate | readonly import("csstype").Property.GridTemplate[];
        inset?: readonly (string | (string & {}))[] | import("csstype").Property.Inset<string | number> | readonly NonNullable<import("csstype").Property.Inset<string | number>>[];
        insetBlock?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlock<string | number> | readonly NonNullable<import("csstype").Property.InsetBlock<string | number>>[];
        insetInline?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInline<string | number> | readonly NonNullable<import("csstype").Property.InsetInline<string | number>>[];
        lineClamp?: readonly ("none" | (string & {}) | import('csstype').Globals)[] | import("csstype").Property.LineClamp | readonly NonNullable<import("csstype").Property.LineClamp>[];
        listStyle?: readonly string[] | import("csstype").Property.ListStyle | readonly import("csstype").Property.ListStyle[];
        margin?: readonly (string | (string & {}))[] | import("csstype").Property.Margin<string | number> | readonly NonNullable<import("csstype").Property.Margin<string | number>>[];
        marginBlock?: readonly (string | (string & {}))[] | import("csstype").Property.MarginBlock<string | number> | readonly NonNullable<import("csstype").Property.MarginBlock<string | number>>[];
        marginInline?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInline<string | number> | readonly NonNullable<import("csstype").Property.MarginInline<string | number>>[];
        mask?: readonly (string | (string & {}))[] | import("csstype").Property.Mask<string | number> | readonly NonNullable<import("csstype").Property.Mask<string | number>>[];
        maskBorder?: import("csstype").Property.MaskBorder | readonly NonNullable<import("csstype").Property.MaskBorder>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space" | "alpha" | "luminance")[];
        motion?: readonly (string | (string & {}))[] | import("csstype").Property.Offset<string | number> | readonly NonNullable<import("csstype").Property.Offset<string | number>>[];
        offset?: readonly (string | (string & {}))[] | import("csstype").Property.Offset<string | number> | readonly NonNullable<import("csstype").Property.Offset<string | number>>[];
        outline?: readonly (string | (string & {}))[] | import("csstype").Property.Outline<string | number> | readonly NonNullable<import("csstype").Property.Outline<string | number>>[];
        overflow?: readonly string[] | import("csstype").Property.Overflow | readonly import("csstype").Property.Overflow[];
        overscrollBehavior?: readonly string[] | import("csstype").Property.OverscrollBehavior | readonly import("csstype").Property.OverscrollBehavior[];
        padding?: readonly (string | (string & {}))[] | import("csstype").Property.Padding<string | number> | readonly NonNullable<import("csstype").Property.Padding<string | number>>[];
        paddingBlock?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingBlock<string | number> | readonly NonNullable<import("csstype").Property.PaddingBlock<string | number>>[];
        paddingInline?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInline<string | number> | readonly NonNullable<import("csstype").Property.PaddingInline<string | number>>[];
        placeContent?: readonly string[] | import("csstype").Property.PlaceContent | readonly import("csstype").Property.PlaceContent[];
        placeItems?: readonly string[] | import("csstype").Property.PlaceItems | readonly import("csstype").Property.PlaceItems[];
        placeSelf?: readonly string[] | import("csstype").Property.PlaceSelf | readonly import("csstype").Property.PlaceSelf[];
        scrollMargin?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollMargin<string | number> | readonly NonNullable<import("csstype").Property.ScrollMargin<string | number>>[];
        scrollMarginBlock?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollMarginBlock<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginBlock<string | number>>[];
        scrollMarginInline?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollMarginInline<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginInline<string | number>>[];
        scrollPadding?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPadding<string | number> | readonly NonNullable<import("csstype").Property.ScrollPadding<string | number>>[];
        scrollPaddingBlock?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingBlock<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingBlock<string | number>>[];
        scrollPaddingInline?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingInline<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingInline<string | number>>[];
        scrollSnapMargin?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollMargin<string | number> | readonly NonNullable<import("csstype").Property.ScrollMargin<string | number>>[];
        scrollTimeline?: readonly string[] | import("csstype").Property.ScrollTimeline | readonly import("csstype").Property.ScrollTimeline[];
        textDecoration?: readonly (string | (string & {}))[] | import("csstype").Property.TextDecoration<string | number> | readonly NonNullable<import("csstype").Property.TextDecoration<string | number>>[];
        textEmphasis?: readonly string[] | import("csstype").Property.TextEmphasis | readonly import("csstype").Property.TextEmphasis[];
        transition?: readonly string[] | import("csstype").Property.Transition<string & {}> | readonly import("csstype").Property.Transition<string & {}>[];
        viewTimeline?: readonly string[] | import("csstype").Property.ViewTimeline | readonly import("csstype").Property.ViewTimeline[];
        MozAnimationDelay?: readonly string[] | import("csstype").Property.AnimationDelay<string & {}> | readonly import("csstype").Property.AnimationDelay<string & {}>[];
        MozAnimationDirection?: readonly string[] | import("csstype").Property.AnimationDirection | readonly import("csstype").Property.AnimationDirection[];
        MozAnimationDuration?: readonly string[] | import("csstype").Property.AnimationDuration<string & {}> | readonly import("csstype").Property.AnimationDuration<string & {}>[];
        MozAnimationFillMode?: readonly string[] | import("csstype").Property.AnimationFillMode | readonly import("csstype").Property.AnimationFillMode[];
        MozAnimationIterationCount?: import("csstype").Property.AnimationIterationCount | readonly NonNullable<import("csstype").Property.AnimationIterationCount>[] | readonly ((string & {}) | import('csstype').Globals | "infinite")[];
        MozAnimationName?: readonly string[] | import("csstype").Property.AnimationName | readonly import("csstype").Property.AnimationName[];
        MozAnimationPlayState?: readonly string[] | import("csstype").Property.AnimationPlayState | readonly import("csstype").Property.AnimationPlayState[];
        MozAnimationTimingFunction?: readonly string[] | import("csstype").Property.AnimationTimingFunction | readonly import("csstype").Property.AnimationTimingFunction[];
        MozAppearance?: import("csstype").Property.MozAppearance | readonly NonNullable<import("csstype").Property.MozAppearance>[] | readonly import("csstype").Property.MozAppearance[];
        MozBinding?: readonly string[] | import("csstype").Property.MozBinding | readonly import("csstype").Property.MozBinding[];
        MozBorderBottomColors?: readonly string[] | import("csstype").Property.MozBorderBottomColors | readonly import("csstype").Property.MozBorderBottomColors[];
        MozBorderEndColor?: readonly string[] | import("csstype").Property.BorderInlineEndColor | readonly import("csstype").Property.BorderInlineEndColor[];
        MozBorderEndStyle?: import("csstype").Property.BorderInlineEndStyle | readonly NonNullable<import("csstype").Property.BorderInlineEndStyle>[] | readonly import("csstype").Property.BorderInlineEndStyle[];
        MozBorderEndWidth?: readonly string[] | import("csstype").Property.BorderInlineEndWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineEndWidth<string | number>>[];
        MozBorderLeftColors?: readonly string[] | import("csstype").Property.MozBorderLeftColors | readonly import("csstype").Property.MozBorderLeftColors[];
        MozBorderRightColors?: readonly string[] | import("csstype").Property.MozBorderRightColors | readonly import("csstype").Property.MozBorderRightColors[];
        MozBorderStartColor?: readonly string[] | import("csstype").Property.BorderInlineStartColor | readonly import("csstype").Property.BorderInlineStartColor[];
        MozBorderStartStyle?: import("csstype").Property.BorderInlineStartStyle | readonly NonNullable<import("csstype").Property.BorderInlineStartStyle>[] | readonly import("csstype").Property.BorderInlineStartStyle[];
        MozBorderTopColors?: readonly string[] | import("csstype").Property.MozBorderTopColors | readonly import("csstype").Property.MozBorderTopColors[];
        MozBoxSizing?: import("csstype").Property.BoxSizing | readonly NonNullable<import("csstype").Property.BoxSizing>[] | readonly import("csstype").Property.BoxSizing[];
        MozColumnCount?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.ColumnCount | readonly NonNullable<import("csstype").Property.ColumnCount>[];
        MozColumnFill?: import("csstype").Property.ColumnFill | readonly NonNullable<import("csstype").Property.ColumnFill>[] | readonly import("csstype").Property.ColumnFill[];
        MozColumnRuleColor?: readonly string[] | import("csstype").Property.ColumnRuleColor | readonly import("csstype").Property.ColumnRuleColor[];
        MozColumnRuleStyle?: readonly string[] | import("csstype").Property.ColumnRuleStyle | readonly import("csstype").Property.ColumnRuleStyle[];
        MozColumnRuleWidth?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRuleWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnRuleWidth<string | number>>[];
        MozColumnWidth?: readonly string[] | import("csstype").Property.ColumnWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnWidth<string | number>>[];
        MozContextProperties?: readonly string[] | import("csstype").Property.MozContextProperties | readonly import("csstype").Property.MozContextProperties[];
        MozFontFeatureSettings?: readonly string[] | import("csstype").Property.FontFeatureSettings | readonly import("csstype").Property.FontFeatureSettings[];
        MozFontLanguageOverride?: readonly string[] | import("csstype").Property.FontLanguageOverride | readonly import("csstype").Property.FontLanguageOverride[];
        MozHyphens?: import("csstype").Property.Hyphens | readonly NonNullable<import("csstype").Property.Hyphens>[] | readonly import("csstype").Property.Hyphens[];
        MozImageRegion?: readonly string[] | import("csstype").Property.MozImageRegion | readonly import("csstype").Property.MozImageRegion[];
        MozMarginEnd?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineEnd<string | number>>[];
        MozMarginStart?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineStart<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineStart<string | number>>[];
        MozOrient?: import("csstype").Property.MozOrient | readonly NonNullable<import("csstype").Property.MozOrient>[] | readonly import("csstype").Property.MozOrient[];
        MozOsxFontSmoothing?: readonly string[] | import("csstype").Property.FontSmooth<string | number> | readonly NonNullable<import("csstype").Property.FontSmooth<string | number>>[];
        MozOutlineRadiusBottomleft?: readonly (string | (string & {}))[] | import("csstype").Property.MozOutlineRadiusBottomleft<string | number> | readonly NonNullable<import("csstype").Property.MozOutlineRadiusBottomleft<string | number>>[];
        MozOutlineRadiusBottomright?: readonly (string | (string & {}))[] | import("csstype").Property.MozOutlineRadiusBottomright<string | number> | readonly NonNullable<import("csstype").Property.MozOutlineRadiusBottomright<string | number>>[];
        MozOutlineRadiusTopleft?: readonly (string | (string & {}))[] | import("csstype").Property.MozOutlineRadiusTopleft<string | number> | readonly NonNullable<import("csstype").Property.MozOutlineRadiusTopleft<string | number>>[];
        MozOutlineRadiusTopright?: readonly (string | (string & {}))[] | import("csstype").Property.MozOutlineRadiusTopright<string | number> | readonly NonNullable<import("csstype").Property.MozOutlineRadiusTopright<string | number>>[];
        MozPaddingEnd?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineEnd<string | number>>[];
        MozPaddingStart?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineStart<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineStart<string | number>>[];
        MozStackSizing?: import("csstype").Property.MozStackSizing | readonly NonNullable<import("csstype").Property.MozStackSizing>[] | readonly import("csstype").Property.MozStackSizing[];
        MozTabSize?: readonly (string | (string & {}))[] | import("csstype").Property.TabSize<string | number> | readonly NonNullable<import("csstype").Property.TabSize<string | number>>[];
        MozTextBlink?: import("csstype").Property.MozTextBlink | readonly NonNullable<import("csstype").Property.MozTextBlink>[] | readonly import("csstype").Property.MozTextBlink[];
        MozTextSizeAdjust?: readonly string[] | import("csstype").Property.TextSizeAdjust | readonly import("csstype").Property.TextSizeAdjust[];
        MozUserFocus?: import("csstype").Property.MozUserFocus | readonly NonNullable<import("csstype").Property.MozUserFocus>[] | readonly import("csstype").Property.MozUserFocus[];
        MozUserModify?: import("csstype").Property.MozUserModify | readonly NonNullable<import("csstype").Property.MozUserModify>[] | readonly import("csstype").Property.MozUserModify[];
        MozUserSelect?: import("csstype").Property.UserSelect | readonly NonNullable<import("csstype").Property.UserSelect>[] | readonly import("csstype").Property.UserSelect[];
        MozWindowDragging?: import("csstype").Property.MozWindowDragging | readonly NonNullable<import("csstype").Property.MozWindowDragging>[] | readonly import("csstype").Property.MozWindowDragging[];
        MozWindowShadow?: import("csstype").Property.MozWindowShadow | readonly NonNullable<import("csstype").Property.MozWindowShadow>[] | readonly import("csstype").Property.MozWindowShadow[];
        msAccelerator?: import("csstype").Property.MsAccelerator | readonly NonNullable<import("csstype").Property.MsAccelerator>[] | readonly import("csstype").Property.MsAccelerator[];
        msBlockProgression?: import("csstype").Property.MsBlockProgression | readonly NonNullable<import("csstype").Property.MsBlockProgression>[] | readonly import("csstype").Property.MsBlockProgression[];
        msContentZoomChaining?: import("csstype").Property.MsContentZoomChaining | readonly NonNullable<import("csstype").Property.MsContentZoomChaining>[] | readonly import("csstype").Property.MsContentZoomChaining[];
        msContentZoomLimitMax?: readonly string[] | import("csstype").Property.MsContentZoomLimitMax | readonly import("csstype").Property.MsContentZoomLimitMax[];
        msContentZoomLimitMin?: readonly string[] | import("csstype").Property.MsContentZoomLimitMin | readonly import("csstype").Property.MsContentZoomLimitMin[];
        msContentZoomSnapPoints?: readonly string[] | import("csstype").Property.MsContentZoomSnapPoints | readonly import("csstype").Property.MsContentZoomSnapPoints[];
        msContentZoomSnapType?: import("csstype").Property.MsContentZoomSnapType | readonly NonNullable<import("csstype").Property.MsContentZoomSnapType>[] | readonly import("csstype").Property.MsContentZoomSnapType[];
        msContentZooming?: import("csstype").Property.MsContentZooming | readonly NonNullable<import("csstype").Property.MsContentZooming>[] | readonly import("csstype").Property.MsContentZooming[];
        msFilter?: readonly string[] | import("csstype").Property.MsFilter | readonly import("csstype").Property.MsFilter[];
        msFlexDirection?: import("csstype").Property.FlexDirection | readonly NonNullable<import("csstype").Property.FlexDirection>[] | readonly import("csstype").Property.FlexDirection[];
        msFlexPositive?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FlexGrow | readonly NonNullable<import("csstype").Property.FlexGrow>[];
        msFlowFrom?: readonly string[] | import("csstype").Property.MsFlowFrom | readonly import("csstype").Property.MsFlowFrom[];
        msFlowInto?: readonly string[] | import("csstype").Property.MsFlowInto | readonly import("csstype").Property.MsFlowInto[];
        msGridColumns?: readonly (string | (string & {}))[] | import("csstype").Property.MsGridColumns<string | number> | readonly NonNullable<import("csstype").Property.MsGridColumns<string | number>>[];
        msGridRows?: readonly (string | (string & {}))[] | import("csstype").Property.MsGridRows<string | number> | readonly NonNullable<import("csstype").Property.MsGridRows<string | number>>[];
        msHighContrastAdjust?: import("csstype").Property.MsHighContrastAdjust | readonly NonNullable<import("csstype").Property.MsHighContrastAdjust>[] | readonly import("csstype").Property.MsHighContrastAdjust[];
        msHyphenateLimitChars?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.MsHyphenateLimitChars | readonly NonNullable<import("csstype").Property.MsHyphenateLimitChars>[];
        msHyphenateLimitLines?: import("csstype").Property.MsHyphenateLimitLines | readonly NonNullable<import("csstype").Property.MsHyphenateLimitLines>[] | readonly ((string & {}) | import('csstype').Globals | "no-limit")[];
        msHyphenateLimitZone?: readonly (string | (string & {}))[] | import("csstype").Property.MsHyphenateLimitZone<string | number> | readonly NonNullable<import("csstype").Property.MsHyphenateLimitZone<string | number>>[];
        msHyphens?: import("csstype").Property.Hyphens | readonly NonNullable<import("csstype").Property.Hyphens>[] | readonly import("csstype").Property.Hyphens[];
        msImeAlign?: import("csstype").Property.MsImeAlign | readonly NonNullable<import("csstype").Property.MsImeAlign>[] | readonly import("csstype").Property.MsImeAlign[];
        msLineBreak?: import("csstype").Property.LineBreak | readonly NonNullable<import("csstype").Property.LineBreak>[] | readonly import("csstype").Property.LineBreak[];
        msOrder?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.Order | readonly NonNullable<import("csstype").Property.Order>[];
        msOverflowStyle?: import("csstype").Property.MsOverflowStyle | readonly NonNullable<import("csstype").Property.MsOverflowStyle>[] | readonly import("csstype").Property.MsOverflowStyle[];
        msOverflowX?: import("csstype").Property.OverflowX | readonly NonNullable<import("csstype").Property.OverflowX>[] | readonly import("csstype").Property.OverflowX[];
        msOverflowY?: import("csstype").Property.OverflowY | readonly NonNullable<import("csstype").Property.OverflowY>[] | readonly import("csstype").Property.OverflowY[];
        msScrollChaining?: import("csstype").Property.MsScrollChaining | readonly NonNullable<import("csstype").Property.MsScrollChaining>[] | readonly import("csstype").Property.MsScrollChaining[];
        msScrollLimitXMax?: readonly string[] | import("csstype").Property.MsScrollLimitXMax<string | number> | readonly NonNullable<import("csstype").Property.MsScrollLimitXMax<string | number>>[];
        msScrollLimitXMin?: readonly string[] | import("csstype").Property.MsScrollLimitXMin<string | number> | readonly NonNullable<import("csstype").Property.MsScrollLimitXMin<string | number>>[];
        msScrollLimitYMax?: readonly string[] | import("csstype").Property.MsScrollLimitYMax<string | number> | readonly NonNullable<import("csstype").Property.MsScrollLimitYMax<string | number>>[];
        msScrollLimitYMin?: readonly string[] | import("csstype").Property.MsScrollLimitYMin<string | number> | readonly NonNullable<import("csstype").Property.MsScrollLimitYMin<string | number>>[];
        msScrollRails?: import("csstype").Property.MsScrollRails | readonly NonNullable<import("csstype").Property.MsScrollRails>[] | readonly import("csstype").Property.MsScrollRails[];
        msScrollSnapPointsX?: readonly string[] | import("csstype").Property.MsScrollSnapPointsX | readonly import("csstype").Property.MsScrollSnapPointsX[];
        msScrollSnapPointsY?: readonly string[] | import("csstype").Property.MsScrollSnapPointsY | readonly import("csstype").Property.MsScrollSnapPointsY[];
        msScrollSnapType?: import("csstype").Property.MsScrollSnapType | readonly NonNullable<import("csstype").Property.MsScrollSnapType>[] | readonly import("csstype").Property.MsScrollSnapType[];
        msScrollTranslation?: import("csstype").Property.MsScrollTranslation | readonly NonNullable<import("csstype").Property.MsScrollTranslation>[] | readonly import("csstype").Property.MsScrollTranslation[];
        msScrollbar3dlightColor?: readonly string[] | import("csstype").Property.MsScrollbar3dlightColor | readonly import("csstype").Property.MsScrollbar3dlightColor[];
        msScrollbarArrowColor?: readonly string[] | import("csstype").Property.MsScrollbarArrowColor | readonly import("csstype").Property.MsScrollbarArrowColor[];
        msScrollbarBaseColor?: readonly string[] | import("csstype").Property.MsScrollbarBaseColor | readonly import("csstype").Property.MsScrollbarBaseColor[];
        msScrollbarDarkshadowColor?: readonly string[] | import("csstype").Property.MsScrollbarDarkshadowColor | readonly import("csstype").Property.MsScrollbarDarkshadowColor[];
        msScrollbarFaceColor?: readonly string[] | import("csstype").Property.MsScrollbarFaceColor | readonly import("csstype").Property.MsScrollbarFaceColor[];
        msScrollbarHighlightColor?: readonly string[] | import("csstype").Property.MsScrollbarHighlightColor | readonly import("csstype").Property.MsScrollbarHighlightColor[];
        msScrollbarShadowColor?: readonly string[] | import("csstype").Property.MsScrollbarShadowColor | readonly import("csstype").Property.MsScrollbarShadowColor[];
        msScrollbarTrackColor?: readonly string[] | import("csstype").Property.MsScrollbarTrackColor | readonly import("csstype").Property.MsScrollbarTrackColor[];
        msTextAutospace?: import("csstype").Property.MsTextAutospace | readonly NonNullable<import("csstype").Property.MsTextAutospace>[] | readonly import("csstype").Property.MsTextAutospace[];
        msTextCombineHorizontal?: readonly string[] | import("csstype").Property.TextCombineUpright | readonly import("csstype").Property.TextCombineUpright[];
        msTextOverflow?: readonly string[] | import("csstype").Property.TextOverflow | readonly import("csstype").Property.TextOverflow[];
        msTouchAction?: readonly string[] | import("csstype").Property.TouchAction | readonly import("csstype").Property.TouchAction[];
        msTouchSelect?: import("csstype").Property.MsTouchSelect | readonly NonNullable<import("csstype").Property.MsTouchSelect>[] | readonly import("csstype").Property.MsTouchSelect[];
        msTransform?: readonly string[] | import("csstype").Property.Transform | readonly import("csstype").Property.Transform[];
        msTransformOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.TransformOrigin<string | number> | readonly NonNullable<import("csstype").Property.TransformOrigin<string | number>>[];
        msTransitionDelay?: readonly string[] | import("csstype").Property.TransitionDelay<string & {}> | readonly import("csstype").Property.TransitionDelay<string & {}>[];
        msTransitionDuration?: readonly string[] | import("csstype").Property.TransitionDuration<string & {}> | readonly import("csstype").Property.TransitionDuration<string & {}>[];
        msTransitionProperty?: readonly string[] | import("csstype").Property.TransitionProperty | readonly import("csstype").Property.TransitionProperty[];
        msTransitionTimingFunction?: readonly string[] | import("csstype").Property.TransitionTimingFunction | readonly import("csstype").Property.TransitionTimingFunction[];
        msUserSelect?: import("csstype").Property.MsUserSelect | readonly NonNullable<import("csstype").Property.MsUserSelect>[] | readonly import("csstype").Property.MsUserSelect[];
        msWordBreak?: import("csstype").Property.WordBreak | readonly NonNullable<import("csstype").Property.WordBreak>[] | readonly import("csstype").Property.WordBreak[];
        msWrapFlow?: import("csstype").Property.MsWrapFlow | readonly NonNullable<import("csstype").Property.MsWrapFlow>[] | readonly import("csstype").Property.MsWrapFlow[];
        msWrapMargin?: readonly string[] | import("csstype").Property.MsWrapMargin<string | number> | readonly NonNullable<import("csstype").Property.MsWrapMargin<string | number>>[];
        msWrapThrough?: import("csstype").Property.MsWrapThrough | readonly NonNullable<import("csstype").Property.MsWrapThrough>[] | readonly import("csstype").Property.MsWrapThrough[];
        msWritingMode?: import("csstype").Property.WritingMode | readonly NonNullable<import("csstype").Property.WritingMode>[] | readonly import("csstype").Property.WritingMode[];
        WebkitAlignContent?: readonly string[] | import("csstype").Property.AlignContent | readonly import("csstype").Property.AlignContent[];
        WebkitAlignItems?: readonly string[] | import("csstype").Property.AlignItems | readonly import("csstype").Property.AlignItems[];
        WebkitAlignSelf?: readonly string[] | import("csstype").Property.AlignSelf | readonly import("csstype").Property.AlignSelf[];
        WebkitAnimationDelay?: readonly string[] | import("csstype").Property.AnimationDelay<string & {}> | readonly import("csstype").Property.AnimationDelay<string & {}>[];
        WebkitAnimationDirection?: readonly string[] | import("csstype").Property.AnimationDirection | readonly import("csstype").Property.AnimationDirection[];
        WebkitAnimationDuration?: readonly string[] | import("csstype").Property.AnimationDuration<string & {}> | readonly import("csstype").Property.AnimationDuration<string & {}>[];
        WebkitAnimationFillMode?: readonly string[] | import("csstype").Property.AnimationFillMode | readonly import("csstype").Property.AnimationFillMode[];
        WebkitAnimationIterationCount?: import("csstype").Property.AnimationIterationCount | readonly NonNullable<import("csstype").Property.AnimationIterationCount>[] | readonly ((string & {}) | import('csstype').Globals | "infinite")[];
        WebkitAnimationName?: readonly string[] | import("csstype").Property.AnimationName | readonly import("csstype").Property.AnimationName[];
        WebkitAnimationPlayState?: readonly string[] | import("csstype").Property.AnimationPlayState | readonly import("csstype").Property.AnimationPlayState[];
        WebkitAnimationTimingFunction?: readonly string[] | import("csstype").Property.AnimationTimingFunction | readonly import("csstype").Property.AnimationTimingFunction[];
        WebkitAppearance?: import("csstype").Property.WebkitAppearance | readonly NonNullable<import("csstype").Property.WebkitAppearance>[] | readonly import("csstype").Property.WebkitAppearance[];
        WebkitBackdropFilter?: readonly string[] | import("csstype").Property.BackdropFilter | readonly import("csstype").Property.BackdropFilter[];
        WebkitBackfaceVisibility?: import("csstype").Property.BackfaceVisibility | readonly NonNullable<import("csstype").Property.BackfaceVisibility>[] | readonly import("csstype").Property.BackfaceVisibility[];
        WebkitBackgroundClip?: readonly string[] | import("csstype").Property.BackgroundClip | readonly import("csstype").Property.BackgroundClip[];
        WebkitBackgroundOrigin?: readonly string[] | import("csstype").Property.BackgroundOrigin | readonly import("csstype").Property.BackgroundOrigin[];
        WebkitBackgroundSize?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundSize<string | number> | readonly NonNullable<import("csstype").Property.BackgroundSize<string | number>>[];
        WebkitBorderBeforeColor?: readonly string[] | import("csstype").Property.WebkitBorderBeforeColor | readonly import("csstype").Property.WebkitBorderBeforeColor[];
        WebkitBorderBeforeStyle?: readonly string[] | import("csstype").Property.WebkitBorderBeforeStyle | readonly import("csstype").Property.WebkitBorderBeforeStyle[];
        WebkitBorderBeforeWidth?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitBorderBeforeWidth<string | number> | readonly NonNullable<import("csstype").Property.WebkitBorderBeforeWidth<string | number>>[];
        WebkitBorderBottomLeftRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomLeftRadius<string | number>>[];
        WebkitBorderBottomRightRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomRightRadius<string | number>>[];
        WebkitBorderImageSlice?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BorderImageSlice | readonly NonNullable<import("csstype").Property.BorderImageSlice>[];
        WebkitBorderTopLeftRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopLeftRadius<string | number>>[];
        WebkitBorderTopRightRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopRightRadius<string | number>>[];
        WebkitBoxDecorationBreak?: import("csstype").Property.BoxDecorationBreak | readonly NonNullable<import("csstype").Property.BoxDecorationBreak>[] | readonly import("csstype").Property.BoxDecorationBreak[];
        WebkitBoxReflect?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitBoxReflect<string | number> | readonly NonNullable<import("csstype").Property.WebkitBoxReflect<string | number>>[];
        WebkitBoxShadow?: readonly string[] | import("csstype").Property.BoxShadow | readonly import("csstype").Property.BoxShadow[];
        WebkitBoxSizing?: import("csstype").Property.BoxSizing | readonly NonNullable<import("csstype").Property.BoxSizing>[] | readonly import("csstype").Property.BoxSizing[];
        WebkitClipPath?: readonly string[] | import("csstype").Property.ClipPath | readonly import("csstype").Property.ClipPath[];
        WebkitColumnCount?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.ColumnCount | readonly NonNullable<import("csstype").Property.ColumnCount>[];
        WebkitColumnFill?: import("csstype").Property.ColumnFill | readonly NonNullable<import("csstype").Property.ColumnFill>[] | readonly import("csstype").Property.ColumnFill[];
        WebkitColumnRuleColor?: readonly string[] | import("csstype").Property.ColumnRuleColor | readonly import("csstype").Property.ColumnRuleColor[];
        WebkitColumnRuleStyle?: readonly string[] | import("csstype").Property.ColumnRuleStyle | readonly import("csstype").Property.ColumnRuleStyle[];
        WebkitColumnRuleWidth?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRuleWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnRuleWidth<string | number>>[];
        WebkitColumnSpan?: import("csstype").Property.ColumnSpan | readonly NonNullable<import("csstype").Property.ColumnSpan>[] | readonly import("csstype").Property.ColumnSpan[];
        WebkitColumnWidth?: readonly string[] | import("csstype").Property.ColumnWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnWidth<string | number>>[];
        WebkitFilter?: readonly string[] | import("csstype").Property.Filter | readonly import("csstype").Property.Filter[];
        WebkitFlexBasis?: readonly (string | (string & {}))[] | import("csstype").Property.FlexBasis<string | number> | readonly NonNullable<import("csstype").Property.FlexBasis<string | number>>[];
        WebkitFlexDirection?: import("csstype").Property.FlexDirection | readonly NonNullable<import("csstype").Property.FlexDirection>[] | readonly import("csstype").Property.FlexDirection[];
        WebkitFlexGrow?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FlexGrow | readonly NonNullable<import("csstype").Property.FlexGrow>[];
        WebkitFlexShrink?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FlexShrink | readonly NonNullable<import("csstype").Property.FlexShrink>[];
        WebkitFlexWrap?: import("csstype").Property.FlexWrap | readonly NonNullable<import("csstype").Property.FlexWrap>[] | readonly import("csstype").Property.FlexWrap[];
        WebkitFontFeatureSettings?: readonly string[] | import("csstype").Property.FontFeatureSettings | readonly import("csstype").Property.FontFeatureSettings[];
        WebkitFontKerning?: import("csstype").Property.FontKerning | readonly NonNullable<import("csstype").Property.FontKerning>[] | readonly import("csstype").Property.FontKerning[];
        WebkitFontSmoothing?: readonly string[] | import("csstype").Property.FontSmooth<string | number> | readonly NonNullable<import("csstype").Property.FontSmooth<string | number>>[];
        WebkitFontVariantLigatures?: readonly string[] | import("csstype").Property.FontVariantLigatures | readonly import("csstype").Property.FontVariantLigatures[];
        WebkitHyphenateCharacter?: readonly string[] | import("csstype").Property.HyphenateCharacter | readonly import("csstype").Property.HyphenateCharacter[];
        WebkitHyphens?: import("csstype").Property.Hyphens | readonly NonNullable<import("csstype").Property.Hyphens>[] | readonly import("csstype").Property.Hyphens[];
        WebkitInitialLetter?: import("csstype").Property.InitialLetter | readonly NonNullable<import("csstype").Property.InitialLetter>[] | readonly ((string & {}) | "normal" | import('csstype').Globals)[];
        WebkitJustifyContent?: readonly string[] | import("csstype").Property.JustifyContent | readonly import("csstype").Property.JustifyContent[];
        WebkitLineBreak?: import("csstype").Property.LineBreak | readonly NonNullable<import("csstype").Property.LineBreak>[] | readonly import("csstype").Property.LineBreak[];
        WebkitLineClamp?: readonly ("none" | (string & {}) | import('csstype').Globals)[] | import("csstype").Property.WebkitLineClamp | readonly NonNullable<import("csstype").Property.WebkitLineClamp>[];
        WebkitMarginEnd?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineEnd<string | number>>[];
        WebkitMarginStart?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineStart<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineStart<string | number>>[];
        WebkitMaskAttachment?: readonly string[] | import("csstype").Property.WebkitMaskAttachment | readonly import("csstype").Property.WebkitMaskAttachment[];
        WebkitMaskBoxImageOutset?: readonly (string | (string & {}))[] | import("csstype").Property.MaskBorderOutset<string | number> | readonly NonNullable<import("csstype").Property.MaskBorderOutset<string | number>>[];
        WebkitMaskBoxImageRepeat?: readonly string[] | import("csstype").Property.MaskBorderRepeat | readonly import("csstype").Property.MaskBorderRepeat[];
        WebkitMaskBoxImageSlice?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.MaskBorderSlice | readonly NonNullable<import("csstype").Property.MaskBorderSlice>[];
        WebkitMaskBoxImageSource?: readonly string[] | import("csstype").Property.MaskBorderSource | readonly import("csstype").Property.MaskBorderSource[];
        WebkitMaskBoxImageWidth?: readonly (string | (string & {}))[] | import("csstype").Property.MaskBorderWidth<string | number> | readonly NonNullable<import("csstype").Property.MaskBorderWidth<string | number>>[];
        WebkitMaskClip?: readonly string[] | import("csstype").Property.WebkitMaskClip | readonly import("csstype").Property.WebkitMaskClip[];
        WebkitMaskComposite?: readonly string[] | import("csstype").Property.WebkitMaskComposite | readonly import("csstype").Property.WebkitMaskComposite[];
        WebkitMaskImage?: readonly string[] | import("csstype").Property.WebkitMaskImage | readonly import("csstype").Property.WebkitMaskImage[];
        WebkitMaskOrigin?: readonly string[] | import("csstype").Property.WebkitMaskOrigin | readonly import("csstype").Property.WebkitMaskOrigin[];
        WebkitMaskPosition?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitMaskPosition<string | number> | readonly NonNullable<import("csstype").Property.WebkitMaskPosition<string | number>>[];
        WebkitMaskPositionX?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitMaskPositionX<string | number> | readonly NonNullable<import("csstype").Property.WebkitMaskPositionX<string | number>>[];
        WebkitMaskPositionY?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitMaskPositionY<string | number> | readonly NonNullable<import("csstype").Property.WebkitMaskPositionY<string | number>>[];
        WebkitMaskRepeat?: readonly string[] | import("csstype").Property.WebkitMaskRepeat | readonly import("csstype").Property.WebkitMaskRepeat[];
        WebkitMaskRepeatX?: import("csstype").Property.WebkitMaskRepeatX | readonly NonNullable<import("csstype").Property.WebkitMaskRepeatX>[] | readonly import("csstype").Property.WebkitMaskRepeatX[];
        WebkitMaskRepeatY?: import("csstype").Property.WebkitMaskRepeatY | readonly NonNullable<import("csstype").Property.WebkitMaskRepeatY>[] | readonly import("csstype").Property.WebkitMaskRepeatY[];
        WebkitMaskSize?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitMaskSize<string | number> | readonly NonNullable<import("csstype").Property.WebkitMaskSize<string | number>>[];
        WebkitMaxInlineSize?: readonly (string | (string & {}))[] | import("csstype").Property.MaxInlineSize<string | number> | readonly NonNullable<import("csstype").Property.MaxInlineSize<string | number>>[];
        WebkitOrder?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.Order | readonly NonNullable<import("csstype").Property.Order>[];
        WebkitOverflowScrolling?: import("csstype").Property.WebkitOverflowScrolling | readonly NonNullable<import("csstype").Property.WebkitOverflowScrolling>[] | readonly import("csstype").Property.WebkitOverflowScrolling[];
        WebkitPaddingEnd?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineEnd<string | number>>[];
        WebkitPaddingStart?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineStart<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineStart<string | number>>[];
        WebkitPerspective?: readonly string[] | import("csstype").Property.Perspective<string | number> | readonly NonNullable<import("csstype").Property.Perspective<string | number>>[];
        WebkitPerspectiveOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.PerspectiveOrigin<string | number> | readonly NonNullable<import("csstype").Property.PerspectiveOrigin<string | number>>[];
        WebkitPrintColorAdjust?: import("csstype").Property.PrintColorAdjust | readonly NonNullable<import("csstype").Property.PrintColorAdjust>[] | readonly import("csstype").Property.PrintColorAdjust[];
        WebkitRubyPosition?: readonly string[] | import("csstype").Property.RubyPosition | readonly import("csstype").Property.RubyPosition[];
        WebkitScrollSnapType?: readonly string[] | import("csstype").Property.ScrollSnapType | readonly import("csstype").Property.ScrollSnapType[];
        WebkitShapeMargin?: readonly (string | (string & {}))[] | import("csstype").Property.ShapeMargin<string | number> | readonly NonNullable<import("csstype").Property.ShapeMargin<string | number>>[];
        WebkitTapHighlightColor?: readonly string[] | import("csstype").Property.WebkitTapHighlightColor | readonly import("csstype").Property.WebkitTapHighlightColor[];
        WebkitTextCombine?: readonly string[] | import("csstype").Property.TextCombineUpright | readonly import("csstype").Property.TextCombineUpright[];
        WebkitTextDecorationColor?: readonly string[] | import("csstype").Property.TextDecorationColor | readonly import("csstype").Property.TextDecorationColor[];
        WebkitTextDecorationLine?: readonly string[] | import("csstype").Property.TextDecorationLine | readonly import("csstype").Property.TextDecorationLine[];
        WebkitTextDecorationSkip?: readonly string[] | import("csstype").Property.TextDecorationSkip | readonly import("csstype").Property.TextDecorationSkip[];
        WebkitTextDecorationStyle?: import("csstype").Property.TextDecorationStyle | readonly NonNullable<import("csstype").Property.TextDecorationStyle>[] | readonly import("csstype").Property.TextDecorationStyle[];
        WebkitTextEmphasisColor?: readonly string[] | import("csstype").Property.TextEmphasisColor | readonly import("csstype").Property.TextEmphasisColor[];
        WebkitTextEmphasisPosition?: readonly string[] | import("csstype").Property.TextEmphasisPosition | readonly import("csstype").Property.TextEmphasisPosition[];
        WebkitTextEmphasisStyle?: readonly string[] | import("csstype").Property.TextEmphasisStyle | readonly import("csstype").Property.TextEmphasisStyle[];
        WebkitTextFillColor?: readonly string[] | import("csstype").Property.WebkitTextFillColor | readonly import("csstype").Property.WebkitTextFillColor[];
        WebkitTextOrientation?: import("csstype").Property.TextOrientation | readonly NonNullable<import("csstype").Property.TextOrientation>[] | readonly import("csstype").Property.TextOrientation[];
        WebkitTextSizeAdjust?: readonly string[] | import("csstype").Property.TextSizeAdjust | readonly import("csstype").Property.TextSizeAdjust[];
        WebkitTextStrokeColor?: readonly string[] | import("csstype").Property.WebkitTextStrokeColor | readonly import("csstype").Property.WebkitTextStrokeColor[];
        WebkitTextStrokeWidth?: readonly string[] | import("csstype").Property.WebkitTextStrokeWidth<string | number> | readonly NonNullable<import("csstype").Property.WebkitTextStrokeWidth<string | number>>[];
        WebkitTextUnderlinePosition?: readonly string[] | import("csstype").Property.TextUnderlinePosition | readonly import("csstype").Property.TextUnderlinePosition[];
        WebkitTouchCallout?: import("csstype").Property.WebkitTouchCallout | readonly NonNullable<import("csstype").Property.WebkitTouchCallout>[] | readonly import("csstype").Property.WebkitTouchCallout[];
        WebkitTransform?: readonly string[] | import("csstype").Property.Transform | readonly import("csstype").Property.Transform[];
        WebkitTransformOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.TransformOrigin<string | number> | readonly NonNullable<import("csstype").Property.TransformOrigin<string | number>>[];
        WebkitTransformStyle?: import("csstype").Property.TransformStyle | readonly NonNullable<import("csstype").Property.TransformStyle>[] | readonly import("csstype").Property.TransformStyle[];
        WebkitTransitionDelay?: readonly string[] | import("csstype").Property.TransitionDelay<string & {}> | readonly import("csstype").Property.TransitionDelay<string & {}>[];
        WebkitTransitionDuration?: readonly string[] | import("csstype").Property.TransitionDuration<string & {}> | readonly import("csstype").Property.TransitionDuration<string & {}>[];
        WebkitTransitionProperty?: readonly string[] | import("csstype").Property.TransitionProperty | readonly import("csstype").Property.TransitionProperty[];
        WebkitTransitionTimingFunction?: readonly string[] | import("csstype").Property.TransitionTimingFunction | readonly import("csstype").Property.TransitionTimingFunction[];
        WebkitUserModify?: import("csstype").Property.WebkitUserModify | readonly NonNullable<import("csstype").Property.WebkitUserModify>[] | readonly import("csstype").Property.WebkitUserModify[];
        WebkitUserSelect?: import("csstype").Property.UserSelect | readonly NonNullable<import("csstype").Property.UserSelect>[] | readonly import("csstype").Property.UserSelect[];
        WebkitWritingMode?: import("csstype").Property.WritingMode | readonly NonNullable<import("csstype").Property.WritingMode>[] | readonly import("csstype").Property.WritingMode[];
        MozAnimation?: import("csstype").Property.Animation<string & {}> | readonly NonNullable<import("csstype").Property.Animation<string & {}>>[] | readonly ("none" | (string & {}) | "normal" | "reverse" | import('csstype').Globals | "auto" | "ease" | "ease-in" | "ease-in-out" | "ease-out" | "step-end" | "step-start" | "linear" | "alternate" | "alternate-reverse" | "backwards" | "both" | "forwards" | "infinite" | "paused" | "running")[];
        MozBorderImage?: import("csstype").Property.BorderImage | readonly NonNullable<import("csstype").Property.BorderImage>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space")[];
        MozColumnRule?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRule<string | number> | readonly NonNullable<import("csstype").Property.ColumnRule<string | number>>[];
        MozColumns?: readonly (string | (string & {}))[] | import("csstype").Property.Columns<string | number> | readonly NonNullable<import("csstype").Property.Columns<string | number>>[];
        MozOutlineRadius?: readonly (string | (string & {}))[] | import("csstype").Property.MozOutlineRadius<string | number> | readonly NonNullable<import("csstype").Property.MozOutlineRadius<string | number>>[];
        msContentZoomLimit?: readonly string[] | import("csstype").Property.MsContentZoomLimit | readonly import("csstype").Property.MsContentZoomLimit[];
        msContentZoomSnap?: readonly string[] | import("csstype").Property.MsContentZoomSnap | readonly import("csstype").Property.MsContentZoomSnap[];
        msFlex?: readonly (string | (string & {}))[] | import("csstype").Property.Flex<string | number> | readonly NonNullable<import("csstype").Property.Flex<string | number>>[];
        msScrollLimit?: readonly string[] | import("csstype").Property.MsScrollLimit | readonly import("csstype").Property.MsScrollLimit[];
        msScrollSnapX?: readonly string[] | import("csstype").Property.MsScrollSnapX | readonly import("csstype").Property.MsScrollSnapX[];
        msScrollSnapY?: readonly string[] | import("csstype").Property.MsScrollSnapY | readonly import("csstype").Property.MsScrollSnapY[];
        msTransition?: readonly string[] | import("csstype").Property.Transition<string & {}> | readonly import("csstype").Property.Transition<string & {}>[];
        WebkitAnimation?: import("csstype").Property.Animation<string & {}> | readonly NonNullable<import("csstype").Property.Animation<string & {}>>[] | readonly ("none" | (string & {}) | "normal" | "reverse" | import('csstype').Globals | "auto" | "ease" | "ease-in" | "ease-in-out" | "ease-out" | "step-end" | "step-start" | "linear" | "alternate" | "alternate-reverse" | "backwards" | "both" | "forwards" | "infinite" | "paused" | "running")[];
        WebkitBorderBefore?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitBorderBefore<string | number> | readonly NonNullable<import("csstype").Property.WebkitBorderBefore<string | number>>[];
        WebkitBorderImage?: import("csstype").Property.BorderImage | readonly NonNullable<import("csstype").Property.BorderImage>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space")[];
        WebkitBorderRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderRadius<string | number>>[];
        WebkitColumnRule?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRule<string | number> | readonly NonNullable<import("csstype").Property.ColumnRule<string | number>>[];
        WebkitColumns?: readonly (string | (string & {}))[] | import("csstype").Property.Columns<string | number> | readonly NonNullable<import("csstype").Property.Columns<string | number>>[];
        WebkitFlex?: readonly (string | (string & {}))[] | import("csstype").Property.Flex<string | number> | readonly NonNullable<import("csstype").Property.Flex<string | number>>[];
        WebkitFlexFlow?: readonly string[] | import("csstype").Property.FlexFlow | readonly import("csstype").Property.FlexFlow[];
        WebkitMask?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitMask<string | number> | readonly NonNullable<import("csstype").Property.WebkitMask<string | number>>[];
        WebkitMaskBoxImage?: import("csstype").Property.MaskBorder | readonly NonNullable<import("csstype").Property.MaskBorder>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space" | "alpha" | "luminance")[];
        WebkitTextEmphasis?: readonly string[] | import("csstype").Property.TextEmphasis | readonly import("csstype").Property.TextEmphasis[];
        WebkitTextStroke?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitTextStroke<string | number> | readonly NonNullable<import("csstype").Property.WebkitTextStroke<string | number>>[];
        WebkitTransition?: readonly string[] | import("csstype").Property.Transition<string & {}> | readonly import("csstype").Property.Transition<string & {}>[];
        azimuth?: readonly string[] | import("csstype").Property.Azimuth | readonly import("csstype").Property.Azimuth[];
        boxAlign?: import("csstype").Property.BoxAlign | readonly NonNullable<import("csstype").Property.BoxAlign>[] | readonly import("csstype").Property.BoxAlign[];
        boxDirection?: import("csstype").Property.BoxDirection | readonly NonNullable<import("csstype").Property.BoxDirection>[] | readonly import("csstype").Property.BoxDirection[];
        boxFlex?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlex | readonly NonNullable<import("csstype").Property.BoxFlex>[];
        boxFlexGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlexGroup | readonly NonNullable<import("csstype").Property.BoxFlexGroup>[];
        boxLines?: import("csstype").Property.BoxLines | readonly NonNullable<import("csstype").Property.BoxLines>[] | readonly import("csstype").Property.BoxLines[];
        boxOrdinalGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxOrdinalGroup | readonly NonNullable<import("csstype").Property.BoxOrdinalGroup>[];
        boxOrient?: import("csstype").Property.BoxOrient | readonly NonNullable<import("csstype").Property.BoxOrient>[] | readonly import("csstype").Property.BoxOrient[];
        boxPack?: import("csstype").Property.BoxPack | readonly NonNullable<import("csstype").Property.BoxPack>[] | readonly import("csstype").Property.BoxPack[];
        clip?: readonly string[] | import("csstype").Property.Clip | readonly import("csstype").Property.Clip[];
        gridColumnGap?: readonly (string | (string & {}))[] | import("csstype").Property.GridColumnGap<string | number> | readonly NonNullable<import("csstype").Property.GridColumnGap<string | number>>[];
        gridGap?: readonly (string | (string & {}))[] | import("csstype").Property.GridGap<string | number> | readonly NonNullable<import("csstype").Property.GridGap<string | number>>[];
        gridRowGap?: readonly (string | (string & {}))[] | import("csstype").Property.GridRowGap<string | number> | readonly NonNullable<import("csstype").Property.GridRowGap<string | number>>[];
        imeMode?: import("csstype").Property.ImeMode | readonly NonNullable<import("csstype").Property.ImeMode>[] | readonly import("csstype").Property.ImeMode[];
        offsetBlock?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlock<string | number> | readonly NonNullable<import("csstype").Property.InsetBlock<string | number>>[];
        offsetBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.InsetBlockEnd<string | number>>[];
        offsetBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlockStart<string | number> | readonly NonNullable<import("csstype").Property.InsetBlockStart<string | number>>[];
        offsetInline?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInline<string | number> | readonly NonNullable<import("csstype").Property.InsetInline<string | number>>[];
        offsetInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.InsetInlineEnd<string | number>>[];
        offsetInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInlineStart<string | number> | readonly NonNullable<import("csstype").Property.InsetInlineStart<string | number>>[];
        scrollSnapCoordinate?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollSnapCoordinate<string | number> | readonly NonNullable<import("csstype").Property.ScrollSnapCoordinate<string | number>>[];
        scrollSnapDestination?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollSnapDestination<string | number> | readonly NonNullable<import("csstype").Property.ScrollSnapDestination<string | number>>[];
        scrollSnapPointsX?: readonly string[] | import("csstype").Property.ScrollSnapPointsX | readonly import("csstype").Property.ScrollSnapPointsX[];
        scrollSnapPointsY?: readonly string[] | import("csstype").Property.ScrollSnapPointsY | readonly import("csstype").Property.ScrollSnapPointsY[];
        scrollSnapTypeX?: import("csstype").Property.ScrollSnapTypeX | readonly NonNullable<import("csstype").Property.ScrollSnapTypeX>[] | readonly import("csstype").Property.ScrollSnapTypeX[];
        scrollSnapTypeY?: import("csstype").Property.ScrollSnapTypeY | readonly NonNullable<import("csstype").Property.ScrollSnapTypeY>[] | readonly import("csstype").Property.ScrollSnapTypeY[];
        KhtmlBoxAlign?: import("csstype").Property.BoxAlign | readonly NonNullable<import("csstype").Property.BoxAlign>[] | readonly import("csstype").Property.BoxAlign[];
        KhtmlBoxDirection?: import("csstype").Property.BoxDirection | readonly NonNullable<import("csstype").Property.BoxDirection>[] | readonly import("csstype").Property.BoxDirection[];
        KhtmlBoxFlex?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlex | readonly NonNullable<import("csstype").Property.BoxFlex>[];
        KhtmlBoxFlexGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlexGroup | readonly NonNullable<import("csstype").Property.BoxFlexGroup>[];
        KhtmlBoxLines?: import("csstype").Property.BoxLines | readonly NonNullable<import("csstype").Property.BoxLines>[] | readonly import("csstype").Property.BoxLines[];
        KhtmlBoxOrdinalGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxOrdinalGroup | readonly NonNullable<import("csstype").Property.BoxOrdinalGroup>[];
        KhtmlBoxOrient?: import("csstype").Property.BoxOrient | readonly NonNullable<import("csstype").Property.BoxOrient>[] | readonly import("csstype").Property.BoxOrient[];
        KhtmlBoxPack?: import("csstype").Property.BoxPack | readonly NonNullable<import("csstype").Property.BoxPack>[] | readonly import("csstype").Property.BoxPack[];
        KhtmlLineBreak?: import("csstype").Property.LineBreak | readonly NonNullable<import("csstype").Property.LineBreak>[] | readonly import("csstype").Property.LineBreak[];
        KhtmlOpacity?: import("csstype").Property.Opacity | readonly NonNullable<import("csstype").Property.Opacity>[] | readonly ((string & {}) | import('csstype').Globals)[];
        KhtmlUserSelect?: import("csstype").Property.UserSelect | readonly NonNullable<import("csstype").Property.UserSelect>[] | readonly import("csstype").Property.UserSelect[];
        MozBackfaceVisibility?: import("csstype").Property.BackfaceVisibility | readonly NonNullable<import("csstype").Property.BackfaceVisibility>[] | readonly import("csstype").Property.BackfaceVisibility[];
        MozBackgroundClip?: readonly string[] | import("csstype").Property.BackgroundClip | readonly import("csstype").Property.BackgroundClip[];
        MozBackgroundInlinePolicy?: import("csstype").Property.BoxDecorationBreak | readonly NonNullable<import("csstype").Property.BoxDecorationBreak>[] | readonly import("csstype").Property.BoxDecorationBreak[];
        MozBackgroundOrigin?: readonly string[] | import("csstype").Property.BackgroundOrigin | readonly import("csstype").Property.BackgroundOrigin[];
        MozBackgroundSize?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundSize<string | number> | readonly NonNullable<import("csstype").Property.BackgroundSize<string | number>>[];
        MozBorderRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderRadius<string | number>>[];
        MozBorderRadiusBottomleft?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomLeftRadius<string | number>>[];
        MozBorderRadiusBottomright?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomRightRadius<string | number>>[];
        MozBorderRadiusTopleft?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopLeftRadius<string | number>>[];
        MozBorderRadiusTopright?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopRightRadius<string | number>>[];
        MozBoxAlign?: import("csstype").Property.BoxAlign | readonly NonNullable<import("csstype").Property.BoxAlign>[] | readonly import("csstype").Property.BoxAlign[];
        MozBoxDirection?: import("csstype").Property.BoxDirection | readonly NonNullable<import("csstype").Property.BoxDirection>[] | readonly import("csstype").Property.BoxDirection[];
        MozBoxFlex?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlex | readonly NonNullable<import("csstype").Property.BoxFlex>[];
        MozBoxOrdinalGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxOrdinalGroup | readonly NonNullable<import("csstype").Property.BoxOrdinalGroup>[];
        MozBoxOrient?: import("csstype").Property.BoxOrient | readonly NonNullable<import("csstype").Property.BoxOrient>[] | readonly import("csstype").Property.BoxOrient[];
        MozBoxPack?: import("csstype").Property.BoxPack | readonly NonNullable<import("csstype").Property.BoxPack>[] | readonly import("csstype").Property.BoxPack[];
        MozBoxShadow?: readonly string[] | import("csstype").Property.BoxShadow | readonly import("csstype").Property.BoxShadow[];
        MozFloatEdge?: import("csstype").Property.MozFloatEdge | readonly NonNullable<import("csstype").Property.MozFloatEdge>[] | readonly import("csstype").Property.MozFloatEdge[];
        MozForceBrokenImageIcon?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.MozForceBrokenImageIcon | readonly NonNullable<import("csstype").Property.MozForceBrokenImageIcon>[];
        MozOpacity?: import("csstype").Property.Opacity | readonly NonNullable<import("csstype").Property.Opacity>[] | readonly ((string & {}) | import('csstype').Globals)[];
        MozOutline?: readonly (string | (string & {}))[] | import("csstype").Property.Outline<string | number> | readonly NonNullable<import("csstype").Property.Outline<string | number>>[];
        MozOutlineColor?: readonly string[] | import("csstype").Property.OutlineColor | readonly import("csstype").Property.OutlineColor[];
        MozOutlineStyle?: readonly string[] | import("csstype").Property.OutlineStyle | readonly import("csstype").Property.OutlineStyle[];
        MozOutlineWidth?: readonly string[] | import("csstype").Property.OutlineWidth<string | number> | readonly NonNullable<import("csstype").Property.OutlineWidth<string | number>>[];
        MozPerspective?: readonly string[] | import("csstype").Property.Perspective<string | number> | readonly NonNullable<import("csstype").Property.Perspective<string | number>>[];
        MozPerspectiveOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.PerspectiveOrigin<string | number> | readonly NonNullable<import("csstype").Property.PerspectiveOrigin<string | number>>[];
        MozTextAlignLast?: import("csstype").Property.TextAlignLast | readonly NonNullable<import("csstype").Property.TextAlignLast>[] | readonly import("csstype").Property.TextAlignLast[];
        MozTextDecorationColor?: readonly string[] | import("csstype").Property.TextDecorationColor | readonly import("csstype").Property.TextDecorationColor[];
        MozTextDecorationLine?: readonly string[] | import("csstype").Property.TextDecorationLine | readonly import("csstype").Property.TextDecorationLine[];
        MozTextDecorationStyle?: import("csstype").Property.TextDecorationStyle | readonly NonNullable<import("csstype").Property.TextDecorationStyle>[] | readonly import("csstype").Property.TextDecorationStyle[];
        MozTransform?: readonly string[] | import("csstype").Property.Transform | readonly import("csstype").Property.Transform[];
        MozTransformOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.TransformOrigin<string | number> | readonly NonNullable<import("csstype").Property.TransformOrigin<string | number>>[];
        MozTransformStyle?: import("csstype").Property.TransformStyle | readonly NonNullable<import("csstype").Property.TransformStyle>[] | readonly import("csstype").Property.TransformStyle[];
        MozTransition?: readonly string[] | import("csstype").Property.Transition<string & {}> | readonly import("csstype").Property.Transition<string & {}>[];
        MozTransitionDelay?: readonly string[] | import("csstype").Property.TransitionDelay<string & {}> | readonly import("csstype").Property.TransitionDelay<string & {}>[];
        MozTransitionDuration?: readonly string[] | import("csstype").Property.TransitionDuration<string & {}> | readonly import("csstype").Property.TransitionDuration<string & {}>[];
        MozTransitionProperty?: readonly string[] | import("csstype").Property.TransitionProperty | readonly import("csstype").Property.TransitionProperty[];
        MozTransitionTimingFunction?: readonly string[] | import("csstype").Property.TransitionTimingFunction | readonly import("csstype").Property.TransitionTimingFunction[];
        MozUserInput?: import("csstype").Property.MozUserInput | readonly NonNullable<import("csstype").Property.MozUserInput>[] | readonly import("csstype").Property.MozUserInput[];
        msImeMode?: import("csstype").Property.ImeMode | readonly NonNullable<import("csstype").Property.ImeMode>[] | readonly import("csstype").Property.ImeMode[];
        OAnimation?: import("csstype").Property.Animation<string & {}> | readonly NonNullable<import("csstype").Property.Animation<string & {}>>[] | readonly ("none" | (string & {}) | "normal" | "reverse" | import('csstype').Globals | "auto" | "ease" | "ease-in" | "ease-in-out" | "ease-out" | "step-end" | "step-start" | "linear" | "alternate" | "alternate-reverse" | "backwards" | "both" | "forwards" | "infinite" | "paused" | "running")[];
        OAnimationDelay?: readonly string[] | import("csstype").Property.AnimationDelay<string & {}> | readonly import("csstype").Property.AnimationDelay<string & {}>[];
        OAnimationDirection?: readonly string[] | import("csstype").Property.AnimationDirection | readonly import("csstype").Property.AnimationDirection[];
        OAnimationDuration?: readonly string[] | import("csstype").Property.AnimationDuration<string & {}> | readonly import("csstype").Property.AnimationDuration<string & {}>[];
        OAnimationFillMode?: readonly string[] | import("csstype").Property.AnimationFillMode | readonly import("csstype").Property.AnimationFillMode[];
        OAnimationIterationCount?: import("csstype").Property.AnimationIterationCount | readonly NonNullable<import("csstype").Property.AnimationIterationCount>[] | readonly ((string & {}) | import('csstype').Globals | "infinite")[];
        OAnimationName?: readonly string[] | import("csstype").Property.AnimationName | readonly import("csstype").Property.AnimationName[];
        OAnimationPlayState?: readonly string[] | import("csstype").Property.AnimationPlayState | readonly import("csstype").Property.AnimationPlayState[];
        OAnimationTimingFunction?: readonly string[] | import("csstype").Property.AnimationTimingFunction | readonly import("csstype").Property.AnimationTimingFunction[];
        OBackgroundSize?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundSize<string | number> | readonly NonNullable<import("csstype").Property.BackgroundSize<string | number>>[];
        OBorderImage?: import("csstype").Property.BorderImage | readonly NonNullable<import("csstype").Property.BorderImage>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space")[];
        OObjectFit?: import("csstype").Property.ObjectFit | readonly NonNullable<import("csstype").Property.ObjectFit>[] | readonly import("csstype").Property.ObjectFit[];
        OObjectPosition?: readonly (string | (string & {}))[] | import("csstype").Property.ObjectPosition<string | number> | readonly NonNullable<import("csstype").Property.ObjectPosition<string | number>>[];
        OTabSize?: readonly (string | (string & {}))[] | import("csstype").Property.TabSize<string | number> | readonly NonNullable<import("csstype").Property.TabSize<string | number>>[];
        OTextOverflow?: readonly string[] | import("csstype").Property.TextOverflow | readonly import("csstype").Property.TextOverflow[];
        OTransform?: readonly string[] | import("csstype").Property.Transform | readonly import("csstype").Property.Transform[];
        OTransformOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.TransformOrigin<string | number> | readonly NonNullable<import("csstype").Property.TransformOrigin<string | number>>[];
        OTransition?: readonly string[] | import("csstype").Property.Transition<string & {}> | readonly import("csstype").Property.Transition<string & {}>[];
        OTransitionDelay?: readonly string[] | import("csstype").Property.TransitionDelay<string & {}> | readonly import("csstype").Property.TransitionDelay<string & {}>[];
        OTransitionDuration?: readonly string[] | import("csstype").Property.TransitionDuration<string & {}> | readonly import("csstype").Property.TransitionDuration<string & {}>[];
        OTransitionProperty?: readonly string[] | import("csstype").Property.TransitionProperty | readonly import("csstype").Property.TransitionProperty[];
        OTransitionTimingFunction?: readonly string[] | import("csstype").Property.TransitionTimingFunction | readonly import("csstype").Property.TransitionTimingFunction[];
        WebkitBoxAlign?: import("csstype").Property.BoxAlign | readonly NonNullable<import("csstype").Property.BoxAlign>[] | readonly import("csstype").Property.BoxAlign[];
        WebkitBoxDirection?: import("csstype").Property.BoxDirection | readonly NonNullable<import("csstype").Property.BoxDirection>[] | readonly import("csstype").Property.BoxDirection[];
        WebkitBoxFlex?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlex | readonly NonNullable<import("csstype").Property.BoxFlex>[];
        WebkitBoxFlexGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlexGroup | readonly NonNullable<import("csstype").Property.BoxFlexGroup>[];
        WebkitBoxLines?: import("csstype").Property.BoxLines | readonly NonNullable<import("csstype").Property.BoxLines>[] | readonly import("csstype").Property.BoxLines[];
        WebkitBoxOrdinalGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxOrdinalGroup | readonly NonNullable<import("csstype").Property.BoxOrdinalGroup>[];
        WebkitBoxOrient?: import("csstype").Property.BoxOrient | readonly NonNullable<import("csstype").Property.BoxOrient>[] | readonly import("csstype").Property.BoxOrient[];
        WebkitBoxPack?: import("csstype").Property.BoxPack | readonly NonNullable<import("csstype").Property.BoxPack>[] | readonly import("csstype").Property.BoxPack[];
        alignmentBaseline?: import("csstype").Property.AlignmentBaseline | readonly NonNullable<import("csstype").Property.AlignmentBaseline>[] | readonly import("csstype").Property.AlignmentBaseline[];
        baselineShift?: readonly (string | (string & {}))[] | import("csstype").Property.BaselineShift<string | number> | readonly NonNullable<import("csstype").Property.BaselineShift<string | number>>[];
        clipRule?: import("csstype").Property.ClipRule | readonly NonNullable<import("csstype").Property.ClipRule>[] | readonly import("csstype").Property.ClipRule[];
        colorInterpolation?: import("csstype").Property.ColorInterpolation | readonly NonNullable<import("csstype").Property.ColorInterpolation>[] | readonly import("csstype").Property.ColorInterpolation[];
        colorRendering?: import("csstype").Property.ColorRendering | readonly NonNullable<import("csstype").Property.ColorRendering>[] | readonly import("csstype").Property.ColorRendering[];
        dominantBaseline?: import("csstype").Property.DominantBaseline | readonly NonNullable<import("csstype").Property.DominantBaseline>[] | readonly import("csstype").Property.DominantBaseline[];
        fill?: readonly string[] | import("csstype").Property.Fill | readonly import("csstype").Property.Fill[];
        fillOpacity?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FillOpacity | readonly NonNullable<import("csstype").Property.FillOpacity>[];
        fillRule?: import("csstype").Property.FillRule | readonly NonNullable<import("csstype").Property.FillRule>[] | readonly import("csstype").Property.FillRule[];
        floodColor?: readonly string[] | import("csstype").Property.FloodColor | readonly import("csstype").Property.FloodColor[];
        floodOpacity?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FloodOpacity | readonly NonNullable<import("csstype").Property.FloodOpacity>[];
        glyphOrientationVertical?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GlyphOrientationVertical | readonly NonNullable<import("csstype").Property.GlyphOrientationVertical>[];
        lightingColor?: readonly string[] | import("csstype").Property.LightingColor | readonly import("csstype").Property.LightingColor[];
        marker?: readonly string[] | import("csstype").Property.Marker | readonly import("csstype").Property.Marker[];
        markerEnd?: readonly string[] | import("csstype").Property.MarkerEnd | readonly import("csstype").Property.MarkerEnd[];
        markerMid?: readonly string[] | import("csstype").Property.MarkerMid | readonly import("csstype").Property.MarkerMid[];
        markerStart?: readonly string[] | import("csstype").Property.MarkerStart | readonly import("csstype").Property.MarkerStart[];
        shapeRendering?: import("csstype").Property.ShapeRendering | readonly NonNullable<import("csstype").Property.ShapeRendering>[] | readonly import("csstype").Property.ShapeRendering[];
        stopColor?: readonly string[] | import("csstype").Property.StopColor | readonly import("csstype").Property.StopColor[];
        stopOpacity?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.StopOpacity | readonly NonNullable<import("csstype").Property.StopOpacity>[];
        stroke?: readonly string[] | import("csstype").Property.Stroke | readonly import("csstype").Property.Stroke[];
        strokeDasharray?: readonly (string | (string & {}))[] | import("csstype").Property.StrokeDasharray<string | number> | readonly NonNullable<import("csstype").Property.StrokeDasharray<string | number>>[];
        strokeDashoffset?: readonly (string | (string & {}))[] | import("csstype").Property.StrokeDashoffset<string | number> | readonly NonNullable<import("csstype").Property.StrokeDashoffset<string | number>>[];
        strokeLinecap?: import("csstype").Property.StrokeLinecap | readonly NonNullable<import("csstype").Property.StrokeLinecap>[] | readonly import("csstype").Property.StrokeLinecap[];
        strokeLinejoin?: import("csstype").Property.StrokeLinejoin | readonly NonNullable<import("csstype").Property.StrokeLinejoin>[] | readonly import("csstype").Property.StrokeLinejoin[];
        strokeMiterlimit?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.StrokeMiterlimit | readonly NonNullable<import("csstype").Property.StrokeMiterlimit>[];
        strokeOpacity?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.StrokeOpacity | readonly NonNullable<import("csstype").Property.StrokeOpacity>[];
        strokeWidth?: readonly (string | (string & {}))[] | import("csstype").Property.StrokeWidth<string | number> | readonly NonNullable<import("csstype").Property.StrokeWidth<string | number>>[];
        textAnchor?: import("csstype").Property.TextAnchor | readonly NonNullable<import("csstype").Property.TextAnchor>[] | readonly import("csstype").Property.TextAnchor[];
        vectorEffect?: import("csstype").Property.VectorEffect | readonly NonNullable<import("csstype").Property.VectorEffect>[] | readonly import("csstype").Property.VectorEffect[];
        ":-moz-any()"?: import('@emotion/serialize').CSSObject;
        ":-moz-dir"?: import('@emotion/serialize').CSSObject;
        ":-webkit-any()"?: import('@emotion/serialize').CSSObject;
        "::cue"?: import('@emotion/serialize').CSSObject;
        "::cue-region"?: import('@emotion/serialize').CSSObject;
        "::part"?: import('@emotion/serialize').CSSObject;
        "::slotted"?: import('@emotion/serialize').CSSObject;
        "::view-transition-group"?: import('@emotion/serialize').CSSObject;
        "::view-transition-image-pair"?: import('@emotion/serialize').CSSObject;
        "::view-transition-new"?: import('@emotion/serialize').CSSObject;
        "::view-transition-old"?: import('@emotion/serialize').CSSObject;
        ":dir"?: import('@emotion/serialize').CSSObject;
        ":has"?: import('@emotion/serialize').CSSObject;
        ":host"?: import('@emotion/serialize').CSSObject;
        ":host-context"?: import('@emotion/serialize').CSSObject;
        ":is"?: import('@emotion/serialize').CSSObject;
        ":lang"?: import('@emotion/serialize').CSSObject;
        ":matches()"?: import('@emotion/serialize').CSSObject;
        ":not"?: import('@emotion/serialize').CSSObject;
        ":nth-child"?: import('@emotion/serialize').CSSObject;
        ":nth-last-child"?: import('@emotion/serialize').CSSObject;
        ":nth-last-of-type"?: import('@emotion/serialize').CSSObject;
        ":nth-of-type"?: import('@emotion/serialize').CSSObject;
        ":where"?: import('@emotion/serialize').CSSObject;
        ":-khtml-any-link"?: import('@emotion/serialize').CSSObject;
        ":-moz-any-link"?: import('@emotion/serialize').CSSObject;
        ":-moz-focusring"?: import('@emotion/serialize').CSSObject;
        ":-moz-full-screen"?: import('@emotion/serialize').CSSObject;
        ":-moz-placeholder"?: import('@emotion/serialize').CSSObject;
        ":-moz-read-only"?: import('@emotion/serialize').CSSObject;
        ":-moz-read-write"?: import('@emotion/serialize').CSSObject;
        ":-moz-ui-invalid"?: import('@emotion/serialize').CSSObject;
        ":-moz-ui-valid"?: import('@emotion/serialize').CSSObject;
        ":-ms-fullscreen"?: import('@emotion/serialize').CSSObject;
        ":-ms-input-placeholder"?: import('@emotion/serialize').CSSObject;
        ":-webkit-any-link"?: import('@emotion/serialize').CSSObject;
        ":-webkit-full-screen"?: import('@emotion/serialize').CSSObject;
        "::-moz-placeholder"?: import('@emotion/serialize').CSSObject;
        "::-moz-progress-bar"?: import('@emotion/serialize').CSSObject;
        "::-moz-range-progress"?: import('@emotion/serialize').CSSObject;
        "::-moz-range-thumb"?: import('@emotion/serialize').CSSObject;
        "::-moz-range-track"?: import('@emotion/serialize').CSSObject;
        "::-moz-selection"?: import('@emotion/serialize').CSSObject;
        "::-ms-backdrop"?: import('@emotion/serialize').CSSObject;
        "::-ms-browse"?: import('@emotion/serialize').CSSObject;
        "::-ms-check"?: import('@emotion/serialize').CSSObject;
        "::-ms-clear"?: import('@emotion/serialize').CSSObject;
        "::-ms-expand"?: import('@emotion/serialize').CSSObject;
        "::-ms-fill"?: import('@emotion/serialize').CSSObject;
        "::-ms-fill-lower"?: import('@emotion/serialize').CSSObject;
        "::-ms-fill-upper"?: import('@emotion/serialize').CSSObject;
        "::-ms-input-placeholder"?: import('@emotion/serialize').CSSObject;
        "::-ms-reveal"?: import('@emotion/serialize').CSSObject;
        "::-ms-thumb"?: import('@emotion/serialize').CSSObject;
        "::-ms-ticks-after"?: import('@emotion/serialize').CSSObject;
        "::-ms-ticks-before"?: import('@emotion/serialize').CSSObject;
        "::-ms-tooltip"?: import('@emotion/serialize').CSSObject;
        "::-ms-track"?: import('@emotion/serialize').CSSObject;
        "::-ms-value"?: import('@emotion/serialize').CSSObject;
        "::-webkit-backdrop"?: import('@emotion/serialize').CSSObject;
        "::-webkit-input-placeholder"?: import('@emotion/serialize').CSSObject;
        "::-webkit-progress-bar"?: import('@emotion/serialize').CSSObject;
        "::-webkit-progress-inner-value"?: import('@emotion/serialize').CSSObject;
        "::-webkit-progress-value"?: import('@emotion/serialize').CSSObject;
        "::-webkit-slider-runnable-track"?: import('@emotion/serialize').CSSObject;
        "::-webkit-slider-thumb"?: import('@emotion/serialize').CSSObject;
        "::after"?: import('@emotion/serialize').CSSObject;
        "::backdrop"?: import('@emotion/serialize').CSSObject;
        "::before"?: import('@emotion/serialize').CSSObject;
        "::first-letter"?: import('@emotion/serialize').CSSObject;
        "::first-line"?: import('@emotion/serialize').CSSObject;
        "::grammar-error"?: import('@emotion/serialize').CSSObject;
        "::marker"?: import('@emotion/serialize').CSSObject;
        "::placeholder"?: import('@emotion/serialize').CSSObject;
        "::selection"?: import('@emotion/serialize').CSSObject;
        "::spelling-error"?: import('@emotion/serialize').CSSObject;
        "::target-text"?: import('@emotion/serialize').CSSObject;
        "::view-transition"?: import('@emotion/serialize').CSSObject;
        ":active"?: import('@emotion/serialize').CSSObject;
        ":after"?: import('@emotion/serialize').CSSObject;
        ":any-link"?: import('@emotion/serialize').CSSObject;
        ":before"?: import('@emotion/serialize').CSSObject;
        ":blank"?: import('@emotion/serialize').CSSObject;
        ":checked"?: import('@emotion/serialize').CSSObject;
        ":current"?: import('@emotion/serialize').CSSObject;
        ":default"?: import('@emotion/serialize').CSSObject;
        ":defined"?: import('@emotion/serialize').CSSObject;
        ":disabled"?: import('@emotion/serialize').CSSObject;
        ":empty"?: import('@emotion/serialize').CSSObject;
        ":enabled"?: import('@emotion/serialize').CSSObject;
        ":first"?: import('@emotion/serialize').CSSObject;
        ":first-child"?: import('@emotion/serialize').CSSObject;
        ":first-letter"?: import('@emotion/serialize').CSSObject;
        ":first-line"?: import('@emotion/serialize').CSSObject;
        ":first-of-type"?: import('@emotion/serialize').CSSObject;
        ":focus"?: import('@emotion/serialize').CSSObject;
        ":focus-visible"?: import('@emotion/serialize').CSSObject;
        ":focus-within"?: import('@emotion/serialize').CSSObject;
        ":fullscreen"?: import('@emotion/serialize').CSSObject;
        ":future"?: import('@emotion/serialize').CSSObject;
        ":hover"?: import('@emotion/serialize').CSSObject;
        ":in-range"?: import('@emotion/serialize').CSSObject;
        ":indeterminate"?: import('@emotion/serialize').CSSObject;
        ":invalid"?: import('@emotion/serialize').CSSObject;
        ":last-child"?: import('@emotion/serialize').CSSObject;
        ":last-of-type"?: import('@emotion/serialize').CSSObject;
        ":left"?: import('@emotion/serialize').CSSObject;
        ":link"?: import('@emotion/serialize').CSSObject;
        ":local-link"?: import('@emotion/serialize').CSSObject;
        ":nth-col"?: import('@emotion/serialize').CSSObject;
        ":nth-last-col"?: import('@emotion/serialize').CSSObject;
        ":only-child"?: import('@emotion/serialize').CSSObject;
        ":only-of-type"?: import('@emotion/serialize').CSSObject;
        ":optional"?: import('@emotion/serialize').CSSObject;
        ":out-of-range"?: import('@emotion/serialize').CSSObject;
        ":past"?: import('@emotion/serialize').CSSObject;
        ":paused"?: import('@emotion/serialize').CSSObject;
        ":picture-in-picture"?: import('@emotion/serialize').CSSObject;
        ":placeholder-shown"?: import('@emotion/serialize').CSSObject;
        ":playing"?: import('@emotion/serialize').CSSObject;
        ":read-only"?: import('@emotion/serialize').CSSObject;
        ":read-write"?: import('@emotion/serialize').CSSObject;
        ":required"?: import('@emotion/serialize').CSSObject;
        ":right"?: import('@emotion/serialize').CSSObject;
        ":root"?: import('@emotion/serialize').CSSObject;
        ":scope"?: import('@emotion/serialize').CSSObject;
        ":target"?: import('@emotion/serialize').CSSObject;
        ":target-within"?: import('@emotion/serialize').CSSObject;
        ":user-invalid"?: import('@emotion/serialize').CSSObject;
        ":user-valid"?: import('@emotion/serialize').CSSObject;
        ":valid"?: import('@emotion/serialize').CSSObject;
        ":visited"?: import('@emotion/serialize').CSSObject;
        '&:hover': {
            background: string;
        };
        '&:focus-within': {
            background: string;
            outline: string;
            boxShadow: string;
        };
    };
    textField: {
        accentColor?: readonly string[] | import("csstype").Property.AccentColor | readonly import("csstype").Property.AccentColor[];
        alignContent?: readonly string[] | import("csstype").Property.AlignContent | readonly import("csstype").Property.AlignContent[];
        alignItems?: readonly string[] | import("csstype").Property.AlignItems | readonly import("csstype").Property.AlignItems[];
        alignSelf?: readonly string[] | import("csstype").Property.AlignSelf | readonly import("csstype").Property.AlignSelf[];
        alignTracks?: readonly string[] | import("csstype").Property.AlignTracks | readonly import("csstype").Property.AlignTracks[];
        animationComposition?: readonly string[] | import("csstype").Property.AnimationComposition | readonly import("csstype").Property.AnimationComposition[];
        animationDelay?: readonly string[] | import("csstype").Property.AnimationDelay<string & {}> | readonly import("csstype").Property.AnimationDelay<string & {}>[];
        animationDirection?: readonly string[] | import("csstype").Property.AnimationDirection | readonly import("csstype").Property.AnimationDirection[];
        animationDuration?: readonly string[] | import("csstype").Property.AnimationDuration<string & {}> | readonly import("csstype").Property.AnimationDuration<string & {}>[];
        animationFillMode?: readonly string[] | import("csstype").Property.AnimationFillMode | readonly import("csstype").Property.AnimationFillMode[];
        animationIterationCount?: import("csstype").Property.AnimationIterationCount | readonly NonNullable<import("csstype").Property.AnimationIterationCount>[] | readonly ((string & {}) | import('csstype').Globals | "infinite")[];
        animationName?: readonly string[] | import("csstype").Property.AnimationName | readonly import("csstype").Property.AnimationName[];
        animationPlayState?: readonly string[] | import("csstype").Property.AnimationPlayState | readonly import("csstype").Property.AnimationPlayState[];
        animationRangeEnd?: readonly (string | (string & {}))[] | import("csstype").Property.AnimationRangeEnd<string | number> | readonly NonNullable<import("csstype").Property.AnimationRangeEnd<string | number>>[];
        animationRangeStart?: readonly (string | (string & {}))[] | import("csstype").Property.AnimationRangeStart<string | number> | readonly NonNullable<import("csstype").Property.AnimationRangeStart<string | number>>[];
        animationTimeline?: readonly string[] | import("csstype").Property.AnimationTimeline | readonly import("csstype").Property.AnimationTimeline[];
        animationTimingFunction?: readonly string[] | import("csstype").Property.AnimationTimingFunction | readonly import("csstype").Property.AnimationTimingFunction[];
        appearance?: import("csstype").Property.Appearance | readonly NonNullable<import("csstype").Property.Appearance>[] | readonly import("csstype").Property.Appearance[];
        aspectRatio?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.AspectRatio | readonly NonNullable<import("csstype").Property.AspectRatio>[];
        backdropFilter?: readonly string[] | import("csstype").Property.BackdropFilter | readonly import("csstype").Property.BackdropFilter[];
        backfaceVisibility?: import("csstype").Property.BackfaceVisibility | readonly NonNullable<import("csstype").Property.BackfaceVisibility>[] | readonly import("csstype").Property.BackfaceVisibility[];
        backgroundAttachment?: readonly string[] | import("csstype").Property.BackgroundAttachment | readonly import("csstype").Property.BackgroundAttachment[];
        backgroundBlendMode?: readonly string[] | import("csstype").Property.BackgroundBlendMode | readonly import("csstype").Property.BackgroundBlendMode[];
        backgroundClip?: readonly string[] | import("csstype").Property.BackgroundClip | readonly import("csstype").Property.BackgroundClip[];
        backgroundColor?: readonly string[] | import("csstype").Property.BackgroundColor | readonly import("csstype").Property.BackgroundColor[];
        backgroundImage?: readonly string[] | import("csstype").Property.BackgroundImage | readonly import("csstype").Property.BackgroundImage[];
        backgroundOrigin?: readonly string[] | import("csstype").Property.BackgroundOrigin | readonly import("csstype").Property.BackgroundOrigin[];
        backgroundPositionX?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundPositionX<string | number> | readonly NonNullable<import("csstype").Property.BackgroundPositionX<string | number>>[];
        backgroundPositionY?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundPositionY<string | number> | readonly NonNullable<import("csstype").Property.BackgroundPositionY<string | number>>[];
        backgroundRepeat?: readonly string[] | import("csstype").Property.BackgroundRepeat | readonly import("csstype").Property.BackgroundRepeat[];
        backgroundSize?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundSize<string | number> | readonly NonNullable<import("csstype").Property.BackgroundSize<string | number>>[];
        blockOverflow?: readonly string[] | import("csstype").Property.BlockOverflow | readonly import("csstype").Property.BlockOverflow[];
        blockSize?: readonly (string | (string & {}))[] | import("csstype").Property.BlockSize<string | number> | readonly NonNullable<import("csstype").Property.BlockSize<string | number>>[];
        borderBlockColor?: readonly string[] | import("csstype").Property.BorderBlockColor | readonly import("csstype").Property.BorderBlockColor[];
        borderBlockEndColor?: readonly string[] | import("csstype").Property.BorderBlockEndColor | readonly import("csstype").Property.BorderBlockEndColor[];
        borderBlockEndStyle?: import("csstype").Property.BorderBlockEndStyle | readonly NonNullable<import("csstype").Property.BorderBlockEndStyle>[] | readonly import("csstype").Property.BorderBlockEndStyle[];
        borderBlockEndWidth?: readonly string[] | import("csstype").Property.BorderBlockEndWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderBlockEndWidth<string | number>>[];
        borderBlockStartColor?: readonly string[] | import("csstype").Property.BorderBlockStartColor | readonly import("csstype").Property.BorderBlockStartColor[];
        borderBlockStartStyle?: import("csstype").Property.BorderBlockStartStyle | readonly NonNullable<import("csstype").Property.BorderBlockStartStyle>[] | readonly import("csstype").Property.BorderBlockStartStyle[];
        borderBlockStartWidth?: readonly string[] | import("csstype").Property.BorderBlockStartWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderBlockStartWidth<string | number>>[];
        borderBlockStyle?: import("csstype").Property.BorderBlockStyle | readonly NonNullable<import("csstype").Property.BorderBlockStyle>[] | readonly import("csstype").Property.BorderBlockStyle[];
        borderBlockWidth?: readonly string[] | import("csstype").Property.BorderBlockWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderBlockWidth<string | number>>[];
        borderBottomColor?: readonly string[] | import("csstype").Property.BorderBottomColor | readonly import("csstype").Property.BorderBottomColor[];
        borderBottomLeftRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomLeftRadius<string | number>>[];
        borderBottomRightRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomRightRadius<string | number>>[];
        borderBottomStyle?: import("csstype").Property.BorderBottomStyle | readonly NonNullable<import("csstype").Property.BorderBottomStyle>[] | readonly import("csstype").Property.BorderBottomStyle[];
        borderBottomWidth?: readonly string[] | import("csstype").Property.BorderBottomWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomWidth<string | number>>[];
        borderCollapse?: import("csstype").Property.BorderCollapse | readonly NonNullable<import("csstype").Property.BorderCollapse>[] | readonly import("csstype").Property.BorderCollapse[];
        borderEndEndRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderEndEndRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderEndEndRadius<string | number>>[];
        borderEndStartRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderEndStartRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderEndStartRadius<string | number>>[];
        borderImageOutset?: readonly (string | (string & {}))[] | import("csstype").Property.BorderImageOutset<string | number> | readonly NonNullable<import("csstype").Property.BorderImageOutset<string | number>>[];
        borderImageRepeat?: readonly string[] | import("csstype").Property.BorderImageRepeat | readonly import("csstype").Property.BorderImageRepeat[];
        borderImageSlice?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BorderImageSlice | readonly NonNullable<import("csstype").Property.BorderImageSlice>[];
        borderImageSource?: readonly string[] | import("csstype").Property.BorderImageSource | readonly import("csstype").Property.BorderImageSource[];
        borderImageWidth?: readonly (string | (string & {}))[] | import("csstype").Property.BorderImageWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderImageWidth<string | number>>[];
        borderInlineColor?: readonly string[] | import("csstype").Property.BorderInlineColor | readonly import("csstype").Property.BorderInlineColor[];
        borderInlineEndColor?: readonly string[] | import("csstype").Property.BorderInlineEndColor | readonly import("csstype").Property.BorderInlineEndColor[];
        borderInlineEndStyle?: import("csstype").Property.BorderInlineEndStyle | readonly NonNullable<import("csstype").Property.BorderInlineEndStyle>[] | readonly import("csstype").Property.BorderInlineEndStyle[];
        borderInlineEndWidth?: readonly string[] | import("csstype").Property.BorderInlineEndWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineEndWidth<string | number>>[];
        borderInlineStartColor?: readonly string[] | import("csstype").Property.BorderInlineStartColor | readonly import("csstype").Property.BorderInlineStartColor[];
        borderInlineStartStyle?: import("csstype").Property.BorderInlineStartStyle | readonly NonNullable<import("csstype").Property.BorderInlineStartStyle>[] | readonly import("csstype").Property.BorderInlineStartStyle[];
        borderInlineStartWidth?: readonly string[] | import("csstype").Property.BorderInlineStartWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineStartWidth<string | number>>[];
        borderInlineStyle?: import("csstype").Property.BorderInlineStyle | readonly NonNullable<import("csstype").Property.BorderInlineStyle>[] | readonly import("csstype").Property.BorderInlineStyle[];
        borderInlineWidth?: readonly string[] | import("csstype").Property.BorderInlineWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineWidth<string | number>>[];
        borderLeftColor?: readonly string[] | import("csstype").Property.BorderLeftColor | readonly import("csstype").Property.BorderLeftColor[];
        borderLeftStyle?: import("csstype").Property.BorderLeftStyle | readonly NonNullable<import("csstype").Property.BorderLeftStyle>[] | readonly import("csstype").Property.BorderLeftStyle[];
        borderLeftWidth?: readonly string[] | import("csstype").Property.BorderLeftWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderLeftWidth<string | number>>[];
        borderRightColor?: readonly string[] | import("csstype").Property.BorderRightColor | readonly import("csstype").Property.BorderRightColor[];
        borderRightStyle?: import("csstype").Property.BorderRightStyle | readonly NonNullable<import("csstype").Property.BorderRightStyle>[] | readonly import("csstype").Property.BorderRightStyle[];
        borderRightWidth?: readonly string[] | import("csstype").Property.BorderRightWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderRightWidth<string | number>>[];
        borderSpacing?: readonly (string | (string & {}))[] | import("csstype").Property.BorderSpacing<string | number> | readonly NonNullable<import("csstype").Property.BorderSpacing<string | number>>[];
        borderStartEndRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderStartEndRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderStartEndRadius<string | number>>[];
        borderStartStartRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderStartStartRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderStartStartRadius<string | number>>[];
        borderTopColor?: readonly string[] | import("csstype").Property.BorderTopColor | readonly import("csstype").Property.BorderTopColor[];
        borderTopLeftRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopLeftRadius<string | number>>[];
        borderTopRightRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopRightRadius<string | number>>[];
        borderTopStyle?: import("csstype").Property.BorderTopStyle | readonly NonNullable<import("csstype").Property.BorderTopStyle>[] | readonly import("csstype").Property.BorderTopStyle[];
        borderTopWidth?: readonly string[] | import("csstype").Property.BorderTopWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderTopWidth<string | number>>[];
        bottom?: readonly (string | (string & {}))[] | import("csstype").Property.Bottom<string | number> | readonly NonNullable<import("csstype").Property.Bottom<string | number>>[];
        boxDecorationBreak?: import("csstype").Property.BoxDecorationBreak | readonly NonNullable<import("csstype").Property.BoxDecorationBreak>[] | readonly import("csstype").Property.BoxDecorationBreak[];
        boxShadow?: readonly string[] | import("csstype").Property.BoxShadow | readonly import("csstype").Property.BoxShadow[];
        boxSizing?: import("csstype").Property.BoxSizing | readonly NonNullable<import("csstype").Property.BoxSizing>[] | readonly import("csstype").Property.BoxSizing[];
        breakAfter?: import("csstype").Property.BreakAfter | readonly NonNullable<import("csstype").Property.BreakAfter>[] | readonly import("csstype").Property.BreakAfter[];
        breakBefore?: import("csstype").Property.BreakBefore | readonly NonNullable<import("csstype").Property.BreakBefore>[] | readonly import("csstype").Property.BreakBefore[];
        breakInside?: import("csstype").Property.BreakInside | readonly NonNullable<import("csstype").Property.BreakInside>[] | readonly import("csstype").Property.BreakInside[];
        captionSide?: import("csstype").Property.CaptionSide | readonly NonNullable<import("csstype").Property.CaptionSide>[] | readonly import("csstype").Property.CaptionSide[];
        caretColor?: readonly string[] | import("csstype").Property.CaretColor | readonly import("csstype").Property.CaretColor[];
        caretShape?: import("csstype").Property.CaretShape | readonly NonNullable<import("csstype").Property.CaretShape>[] | readonly import("csstype").Property.CaretShape[];
        clear?: import("csstype").Property.Clear | readonly NonNullable<import("csstype").Property.Clear>[] | readonly import("csstype").Property.Clear[];
        clipPath?: readonly string[] | import("csstype").Property.ClipPath | readonly import("csstype").Property.ClipPath[];
        color?: readonly string[] | import("csstype").Property.Color | readonly import("csstype").Property.Color[];
        colorAdjust?: import("csstype").Property.PrintColorAdjust | readonly NonNullable<import("csstype").Property.PrintColorAdjust>[] | readonly import("csstype").Property.PrintColorAdjust[];
        colorScheme?: readonly string[] | import("csstype").Property.ColorScheme | readonly import("csstype").Property.ColorScheme[];
        columnCount?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.ColumnCount | readonly NonNullable<import("csstype").Property.ColumnCount>[];
        columnFill?: import("csstype").Property.ColumnFill | readonly NonNullable<import("csstype").Property.ColumnFill>[] | readonly import("csstype").Property.ColumnFill[];
        columnGap?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnGap<string | number> | readonly NonNullable<import("csstype").Property.ColumnGap<string | number>>[];
        columnRuleColor?: readonly string[] | import("csstype").Property.ColumnRuleColor | readonly import("csstype").Property.ColumnRuleColor[];
        columnRuleStyle?: readonly string[] | import("csstype").Property.ColumnRuleStyle | readonly import("csstype").Property.ColumnRuleStyle[];
        columnRuleWidth?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRuleWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnRuleWidth<string | number>>[];
        columnSpan?: import("csstype").Property.ColumnSpan | readonly NonNullable<import("csstype").Property.ColumnSpan>[] | readonly import("csstype").Property.ColumnSpan[];
        columnWidth?: readonly string[] | import("csstype").Property.ColumnWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnWidth<string | number>>[];
        contain?: readonly string[] | import("csstype").Property.Contain | readonly import("csstype").Property.Contain[];
        containIntrinsicBlockSize?: readonly (string | (string & {}))[] | import("csstype").Property.ContainIntrinsicBlockSize<string | number> | readonly NonNullable<import("csstype").Property.ContainIntrinsicBlockSize<string | number>>[];
        containIntrinsicHeight?: readonly (string | (string & {}))[] | import("csstype").Property.ContainIntrinsicHeight<string | number> | readonly NonNullable<import("csstype").Property.ContainIntrinsicHeight<string | number>>[];
        containIntrinsicInlineSize?: readonly (string | (string & {}))[] | import("csstype").Property.ContainIntrinsicInlineSize<string | number> | readonly NonNullable<import("csstype").Property.ContainIntrinsicInlineSize<string | number>>[];
        containIntrinsicWidth?: readonly (string | (string & {}))[] | import("csstype").Property.ContainIntrinsicWidth<string | number> | readonly NonNullable<import("csstype").Property.ContainIntrinsicWidth<string | number>>[];
        containerName?: readonly string[] | import("csstype").Property.ContainerName | readonly import("csstype").Property.ContainerName[];
        containerType?: import("csstype").Property.ContainerType | readonly NonNullable<import("csstype").Property.ContainerType>[] | readonly import("csstype").Property.ContainerType[];
        content?: readonly string[] | import("csstype").Property.Content | readonly import("csstype").Property.Content[];
        contentVisibility?: import("csstype").Property.ContentVisibility | readonly NonNullable<import("csstype").Property.ContentVisibility>[] | readonly import("csstype").Property.ContentVisibility[];
        counterIncrement?: readonly string[] | import("csstype").Property.CounterIncrement | readonly import("csstype").Property.CounterIncrement[];
        counterReset?: readonly string[] | import("csstype").Property.CounterReset | readonly import("csstype").Property.CounterReset[];
        counterSet?: readonly string[] | import("csstype").Property.CounterSet | readonly import("csstype").Property.CounterSet[];
        cursor?: readonly string[] | import("csstype").Property.Cursor | readonly import("csstype").Property.Cursor[];
        direction?: import("csstype").Property.Direction | readonly NonNullable<import("csstype").Property.Direction>[] | readonly import("csstype").Property.Direction[];
        display?: readonly string[] | import("csstype").Property.Display | readonly import("csstype").Property.Display[];
        emptyCells?: import("csstype").Property.EmptyCells | readonly NonNullable<import("csstype").Property.EmptyCells>[] | readonly import("csstype").Property.EmptyCells[];
        filter?: readonly string[] | import("csstype").Property.Filter | readonly import("csstype").Property.Filter[];
        flexBasis?: readonly (string | (string & {}))[] | import("csstype").Property.FlexBasis<string | number> | readonly NonNullable<import("csstype").Property.FlexBasis<string | number>>[];
        flexDirection?: import("csstype").Property.FlexDirection | readonly NonNullable<import("csstype").Property.FlexDirection>[] | readonly import("csstype").Property.FlexDirection[];
        flexGrow?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FlexGrow | readonly NonNullable<import("csstype").Property.FlexGrow>[];
        flexShrink?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FlexShrink | readonly NonNullable<import("csstype").Property.FlexShrink>[];
        flexWrap?: import("csstype").Property.FlexWrap | readonly NonNullable<import("csstype").Property.FlexWrap>[] | readonly import("csstype").Property.FlexWrap[];
        float?: import("csstype").Property.Float | readonly NonNullable<import("csstype").Property.Float>[] | readonly import("csstype").Property.Float[];
        fontFamily?: readonly string[] | import("csstype").Property.FontFamily | readonly import("csstype").Property.FontFamily[];
        fontFeatureSettings?: readonly string[] | import("csstype").Property.FontFeatureSettings | readonly import("csstype").Property.FontFeatureSettings[];
        fontKerning?: import("csstype").Property.FontKerning | readonly NonNullable<import("csstype").Property.FontKerning>[] | readonly import("csstype").Property.FontKerning[];
        fontLanguageOverride?: readonly string[] | import("csstype").Property.FontLanguageOverride | readonly import("csstype").Property.FontLanguageOverride[];
        fontOpticalSizing?: import("csstype").Property.FontOpticalSizing | readonly NonNullable<import("csstype").Property.FontOpticalSizing>[] | readonly import("csstype").Property.FontOpticalSizing[];
        fontPalette?: readonly string[] | import("csstype").Property.FontPalette | readonly import("csstype").Property.FontPalette[];
        fontSize?: readonly (string | (string & {}))[] | import("csstype").Property.FontSize<string | number> | readonly NonNullable<import("csstype").Property.FontSize<string | number>>[];
        fontSizeAdjust?: import("csstype").Property.FontSizeAdjust | readonly NonNullable<import("csstype").Property.FontSizeAdjust>[] | readonly ("none" | (string & {}) | import('csstype').Globals | "from-font")[];
        fontSmooth?: readonly string[] | import("csstype").Property.FontSmooth<string | number> | readonly NonNullable<import("csstype").Property.FontSmooth<string | number>>[];
        fontStretch?: readonly string[] | import("csstype").Property.FontStretch | readonly import("csstype").Property.FontStretch[];
        fontStyle?: readonly string[] | import("csstype").Property.FontStyle | readonly import("csstype").Property.FontStyle[];
        fontSynthesis?: readonly string[] | import("csstype").Property.FontSynthesis | readonly import("csstype").Property.FontSynthesis[];
        fontSynthesisPosition?: import("csstype").Property.FontSynthesisPosition | readonly NonNullable<import("csstype").Property.FontSynthesisPosition>[] | readonly import("csstype").Property.FontSynthesisPosition[];
        fontSynthesisSmallCaps?: import("csstype").Property.FontSynthesisSmallCaps | readonly NonNullable<import("csstype").Property.FontSynthesisSmallCaps>[] | readonly import("csstype").Property.FontSynthesisSmallCaps[];
        fontSynthesisStyle?: import("csstype").Property.FontSynthesisStyle | readonly NonNullable<import("csstype").Property.FontSynthesisStyle>[] | readonly import("csstype").Property.FontSynthesisStyle[];
        fontSynthesisWeight?: import("csstype").Property.FontSynthesisWeight | readonly NonNullable<import("csstype").Property.FontSynthesisWeight>[] | readonly import("csstype").Property.FontSynthesisWeight[];
        fontVariant?: readonly string[] | import("csstype").Property.FontVariant | readonly import("csstype").Property.FontVariant[];
        fontVariantAlternates?: readonly string[] | import("csstype").Property.FontVariantAlternates | readonly import("csstype").Property.FontVariantAlternates[];
        fontVariantCaps?: import("csstype").Property.FontVariantCaps | readonly NonNullable<import("csstype").Property.FontVariantCaps>[] | readonly import("csstype").Property.FontVariantCaps[];
        fontVariantEastAsian?: readonly string[] | import("csstype").Property.FontVariantEastAsian | readonly import("csstype").Property.FontVariantEastAsian[];
        fontVariantEmoji?: import("csstype").Property.FontVariantEmoji | readonly NonNullable<import("csstype").Property.FontVariantEmoji>[] | readonly import("csstype").Property.FontVariantEmoji[];
        fontVariantLigatures?: readonly string[] | import("csstype").Property.FontVariantLigatures | readonly import("csstype").Property.FontVariantLigatures[];
        fontVariantNumeric?: readonly string[] | import("csstype").Property.FontVariantNumeric | readonly import("csstype").Property.FontVariantNumeric[];
        fontVariantPosition?: import("csstype").Property.FontVariantPosition | readonly NonNullable<import("csstype").Property.FontVariantPosition>[] | readonly import("csstype").Property.FontVariantPosition[];
        fontVariationSettings?: readonly string[] | import("csstype").Property.FontVariationSettings | readonly import("csstype").Property.FontVariationSettings[];
        fontWeight?: import("csstype").Property.FontWeight | readonly NonNullable<import("csstype").Property.FontWeight>[] | readonly ((string & {}) | "normal" | "bold" | import('csstype').Globals | "bolder" | "lighter")[];
        forcedColorAdjust?: import("csstype").Property.ForcedColorAdjust | readonly NonNullable<import("csstype").Property.ForcedColorAdjust>[] | readonly import("csstype").Property.ForcedColorAdjust[];
        gridAutoColumns?: readonly (string | (string & {}))[] | import("csstype").Property.GridAutoColumns<string | number> | readonly NonNullable<import("csstype").Property.GridAutoColumns<string | number>>[];
        gridAutoFlow?: readonly string[] | import("csstype").Property.GridAutoFlow | readonly import("csstype").Property.GridAutoFlow[];
        gridAutoRows?: readonly (string | (string & {}))[] | import("csstype").Property.GridAutoRows<string | number> | readonly NonNullable<import("csstype").Property.GridAutoRows<string | number>>[];
        gridColumnEnd?: import("csstype").Property.GridColumnEnd | readonly NonNullable<import("csstype").Property.GridColumnEnd>[] | readonly ((string & {}) | import('csstype').Globals | "auto")[];
        gridColumnStart?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridColumnStart | readonly NonNullable<import("csstype").Property.GridColumnStart>[];
        gridRowEnd?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridRowEnd | readonly NonNullable<import("csstype").Property.GridRowEnd>[];
        gridRowStart?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridRowStart | readonly NonNullable<import("csstype").Property.GridRowStart>[];
        gridTemplateAreas?: readonly string[] | import("csstype").Property.GridTemplateAreas | readonly import("csstype").Property.GridTemplateAreas[];
        gridTemplateColumns?: readonly (string | (string & {}))[] | import("csstype").Property.GridTemplateColumns<string | number> | readonly NonNullable<import("csstype").Property.GridTemplateColumns<string | number>>[];
        gridTemplateRows?: readonly (string | (string & {}))[] | import("csstype").Property.GridTemplateRows<string | number> | readonly NonNullable<import("csstype").Property.GridTemplateRows<string | number>>[];
        hangingPunctuation?: readonly string[] | import("csstype").Property.HangingPunctuation | readonly import("csstype").Property.HangingPunctuation[];
        height?: readonly (string | (string & {}))[] | import("csstype").Property.Height<string | number> | readonly NonNullable<import("csstype").Property.Height<string | number>>[];
        hyphenateCharacter?: readonly string[] | import("csstype").Property.HyphenateCharacter | readonly import("csstype").Property.HyphenateCharacter[];
        hyphenateLimitChars?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.HyphenateLimitChars | readonly NonNullable<import("csstype").Property.HyphenateLimitChars>[];
        hyphens?: import("csstype").Property.Hyphens | readonly NonNullable<import("csstype").Property.Hyphens>[] | readonly import("csstype").Property.Hyphens[];
        imageOrientation?: readonly string[] | import("csstype").Property.ImageOrientation | readonly import("csstype").Property.ImageOrientation[];
        imageRendering?: import("csstype").Property.ImageRendering | readonly NonNullable<import("csstype").Property.ImageRendering>[] | readonly import("csstype").Property.ImageRendering[];
        imageResolution?: readonly string[] | import("csstype").Property.ImageResolution | readonly import("csstype").Property.ImageResolution[];
        initialLetter?: import("csstype").Property.InitialLetter | readonly NonNullable<import("csstype").Property.InitialLetter>[] | readonly ((string & {}) | "normal" | import('csstype').Globals)[];
        inlineSize?: readonly (string | (string & {}))[] | import("csstype").Property.InlineSize<string | number> | readonly NonNullable<import("csstype").Property.InlineSize<string | number>>[];
        inputSecurity?: import("csstype").Property.InputSecurity | readonly NonNullable<import("csstype").Property.InputSecurity>[] | readonly import("csstype").Property.InputSecurity[];
        insetBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.InsetBlockEnd<string | number>>[];
        insetBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlockStart<string | number> | readonly NonNullable<import("csstype").Property.InsetBlockStart<string | number>>[];
        insetInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.InsetInlineEnd<string | number>>[];
        insetInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInlineStart<string | number> | readonly NonNullable<import("csstype").Property.InsetInlineStart<string | number>>[];
        isolation?: import("csstype").Property.Isolation | readonly NonNullable<import("csstype").Property.Isolation>[] | readonly import("csstype").Property.Isolation[];
        justifyContent?: readonly string[] | import("csstype").Property.JustifyContent | readonly import("csstype").Property.JustifyContent[];
        justifyItems?: readonly string[] | import("csstype").Property.JustifyItems | readonly import("csstype").Property.JustifyItems[];
        justifySelf?: readonly string[] | import("csstype").Property.JustifySelf | readonly import("csstype").Property.JustifySelf[];
        justifyTracks?: readonly string[] | import("csstype").Property.JustifyTracks | readonly import("csstype").Property.JustifyTracks[];
        left?: readonly (string | (string & {}))[] | import("csstype").Property.Left<string | number> | readonly NonNullable<import("csstype").Property.Left<string | number>>[];
        letterSpacing?: readonly string[] | import("csstype").Property.LetterSpacing<string | number> | readonly NonNullable<import("csstype").Property.LetterSpacing<string | number>>[];
        lineBreak?: import("csstype").Property.LineBreak | readonly NonNullable<import("csstype").Property.LineBreak>[] | readonly import("csstype").Property.LineBreak[];
        lineHeight?: readonly (string | (string & {}))[] | import("csstype").Property.LineHeight<string | number> | readonly NonNullable<import("csstype").Property.LineHeight<string | number>>[];
        lineHeightStep?: readonly string[] | import("csstype").Property.LineHeightStep<string | number> | readonly NonNullable<import("csstype").Property.LineHeightStep<string | number>>[];
        listStyleImage?: readonly string[] | import("csstype").Property.ListStyleImage | readonly import("csstype").Property.ListStyleImage[];
        listStylePosition?: import("csstype").Property.ListStylePosition | readonly NonNullable<import("csstype").Property.ListStylePosition>[] | readonly import("csstype").Property.ListStylePosition[];
        listStyleType?: readonly string[] | import("csstype").Property.ListStyleType | readonly import("csstype").Property.ListStyleType[];
        marginBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.MarginBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.MarginBlockEnd<string | number>>[];
        marginBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.MarginBlockStart<string | number> | readonly NonNullable<import("csstype").Property.MarginBlockStart<string | number>>[];
        marginBottom?: readonly (string | (string & {}))[] | import("csstype").Property.MarginBottom<string | number> | readonly NonNullable<import("csstype").Property.MarginBottom<string | number>>[];
        marginInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineEnd<string | number>>[];
        marginInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineStart<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineStart<string | number>>[];
        marginLeft?: readonly (string | (string & {}))[] | import("csstype").Property.MarginLeft<string | number> | readonly NonNullable<import("csstype").Property.MarginLeft<string | number>>[];
        marginRight?: readonly (string | (string & {}))[] | import("csstype").Property.MarginRight<string | number> | readonly NonNullable<import("csstype").Property.MarginRight<string | number>>[];
        marginTop?: readonly (string | (string & {}))[] | import("csstype").Property.MarginTop<string | number> | readonly NonNullable<import("csstype").Property.MarginTop<string | number>>[];
        marginTrim?: import("csstype").Property.MarginTrim | readonly NonNullable<import("csstype").Property.MarginTrim>[] | readonly import("csstype").Property.MarginTrim[];
        maskBorderMode?: import("csstype").Property.MaskBorderMode | readonly NonNullable<import("csstype").Property.MaskBorderMode>[] | readonly import("csstype").Property.MaskBorderMode[];
        maskBorderOutset?: readonly (string | (string & {}))[] | import("csstype").Property.MaskBorderOutset<string | number> | readonly NonNullable<import("csstype").Property.MaskBorderOutset<string | number>>[];
        maskBorderRepeat?: readonly string[] | import("csstype").Property.MaskBorderRepeat | readonly import("csstype").Property.MaskBorderRepeat[];
        maskBorderSlice?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.MaskBorderSlice | readonly NonNullable<import("csstype").Property.MaskBorderSlice>[];
        maskBorderSource?: readonly string[] | import("csstype").Property.MaskBorderSource | readonly import("csstype").Property.MaskBorderSource[];
        maskBorderWidth?: readonly (string | (string & {}))[] | import("csstype").Property.MaskBorderWidth<string | number> | readonly NonNullable<import("csstype").Property.MaskBorderWidth<string | number>>[];
        maskClip?: readonly string[] | import("csstype").Property.MaskClip | readonly import("csstype").Property.MaskClip[];
        maskComposite?: readonly string[] | import("csstype").Property.MaskComposite | readonly import("csstype").Property.MaskComposite[];
        maskImage?: readonly string[] | import("csstype").Property.MaskImage | readonly import("csstype").Property.MaskImage[];
        maskMode?: readonly string[] | import("csstype").Property.MaskMode | readonly import("csstype").Property.MaskMode[];
        maskOrigin?: readonly string[] | import("csstype").Property.MaskOrigin | readonly import("csstype").Property.MaskOrigin[];
        maskPosition?: readonly (string | (string & {}))[] | import("csstype").Property.MaskPosition<string | number> | readonly NonNullable<import("csstype").Property.MaskPosition<string | number>>[];
        maskRepeat?: readonly string[] | import("csstype").Property.MaskRepeat | readonly import("csstype").Property.MaskRepeat[];
        maskSize?: readonly (string | (string & {}))[] | import("csstype").Property.MaskSize<string | number> | readonly NonNullable<import("csstype").Property.MaskSize<string | number>>[];
        maskType?: import("csstype").Property.MaskType | readonly NonNullable<import("csstype").Property.MaskType>[] | readonly import("csstype").Property.MaskType[];
        masonryAutoFlow?: readonly string[] | import("csstype").Property.MasonryAutoFlow | readonly import("csstype").Property.MasonryAutoFlow[];
        mathDepth?: import("csstype").Property.MathDepth | readonly NonNullable<import("csstype").Property.MathDepth>[] | readonly ((string & {}) | import('csstype').Globals | "auto-add")[];
        mathShift?: import("csstype").Property.MathShift | readonly NonNullable<import("csstype").Property.MathShift>[] | readonly import("csstype").Property.MathShift[];
        mathStyle?: import("csstype").Property.MathStyle | readonly NonNullable<import("csstype").Property.MathStyle>[] | readonly import("csstype").Property.MathStyle[];
        maxBlockSize?: readonly (string | (string & {}))[] | import("csstype").Property.MaxBlockSize<string | number> | readonly NonNullable<import("csstype").Property.MaxBlockSize<string | number>>[];
        maxHeight?: readonly (string | (string & {}))[] | import("csstype").Property.MaxHeight<string | number> | readonly NonNullable<import("csstype").Property.MaxHeight<string | number>>[];
        maxInlineSize?: readonly (string | (string & {}))[] | import("csstype").Property.MaxInlineSize<string | number> | readonly NonNullable<import("csstype").Property.MaxInlineSize<string | number>>[];
        maxLines?: import("csstype").Property.MaxLines | readonly NonNullable<import("csstype").Property.MaxLines>[] | readonly ("none" | (string & {}) | import('csstype').Globals)[];
        maxWidth?: readonly (string | (string & {}))[] | import("csstype").Property.MaxWidth<string | number> | readonly NonNullable<import("csstype").Property.MaxWidth<string | number>>[];
        minBlockSize?: readonly (string | (string & {}))[] | import("csstype").Property.MinBlockSize<string | number> | readonly NonNullable<import("csstype").Property.MinBlockSize<string | number>>[];
        minHeight?: readonly (string | (string & {}))[] | import("csstype").Property.MinHeight<string | number> | readonly NonNullable<import("csstype").Property.MinHeight<string | number>>[];
        minInlineSize?: readonly (string | (string & {}))[] | import("csstype").Property.MinInlineSize<string | number> | readonly NonNullable<import("csstype").Property.MinInlineSize<string | number>>[];
        minWidth?: readonly (string | (string & {}))[] | import("csstype").Property.MinWidth<string | number> | readonly NonNullable<import("csstype").Property.MinWidth<string | number>>[];
        mixBlendMode?: import("csstype").Property.MixBlendMode | readonly NonNullable<import("csstype").Property.MixBlendMode>[] | readonly import("csstype").Property.MixBlendMode[];
        motionDistance?: readonly (string | (string & {}))[] | import("csstype").Property.OffsetDistance<string | number> | readonly NonNullable<import("csstype").Property.OffsetDistance<string | number>>[];
        motionPath?: readonly string[] | import("csstype").Property.OffsetPath | readonly import("csstype").Property.OffsetPath[];
        motionRotation?: readonly string[] | import("csstype").Property.OffsetRotate | readonly import("csstype").Property.OffsetRotate[];
        objectFit?: import("csstype").Property.ObjectFit | readonly NonNullable<import("csstype").Property.ObjectFit>[] | readonly import("csstype").Property.ObjectFit[];
        objectPosition?: readonly (string | (string & {}))[] | import("csstype").Property.ObjectPosition<string | number> | readonly NonNullable<import("csstype").Property.ObjectPosition<string | number>>[];
        offsetAnchor?: readonly (string | (string & {}))[] | import("csstype").Property.OffsetAnchor<string | number> | readonly NonNullable<import("csstype").Property.OffsetAnchor<string | number>>[];
        offsetDistance?: readonly (string | (string & {}))[] | import("csstype").Property.OffsetDistance<string | number> | readonly NonNullable<import("csstype").Property.OffsetDistance<string | number>>[];
        offsetPath?: readonly string[] | import("csstype").Property.OffsetPath | readonly import("csstype").Property.OffsetPath[];
        offsetPosition?: readonly (string | (string & {}))[] | import("csstype").Property.OffsetPosition<string | number> | readonly NonNullable<import("csstype").Property.OffsetPosition<string | number>>[];
        offsetRotate?: readonly string[] | import("csstype").Property.OffsetRotate | readonly import("csstype").Property.OffsetRotate[];
        offsetRotation?: readonly string[] | import("csstype").Property.OffsetRotate | readonly import("csstype").Property.OffsetRotate[];
        opacity?: import("csstype").Property.Opacity | readonly NonNullable<import("csstype").Property.Opacity>[] | readonly ((string & {}) | import('csstype').Globals)[];
        order?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.Order | readonly NonNullable<import("csstype").Property.Order>[];
        orphans?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.Orphans | readonly NonNullable<import("csstype").Property.Orphans>[];
        outlineColor?: readonly string[] | import("csstype").Property.OutlineColor | readonly import("csstype").Property.OutlineColor[];
        outlineOffset?: readonly string[] | import("csstype").Property.OutlineOffset<string | number> | readonly NonNullable<import("csstype").Property.OutlineOffset<string | number>>[];
        outlineStyle?: readonly string[] | import("csstype").Property.OutlineStyle | readonly import("csstype").Property.OutlineStyle[];
        outlineWidth?: readonly string[] | import("csstype").Property.OutlineWidth<string | number> | readonly NonNullable<import("csstype").Property.OutlineWidth<string | number>>[];
        overflowAnchor?: import("csstype").Property.OverflowAnchor | readonly NonNullable<import("csstype").Property.OverflowAnchor>[] | readonly import("csstype").Property.OverflowAnchor[];
        overflowBlock?: import("csstype").Property.OverflowBlock | readonly NonNullable<import("csstype").Property.OverflowBlock>[] | readonly import("csstype").Property.OverflowBlock[];
        overflowClipBox?: import("csstype").Property.OverflowClipBox | readonly NonNullable<import("csstype").Property.OverflowClipBox>[] | readonly import("csstype").Property.OverflowClipBox[];
        overflowClipMargin?: readonly (string | (string & {}))[] | import("csstype").Property.OverflowClipMargin<string | number> | readonly NonNullable<import("csstype").Property.OverflowClipMargin<string | number>>[];
        overflowInline?: import("csstype").Property.OverflowInline | readonly NonNullable<import("csstype").Property.OverflowInline>[] | readonly import("csstype").Property.OverflowInline[];
        overflowWrap?: import("csstype").Property.OverflowWrap | readonly NonNullable<import("csstype").Property.OverflowWrap>[] | readonly import("csstype").Property.OverflowWrap[];
        overflowX?: import("csstype").Property.OverflowX | readonly NonNullable<import("csstype").Property.OverflowX>[] | readonly import("csstype").Property.OverflowX[];
        overflowY?: import("csstype").Property.OverflowY | readonly NonNullable<import("csstype").Property.OverflowY>[] | readonly import("csstype").Property.OverflowY[];
        overlay?: import("csstype").Property.Overlay | readonly NonNullable<import("csstype").Property.Overlay>[] | readonly import("csstype").Property.Overlay[];
        overscrollBehaviorBlock?: import("csstype").Property.OverscrollBehaviorBlock | readonly NonNullable<import("csstype").Property.OverscrollBehaviorBlock>[] | readonly import("csstype").Property.OverscrollBehaviorBlock[];
        overscrollBehaviorInline?: import("csstype").Property.OverscrollBehaviorInline | readonly NonNullable<import("csstype").Property.OverscrollBehaviorInline>[] | readonly import("csstype").Property.OverscrollBehaviorInline[];
        overscrollBehaviorX?: import("csstype").Property.OverscrollBehaviorX | readonly NonNullable<import("csstype").Property.OverscrollBehaviorX>[] | readonly import("csstype").Property.OverscrollBehaviorX[];
        overscrollBehaviorY?: import("csstype").Property.OverscrollBehaviorY | readonly NonNullable<import("csstype").Property.OverscrollBehaviorY>[] | readonly import("csstype").Property.OverscrollBehaviorY[];
        paddingBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.PaddingBlockEnd<string | number>>[];
        paddingBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingBlockStart<string | number> | readonly NonNullable<import("csstype").Property.PaddingBlockStart<string | number>>[];
        paddingBottom?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingBottom<string | number> | readonly NonNullable<import("csstype").Property.PaddingBottom<string | number>>[];
        paddingInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineEnd<string | number>>[];
        paddingInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineStart<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineStart<string | number>>[];
        paddingLeft: string | number | readonly NonNullable<import("csstype").Property.PaddingLeft<string | number>>[];
        paddingRight: string | number | readonly NonNullable<import("csstype").Property.PaddingRight<string | number>>[];
        paddingTop?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingTop<string | number> | readonly NonNullable<import("csstype").Property.PaddingTop<string | number>>[];
        page?: readonly string[] | import("csstype").Property.Page | readonly import("csstype").Property.Page[];
        pageBreakAfter?: import("csstype").Property.PageBreakAfter | readonly NonNullable<import("csstype").Property.PageBreakAfter>[] | readonly import("csstype").Property.PageBreakAfter[];
        pageBreakBefore?: import("csstype").Property.PageBreakBefore | readonly NonNullable<import("csstype").Property.PageBreakBefore>[] | readonly import("csstype").Property.PageBreakBefore[];
        pageBreakInside?: import("csstype").Property.PageBreakInside | readonly NonNullable<import("csstype").Property.PageBreakInside>[] | readonly import("csstype").Property.PageBreakInside[];
        paintOrder?: readonly string[] | import("csstype").Property.PaintOrder | readonly import("csstype").Property.PaintOrder[];
        perspective?: readonly string[] | import("csstype").Property.Perspective<string | number> | readonly NonNullable<import("csstype").Property.Perspective<string | number>>[];
        perspectiveOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.PerspectiveOrigin<string | number> | readonly NonNullable<import("csstype").Property.PerspectiveOrigin<string | number>>[];
        pointerEvents?: import("csstype").Property.PointerEvents | readonly NonNullable<import("csstype").Property.PointerEvents>[] | readonly import("csstype").Property.PointerEvents[];
        position?: import("csstype").Property.Position | readonly NonNullable<import("csstype").Property.Position>[] | readonly import("csstype").Property.Position[];
        printColorAdjust?: import("csstype").Property.PrintColorAdjust | readonly NonNullable<import("csstype").Property.PrintColorAdjust>[] | readonly import("csstype").Property.PrintColorAdjust[];
        quotes?: readonly string[] | import("csstype").Property.Quotes | readonly import("csstype").Property.Quotes[];
        resize?: import("csstype").Property.Resize | readonly NonNullable<import("csstype").Property.Resize>[] | readonly import("csstype").Property.Resize[];
        right?: readonly (string | (string & {}))[] | import("csstype").Property.Right<string | number> | readonly NonNullable<import("csstype").Property.Right<string | number>>[];
        rotate?: readonly string[] | import("csstype").Property.Rotate | readonly import("csstype").Property.Rotate[];
        rowGap?: readonly (string | (string & {}))[] | import("csstype").Property.RowGap<string | number> | readonly NonNullable<import("csstype").Property.RowGap<string | number>>[];
        rubyAlign?: import("csstype").Property.RubyAlign | readonly NonNullable<import("csstype").Property.RubyAlign>[] | readonly import("csstype").Property.RubyAlign[];
        rubyMerge?: import("csstype").Property.RubyMerge | readonly NonNullable<import("csstype").Property.RubyMerge>[] | readonly import("csstype").Property.RubyMerge[];
        rubyPosition?: readonly string[] | import("csstype").Property.RubyPosition | readonly import("csstype").Property.RubyPosition[];
        scale?: readonly ("none" | (string & {}) | import('csstype').Globals)[] | import("csstype").Property.Scale | readonly NonNullable<import("csstype").Property.Scale>[];
        scrollBehavior?: import("csstype").Property.ScrollBehavior | readonly NonNullable<import("csstype").Property.ScrollBehavior>[] | readonly import("csstype").Property.ScrollBehavior[];
        scrollMarginBlockEnd?: readonly string[] | import("csstype").Property.ScrollMarginBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginBlockEnd<string | number>>[];
        scrollMarginBlockStart?: readonly string[] | import("csstype").Property.ScrollMarginBlockStart<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginBlockStart<string | number>>[];
        scrollMarginBottom?: readonly string[] | import("csstype").Property.ScrollMarginBottom<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginBottom<string | number>>[];
        scrollMarginInlineEnd?: readonly string[] | import("csstype").Property.ScrollMarginInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginInlineEnd<string | number>>[];
        scrollMarginInlineStart?: readonly string[] | import("csstype").Property.ScrollMarginInlineStart<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginInlineStart<string | number>>[];
        scrollMarginLeft?: readonly string[] | import("csstype").Property.ScrollMarginLeft<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginLeft<string | number>>[];
        scrollMarginRight?: readonly string[] | import("csstype").Property.ScrollMarginRight<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginRight<string | number>>[];
        scrollMarginTop?: readonly string[] | import("csstype").Property.ScrollMarginTop<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginTop<string | number>>[];
        scrollPaddingBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingBlockEnd<string | number>>[];
        scrollPaddingBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingBlockStart<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingBlockStart<string | number>>[];
        scrollPaddingBottom?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingBottom<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingBottom<string | number>>[];
        scrollPaddingInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingInlineEnd<string | number>>[];
        scrollPaddingInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingInlineStart<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingInlineStart<string | number>>[];
        scrollPaddingLeft?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingLeft<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingLeft<string | number>>[];
        scrollPaddingRight?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingRight<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingRight<string | number>>[];
        scrollPaddingTop?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingTop<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingTop<string | number>>[];
        scrollSnapAlign?: readonly string[] | import("csstype").Property.ScrollSnapAlign | readonly import("csstype").Property.ScrollSnapAlign[];
        scrollSnapMarginBottom?: readonly string[] | import("csstype").Property.ScrollMarginBottom<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginBottom<string | number>>[];
        scrollSnapMarginLeft?: readonly string[] | import("csstype").Property.ScrollMarginLeft<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginLeft<string | number>>[];
        scrollSnapMarginRight?: readonly string[] | import("csstype").Property.ScrollMarginRight<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginRight<string | number>>[];
        scrollSnapMarginTop?: readonly string[] | import("csstype").Property.ScrollMarginTop<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginTop<string | number>>[];
        scrollSnapStop?: import("csstype").Property.ScrollSnapStop | readonly NonNullable<import("csstype").Property.ScrollSnapStop>[] | readonly import("csstype").Property.ScrollSnapStop[];
        scrollSnapType?: readonly string[] | import("csstype").Property.ScrollSnapType | readonly import("csstype").Property.ScrollSnapType[];
        scrollTimelineAxis?: readonly string[] | import("csstype").Property.ScrollTimelineAxis | readonly import("csstype").Property.ScrollTimelineAxis[];
        scrollTimelineName?: readonly string[] | import("csstype").Property.ScrollTimelineName | readonly import("csstype").Property.ScrollTimelineName[];
        scrollbarColor?: readonly string[] | import("csstype").Property.ScrollbarColor | readonly import("csstype").Property.ScrollbarColor[];
        scrollbarGutter?: readonly string[] | import("csstype").Property.ScrollbarGutter | readonly import("csstype").Property.ScrollbarGutter[];
        scrollbarWidth?: import("csstype").Property.ScrollbarWidth | readonly NonNullable<import("csstype").Property.ScrollbarWidth>[] | readonly import("csstype").Property.ScrollbarWidth[];
        shapeImageThreshold?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.ShapeImageThreshold | readonly NonNullable<import("csstype").Property.ShapeImageThreshold>[];
        shapeMargin?: readonly (string | (string & {}))[] | import("csstype").Property.ShapeMargin<string | number> | readonly NonNullable<import("csstype").Property.ShapeMargin<string | number>>[];
        shapeOutside?: readonly string[] | import("csstype").Property.ShapeOutside | readonly import("csstype").Property.ShapeOutside[];
        tabSize?: readonly (string | (string & {}))[] | import("csstype").Property.TabSize<string | number> | readonly NonNullable<import("csstype").Property.TabSize<string | number>>[];
        tableLayout?: import("csstype").Property.TableLayout | readonly NonNullable<import("csstype").Property.TableLayout>[] | readonly import("csstype").Property.TableLayout[];
        textAlign?: import("csstype").Property.TextAlign | readonly NonNullable<import("csstype").Property.TextAlign>[] | readonly import("csstype").Property.TextAlign[];
        textAlignLast?: import("csstype").Property.TextAlignLast | readonly NonNullable<import("csstype").Property.TextAlignLast>[] | readonly import("csstype").Property.TextAlignLast[];
        textCombineUpright?: readonly string[] | import("csstype").Property.TextCombineUpright | readonly import("csstype").Property.TextCombineUpright[];
        textDecorationColor?: readonly string[] | import("csstype").Property.TextDecorationColor | readonly import("csstype").Property.TextDecorationColor[];
        textDecorationLine?: readonly string[] | import("csstype").Property.TextDecorationLine | readonly import("csstype").Property.TextDecorationLine[];
        textDecorationSkip?: readonly string[] | import("csstype").Property.TextDecorationSkip | readonly import("csstype").Property.TextDecorationSkip[];
        textDecorationSkipInk?: import("csstype").Property.TextDecorationSkipInk | readonly NonNullable<import("csstype").Property.TextDecorationSkipInk>[] | readonly import("csstype").Property.TextDecorationSkipInk[];
        textDecorationStyle?: import("csstype").Property.TextDecorationStyle | readonly NonNullable<import("csstype").Property.TextDecorationStyle>[] | readonly import("csstype").Property.TextDecorationStyle[];
        textDecorationThickness?: readonly (string | (string & {}))[] | import("csstype").Property.TextDecorationThickness<string | number> | readonly NonNullable<import("csstype").Property.TextDecorationThickness<string | number>>[];
        textEmphasisColor?: readonly string[] | import("csstype").Property.TextEmphasisColor | readonly import("csstype").Property.TextEmphasisColor[];
        textEmphasisPosition?: readonly string[] | import("csstype").Property.TextEmphasisPosition | readonly import("csstype").Property.TextEmphasisPosition[];
        textEmphasisStyle?: readonly string[] | import("csstype").Property.TextEmphasisStyle | readonly import("csstype").Property.TextEmphasisStyle[];
        textIndent?: readonly (string | (string & {}))[] | import("csstype").Property.TextIndent<string | number> | readonly NonNullable<import("csstype").Property.TextIndent<string | number>>[];
        textJustify?: import("csstype").Property.TextJustify | readonly NonNullable<import("csstype").Property.TextJustify>[] | readonly import("csstype").Property.TextJustify[];
        textOrientation?: import("csstype").Property.TextOrientation | readonly NonNullable<import("csstype").Property.TextOrientation>[] | readonly import("csstype").Property.TextOrientation[];
        textOverflow?: readonly string[] | import("csstype").Property.TextOverflow | readonly import("csstype").Property.TextOverflow[];
        textRendering?: import("csstype").Property.TextRendering | readonly NonNullable<import("csstype").Property.TextRendering>[] | readonly import("csstype").Property.TextRendering[];
        textShadow?: readonly string[] | import("csstype").Property.TextShadow | readonly import("csstype").Property.TextShadow[];
        textSizeAdjust?: readonly string[] | import("csstype").Property.TextSizeAdjust | readonly import("csstype").Property.TextSizeAdjust[];
        textTransform?: import("csstype").Property.TextTransform | readonly NonNullable<import("csstype").Property.TextTransform>[] | readonly import("csstype").Property.TextTransform[];
        textUnderlineOffset?: readonly (string | (string & {}))[] | import("csstype").Property.TextUnderlineOffset<string | number> | readonly NonNullable<import("csstype").Property.TextUnderlineOffset<string | number>>[];
        textUnderlinePosition?: readonly string[] | import("csstype").Property.TextUnderlinePosition | readonly import("csstype").Property.TextUnderlinePosition[];
        textWrap?: import("csstype").Property.TextWrap | readonly NonNullable<import("csstype").Property.TextWrap>[] | readonly import("csstype").Property.TextWrap[];
        timelineScope?: readonly string[] | import("csstype").Property.TimelineScope | readonly import("csstype").Property.TimelineScope[];
        top?: readonly (string | (string & {}))[] | import("csstype").Property.Top<string | number> | readonly NonNullable<import("csstype").Property.Top<string | number>>[];
        touchAction?: readonly string[] | import("csstype").Property.TouchAction | readonly import("csstype").Property.TouchAction[];
        transform?: readonly string[] | import("csstype").Property.Transform | readonly import("csstype").Property.Transform[];
        transformBox?: import("csstype").Property.TransformBox | readonly NonNullable<import("csstype").Property.TransformBox>[] | readonly import("csstype").Property.TransformBox[];
        transformOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.TransformOrigin<string | number> | readonly NonNullable<import("csstype").Property.TransformOrigin<string | number>>[];
        transformStyle?: import("csstype").Property.TransformStyle | readonly NonNullable<import("csstype").Property.TransformStyle>[] | readonly import("csstype").Property.TransformStyle[];
        transitionBehavior?: readonly string[] | import("csstype").Property.TransitionBehavior | readonly import("csstype").Property.TransitionBehavior[];
        transitionDelay?: readonly string[] | import("csstype").Property.TransitionDelay<string & {}> | readonly import("csstype").Property.TransitionDelay<string & {}>[];
        transitionDuration?: readonly string[] | import("csstype").Property.TransitionDuration<string & {}> | readonly import("csstype").Property.TransitionDuration<string & {}>[];
        transitionProperty?: readonly string[] | import("csstype").Property.TransitionProperty | readonly import("csstype").Property.TransitionProperty[];
        transitionTimingFunction?: readonly string[] | import("csstype").Property.TransitionTimingFunction | readonly import("csstype").Property.TransitionTimingFunction[];
        translate?: readonly (string | (string & {}))[] | import("csstype").Property.Translate<string | number> | readonly NonNullable<import("csstype").Property.Translate<string | number>>[];
        unicodeBidi?: import("csstype").Property.UnicodeBidi | readonly NonNullable<import("csstype").Property.UnicodeBidi>[] | readonly import("csstype").Property.UnicodeBidi[];
        userSelect?: import("csstype").Property.UserSelect | readonly NonNullable<import("csstype").Property.UserSelect>[] | readonly import("csstype").Property.UserSelect[];
        verticalAlign?: readonly (string | (string & {}))[] | import("csstype").Property.VerticalAlign<string | number> | readonly NonNullable<import("csstype").Property.VerticalAlign<string | number>>[];
        viewTimelineAxis?: readonly string[] | import("csstype").Property.ViewTimelineAxis | readonly import("csstype").Property.ViewTimelineAxis[];
        viewTimelineInset?: readonly (string | (string & {}))[] | import("csstype").Property.ViewTimelineInset<string | number> | readonly NonNullable<import("csstype").Property.ViewTimelineInset<string | number>>[];
        viewTimelineName?: readonly string[] | import("csstype").Property.ViewTimelineName | readonly import("csstype").Property.ViewTimelineName[];
        viewTransitionName?: readonly string[] | import("csstype").Property.ViewTransitionName | readonly import("csstype").Property.ViewTransitionName[];
        visibility?: import("csstype").Property.Visibility | readonly NonNullable<import("csstype").Property.Visibility>[] | readonly import("csstype").Property.Visibility[];
        whiteSpace?: readonly string[] | import("csstype").Property.WhiteSpace | readonly import("csstype").Property.WhiteSpace[];
        whiteSpaceCollapse?: import("csstype").Property.WhiteSpaceCollapse | readonly NonNullable<import("csstype").Property.WhiteSpaceCollapse>[] | readonly import("csstype").Property.WhiteSpaceCollapse[];
        whiteSpaceTrim?: readonly string[] | import("csstype").Property.WhiteSpaceTrim | readonly import("csstype").Property.WhiteSpaceTrim[];
        widows?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.Widows | readonly NonNullable<import("csstype").Property.Widows>[];
        width?: import("csstype").Property.Width<string | number> | readonly NonNullable<import("csstype").Property.Width<string | number>>[] | readonly (string | (string & {}))[];
        willChange?: readonly string[] | import("csstype").Property.WillChange | readonly import("csstype").Property.WillChange[];
        wordBreak?: import("csstype").Property.WordBreak | readonly NonNullable<import("csstype").Property.WordBreak>[] | readonly import("csstype").Property.WordBreak[];
        wordSpacing?: readonly string[] | import("csstype").Property.WordSpacing<string | number> | readonly NonNullable<import("csstype").Property.WordSpacing<string | number>>[];
        wordWrap?: import("csstype").Property.WordWrap | readonly NonNullable<import("csstype").Property.WordWrap>[] | readonly import("csstype").Property.WordWrap[];
        writingMode?: import("csstype").Property.WritingMode | readonly NonNullable<import("csstype").Property.WritingMode>[] | readonly import("csstype").Property.WritingMode[];
        zIndex?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.ZIndex | readonly NonNullable<import("csstype").Property.ZIndex>[];
        zoom?: import("csstype").Property.Zoom | readonly NonNullable<import("csstype").Property.Zoom>[] | readonly ((string & {}) | "reset" | "normal" | import('csstype').Globals)[];
        all?: import('csstype').Globals | readonly NonNullable<import('csstype').Globals>[] | readonly import('csstype').Globals[];
        animation?: import("csstype").Property.Animation<string & {}> | readonly NonNullable<import("csstype").Property.Animation<string & {}>>[] | readonly ("none" | (string & {}) | "normal" | "reverse" | import('csstype').Globals | "auto" | "ease" | "ease-in" | "ease-in-out" | "ease-out" | "step-end" | "step-start" | "linear" | "alternate" | "alternate-reverse" | "backwards" | "both" | "forwards" | "infinite" | "paused" | "running")[];
        animationRange?: readonly (string | (string & {}))[] | import("csstype").Property.AnimationRange<string | number> | readonly NonNullable<import("csstype").Property.AnimationRange<string | number>>[];
        background?: readonly (string | (string & {}))[] | import("csstype").Property.Background<string | number> | readonly NonNullable<import("csstype").Property.Background<string | number>>[];
        backgroundPosition?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundPosition<string | number> | readonly NonNullable<import("csstype").Property.BackgroundPosition<string | number>>[];
        border?: readonly (string | (string & {}))[] | import("csstype").Property.Border<string | number> | readonly NonNullable<import("csstype").Property.Border<string | number>>[];
        borderBlock?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBlock<string | number> | readonly NonNullable<import("csstype").Property.BorderBlock<string | number>>[];
        borderBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.BorderBlockEnd<string | number>>[];
        borderBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBlockStart<string | number> | readonly NonNullable<import("csstype").Property.BorderBlockStart<string | number>>[];
        borderBottom?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottom<string | number> | readonly NonNullable<import("csstype").Property.BorderBottom<string | number>>[];
        borderColor?: readonly string[] | import("csstype").Property.BorderColor | readonly import("csstype").Property.BorderColor[];
        borderImage?: import("csstype").Property.BorderImage | readonly NonNullable<import("csstype").Property.BorderImage>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space")[];
        borderInline?: readonly (string | (string & {}))[] | import("csstype").Property.BorderInline<string | number> | readonly NonNullable<import("csstype").Property.BorderInline<string | number>>[];
        borderInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.BorderInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineEnd<string | number>>[];
        borderInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.BorderInlineStart<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineStart<string | number>>[];
        borderLeft?: readonly (string | (string & {}))[] | import("csstype").Property.BorderLeft<string | number> | readonly NonNullable<import("csstype").Property.BorderLeft<string | number>>[];
        borderRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderRadius<string | number>>[];
        borderRight?: readonly (string | (string & {}))[] | import("csstype").Property.BorderRight<string | number> | readonly NonNullable<import("csstype").Property.BorderRight<string | number>>[];
        borderStyle?: readonly string[] | import("csstype").Property.BorderStyle | readonly import("csstype").Property.BorderStyle[];
        borderTop?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTop<string | number> | readonly NonNullable<import("csstype").Property.BorderTop<string | number>>[];
        borderWidth?: readonly (string | (string & {}))[] | import("csstype").Property.BorderWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderWidth<string | number>>[];
        caret?: readonly string[] | import("csstype").Property.Caret | readonly import("csstype").Property.Caret[];
        columnRule?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRule<string | number> | readonly NonNullable<import("csstype").Property.ColumnRule<string | number>>[];
        columns?: readonly (string | (string & {}))[] | import("csstype").Property.Columns<string | number> | readonly NonNullable<import("csstype").Property.Columns<string | number>>[];
        containIntrinsicSize?: readonly (string | (string & {}))[] | import("csstype").Property.ContainIntrinsicSize<string | number> | readonly NonNullable<import("csstype").Property.ContainIntrinsicSize<string | number>>[];
        container?: readonly string[] | import("csstype").Property.Container | readonly import("csstype").Property.Container[];
        flex?: readonly (string | (string & {}))[] | import("csstype").Property.Flex<string | number> | readonly NonNullable<import("csstype").Property.Flex<string | number>>[];
        flexFlow?: readonly string[] | import("csstype").Property.FlexFlow | readonly import("csstype").Property.FlexFlow[];
        font?: readonly string[] | import("csstype").Property.Font | readonly import("csstype").Property.Font[];
        gap: string | number | readonly NonNullable<import("csstype").Property.Gap<string | number>>[];
        grid?: readonly string[] | import("csstype").Property.Grid | readonly import("csstype").Property.Grid[];
        gridArea?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridArea | readonly NonNullable<import("csstype").Property.GridArea>[];
        gridColumn?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridColumn | readonly NonNullable<import("csstype").Property.GridColumn>[];
        gridRow?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GridRow | readonly NonNullable<import("csstype").Property.GridRow>[];
        gridTemplate?: readonly string[] | import("csstype").Property.GridTemplate | readonly import("csstype").Property.GridTemplate[];
        inset?: readonly (string | (string & {}))[] | import("csstype").Property.Inset<string | number> | readonly NonNullable<import("csstype").Property.Inset<string | number>>[];
        insetBlock?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlock<string | number> | readonly NonNullable<import("csstype").Property.InsetBlock<string | number>>[];
        insetInline?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInline<string | number> | readonly NonNullable<import("csstype").Property.InsetInline<string | number>>[];
        lineClamp?: readonly ("none" | (string & {}) | import('csstype').Globals)[] | import("csstype").Property.LineClamp | readonly NonNullable<import("csstype").Property.LineClamp>[];
        listStyle?: readonly string[] | import("csstype").Property.ListStyle | readonly import("csstype").Property.ListStyle[];
        margin?: readonly (string | (string & {}))[] | import("csstype").Property.Margin<string | number> | readonly NonNullable<import("csstype").Property.Margin<string | number>>[];
        marginBlock?: readonly (string | (string & {}))[] | import("csstype").Property.MarginBlock<string | number> | readonly NonNullable<import("csstype").Property.MarginBlock<string | number>>[];
        marginInline?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInline<string | number> | readonly NonNullable<import("csstype").Property.MarginInline<string | number>>[];
        mask?: readonly (string | (string & {}))[] | import("csstype").Property.Mask<string | number> | readonly NonNullable<import("csstype").Property.Mask<string | number>>[];
        maskBorder?: import("csstype").Property.MaskBorder | readonly NonNullable<import("csstype").Property.MaskBorder>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space" | "alpha" | "luminance")[];
        motion?: readonly (string | (string & {}))[] | import("csstype").Property.Offset<string | number> | readonly NonNullable<import("csstype").Property.Offset<string | number>>[];
        offset?: readonly (string | (string & {}))[] | import("csstype").Property.Offset<string | number> | readonly NonNullable<import("csstype").Property.Offset<string | number>>[];
        outline?: readonly (string | (string & {}))[] | import("csstype").Property.Outline<string | number> | readonly NonNullable<import("csstype").Property.Outline<string | number>>[];
        overflow?: readonly string[] | import("csstype").Property.Overflow | readonly import("csstype").Property.Overflow[];
        overscrollBehavior?: readonly string[] | import("csstype").Property.OverscrollBehavior | readonly import("csstype").Property.OverscrollBehavior[];
        padding?: readonly (string | (string & {}))[] | import("csstype").Property.Padding<string | number> | readonly NonNullable<import("csstype").Property.Padding<string | number>>[];
        paddingBlock?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingBlock<string | number> | readonly NonNullable<import("csstype").Property.PaddingBlock<string | number>>[];
        paddingInline?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInline<string | number> | readonly NonNullable<import("csstype").Property.PaddingInline<string | number>>[];
        placeContent?: readonly string[] | import("csstype").Property.PlaceContent | readonly import("csstype").Property.PlaceContent[];
        placeItems?: readonly string[] | import("csstype").Property.PlaceItems | readonly import("csstype").Property.PlaceItems[];
        placeSelf?: readonly string[] | import("csstype").Property.PlaceSelf | readonly import("csstype").Property.PlaceSelf[];
        scrollMargin?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollMargin<string | number> | readonly NonNullable<import("csstype").Property.ScrollMargin<string | number>>[];
        scrollMarginBlock?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollMarginBlock<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginBlock<string | number>>[];
        scrollMarginInline?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollMarginInline<string | number> | readonly NonNullable<import("csstype").Property.ScrollMarginInline<string | number>>[];
        scrollPadding?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPadding<string | number> | readonly NonNullable<import("csstype").Property.ScrollPadding<string | number>>[];
        scrollPaddingBlock?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingBlock<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingBlock<string | number>>[];
        scrollPaddingInline?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollPaddingInline<string | number> | readonly NonNullable<import("csstype").Property.ScrollPaddingInline<string | number>>[];
        scrollSnapMargin?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollMargin<string | number> | readonly NonNullable<import("csstype").Property.ScrollMargin<string | number>>[];
        scrollTimeline?: readonly string[] | import("csstype").Property.ScrollTimeline | readonly import("csstype").Property.ScrollTimeline[];
        textDecoration?: readonly (string | (string & {}))[] | import("csstype").Property.TextDecoration<string | number> | readonly NonNullable<import("csstype").Property.TextDecoration<string | number>>[];
        textEmphasis?: readonly string[] | import("csstype").Property.TextEmphasis | readonly import("csstype").Property.TextEmphasis[];
        transition?: readonly string[] | import("csstype").Property.Transition<string & {}> | readonly import("csstype").Property.Transition<string & {}>[];
        viewTimeline?: readonly string[] | import("csstype").Property.ViewTimeline | readonly import("csstype").Property.ViewTimeline[];
        MozAnimationDelay?: readonly string[] | import("csstype").Property.AnimationDelay<string & {}> | readonly import("csstype").Property.AnimationDelay<string & {}>[];
        MozAnimationDirection?: readonly string[] | import("csstype").Property.AnimationDirection | readonly import("csstype").Property.AnimationDirection[];
        MozAnimationDuration?: readonly string[] | import("csstype").Property.AnimationDuration<string & {}> | readonly import("csstype").Property.AnimationDuration<string & {}>[];
        MozAnimationFillMode?: readonly string[] | import("csstype").Property.AnimationFillMode | readonly import("csstype").Property.AnimationFillMode[];
        MozAnimationIterationCount?: import("csstype").Property.AnimationIterationCount | readonly NonNullable<import("csstype").Property.AnimationIterationCount>[] | readonly ((string & {}) | import('csstype').Globals | "infinite")[];
        MozAnimationName?: readonly string[] | import("csstype").Property.AnimationName | readonly import("csstype").Property.AnimationName[];
        MozAnimationPlayState?: readonly string[] | import("csstype").Property.AnimationPlayState | readonly import("csstype").Property.AnimationPlayState[];
        MozAnimationTimingFunction?: readonly string[] | import("csstype").Property.AnimationTimingFunction | readonly import("csstype").Property.AnimationTimingFunction[];
        MozAppearance?: import("csstype").Property.MozAppearance | readonly NonNullable<import("csstype").Property.MozAppearance>[] | readonly import("csstype").Property.MozAppearance[];
        MozBinding?: readonly string[] | import("csstype").Property.MozBinding | readonly import("csstype").Property.MozBinding[];
        MozBorderBottomColors?: readonly string[] | import("csstype").Property.MozBorderBottomColors | readonly import("csstype").Property.MozBorderBottomColors[];
        MozBorderEndColor?: readonly string[] | import("csstype").Property.BorderInlineEndColor | readonly import("csstype").Property.BorderInlineEndColor[];
        MozBorderEndStyle?: import("csstype").Property.BorderInlineEndStyle | readonly NonNullable<import("csstype").Property.BorderInlineEndStyle>[] | readonly import("csstype").Property.BorderInlineEndStyle[];
        MozBorderEndWidth?: readonly string[] | import("csstype").Property.BorderInlineEndWidth<string | number> | readonly NonNullable<import("csstype").Property.BorderInlineEndWidth<string | number>>[];
        MozBorderLeftColors?: readonly string[] | import("csstype").Property.MozBorderLeftColors | readonly import("csstype").Property.MozBorderLeftColors[];
        MozBorderRightColors?: readonly string[] | import("csstype").Property.MozBorderRightColors | readonly import("csstype").Property.MozBorderRightColors[];
        MozBorderStartColor?: readonly string[] | import("csstype").Property.BorderInlineStartColor | readonly import("csstype").Property.BorderInlineStartColor[];
        MozBorderStartStyle?: import("csstype").Property.BorderInlineStartStyle | readonly NonNullable<import("csstype").Property.BorderInlineStartStyle>[] | readonly import("csstype").Property.BorderInlineStartStyle[];
        MozBorderTopColors?: readonly string[] | import("csstype").Property.MozBorderTopColors | readonly import("csstype").Property.MozBorderTopColors[];
        MozBoxSizing?: import("csstype").Property.BoxSizing | readonly NonNullable<import("csstype").Property.BoxSizing>[] | readonly import("csstype").Property.BoxSizing[];
        MozColumnCount?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.ColumnCount | readonly NonNullable<import("csstype").Property.ColumnCount>[];
        MozColumnFill?: import("csstype").Property.ColumnFill | readonly NonNullable<import("csstype").Property.ColumnFill>[] | readonly import("csstype").Property.ColumnFill[];
        MozColumnRuleColor?: readonly string[] | import("csstype").Property.ColumnRuleColor | readonly import("csstype").Property.ColumnRuleColor[];
        MozColumnRuleStyle?: readonly string[] | import("csstype").Property.ColumnRuleStyle | readonly import("csstype").Property.ColumnRuleStyle[];
        MozColumnRuleWidth?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRuleWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnRuleWidth<string | number>>[];
        MozColumnWidth?: readonly string[] | import("csstype").Property.ColumnWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnWidth<string | number>>[];
        MozContextProperties?: readonly string[] | import("csstype").Property.MozContextProperties | readonly import("csstype").Property.MozContextProperties[];
        MozFontFeatureSettings?: readonly string[] | import("csstype").Property.FontFeatureSettings | readonly import("csstype").Property.FontFeatureSettings[];
        MozFontLanguageOverride?: readonly string[] | import("csstype").Property.FontLanguageOverride | readonly import("csstype").Property.FontLanguageOverride[];
        MozHyphens?: import("csstype").Property.Hyphens | readonly NonNullable<import("csstype").Property.Hyphens>[] | readonly import("csstype").Property.Hyphens[];
        MozImageRegion?: readonly string[] | import("csstype").Property.MozImageRegion | readonly import("csstype").Property.MozImageRegion[];
        MozMarginEnd?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineEnd<string | number>>[];
        MozMarginStart?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineStart<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineStart<string | number>>[];
        MozOrient?: import("csstype").Property.MozOrient | readonly NonNullable<import("csstype").Property.MozOrient>[] | readonly import("csstype").Property.MozOrient[];
        MozOsxFontSmoothing?: readonly string[] | import("csstype").Property.FontSmooth<string | number> | readonly NonNullable<import("csstype").Property.FontSmooth<string | number>>[];
        MozOutlineRadiusBottomleft?: readonly (string | (string & {}))[] | import("csstype").Property.MozOutlineRadiusBottomleft<string | number> | readonly NonNullable<import("csstype").Property.MozOutlineRadiusBottomleft<string | number>>[];
        MozOutlineRadiusBottomright?: readonly (string | (string & {}))[] | import("csstype").Property.MozOutlineRadiusBottomright<string | number> | readonly NonNullable<import("csstype").Property.MozOutlineRadiusBottomright<string | number>>[];
        MozOutlineRadiusTopleft?: readonly (string | (string & {}))[] | import("csstype").Property.MozOutlineRadiusTopleft<string | number> | readonly NonNullable<import("csstype").Property.MozOutlineRadiusTopleft<string | number>>[];
        MozOutlineRadiusTopright?: readonly (string | (string & {}))[] | import("csstype").Property.MozOutlineRadiusTopright<string | number> | readonly NonNullable<import("csstype").Property.MozOutlineRadiusTopright<string | number>>[];
        MozPaddingEnd?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineEnd<string | number>>[];
        MozPaddingStart?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineStart<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineStart<string | number>>[];
        MozStackSizing?: import("csstype").Property.MozStackSizing | readonly NonNullable<import("csstype").Property.MozStackSizing>[] | readonly import("csstype").Property.MozStackSizing[];
        MozTabSize?: readonly (string | (string & {}))[] | import("csstype").Property.TabSize<string | number> | readonly NonNullable<import("csstype").Property.TabSize<string | number>>[];
        MozTextBlink?: import("csstype").Property.MozTextBlink | readonly NonNullable<import("csstype").Property.MozTextBlink>[] | readonly import("csstype").Property.MozTextBlink[];
        MozTextSizeAdjust?: readonly string[] | import("csstype").Property.TextSizeAdjust | readonly import("csstype").Property.TextSizeAdjust[];
        MozUserFocus?: import("csstype").Property.MozUserFocus | readonly NonNullable<import("csstype").Property.MozUserFocus>[] | readonly import("csstype").Property.MozUserFocus[];
        MozUserModify?: import("csstype").Property.MozUserModify | readonly NonNullable<import("csstype").Property.MozUserModify>[] | readonly import("csstype").Property.MozUserModify[];
        MozUserSelect?: import("csstype").Property.UserSelect | readonly NonNullable<import("csstype").Property.UserSelect>[] | readonly import("csstype").Property.UserSelect[];
        MozWindowDragging?: import("csstype").Property.MozWindowDragging | readonly NonNullable<import("csstype").Property.MozWindowDragging>[] | readonly import("csstype").Property.MozWindowDragging[];
        MozWindowShadow?: import("csstype").Property.MozWindowShadow | readonly NonNullable<import("csstype").Property.MozWindowShadow>[] | readonly import("csstype").Property.MozWindowShadow[];
        msAccelerator?: import("csstype").Property.MsAccelerator | readonly NonNullable<import("csstype").Property.MsAccelerator>[] | readonly import("csstype").Property.MsAccelerator[];
        msBlockProgression?: import("csstype").Property.MsBlockProgression | readonly NonNullable<import("csstype").Property.MsBlockProgression>[] | readonly import("csstype").Property.MsBlockProgression[];
        msContentZoomChaining?: import("csstype").Property.MsContentZoomChaining | readonly NonNullable<import("csstype").Property.MsContentZoomChaining>[] | readonly import("csstype").Property.MsContentZoomChaining[];
        msContentZoomLimitMax?: readonly string[] | import("csstype").Property.MsContentZoomLimitMax | readonly import("csstype").Property.MsContentZoomLimitMax[];
        msContentZoomLimitMin?: readonly string[] | import("csstype").Property.MsContentZoomLimitMin | readonly import("csstype").Property.MsContentZoomLimitMin[];
        msContentZoomSnapPoints?: readonly string[] | import("csstype").Property.MsContentZoomSnapPoints | readonly import("csstype").Property.MsContentZoomSnapPoints[];
        msContentZoomSnapType?: import("csstype").Property.MsContentZoomSnapType | readonly NonNullable<import("csstype").Property.MsContentZoomSnapType>[] | readonly import("csstype").Property.MsContentZoomSnapType[];
        msContentZooming?: import("csstype").Property.MsContentZooming | readonly NonNullable<import("csstype").Property.MsContentZooming>[] | readonly import("csstype").Property.MsContentZooming[];
        msFilter?: readonly string[] | import("csstype").Property.MsFilter | readonly import("csstype").Property.MsFilter[];
        msFlexDirection?: import("csstype").Property.FlexDirection | readonly NonNullable<import("csstype").Property.FlexDirection>[] | readonly import("csstype").Property.FlexDirection[];
        msFlexPositive?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FlexGrow | readonly NonNullable<import("csstype").Property.FlexGrow>[];
        msFlowFrom?: readonly string[] | import("csstype").Property.MsFlowFrom | readonly import("csstype").Property.MsFlowFrom[];
        msFlowInto?: readonly string[] | import("csstype").Property.MsFlowInto | readonly import("csstype").Property.MsFlowInto[];
        msGridColumns?: readonly (string | (string & {}))[] | import("csstype").Property.MsGridColumns<string | number> | readonly NonNullable<import("csstype").Property.MsGridColumns<string | number>>[];
        msGridRows?: readonly (string | (string & {}))[] | import("csstype").Property.MsGridRows<string | number> | readonly NonNullable<import("csstype").Property.MsGridRows<string | number>>[];
        msHighContrastAdjust?: import("csstype").Property.MsHighContrastAdjust | readonly NonNullable<import("csstype").Property.MsHighContrastAdjust>[] | readonly import("csstype").Property.MsHighContrastAdjust[];
        msHyphenateLimitChars?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.MsHyphenateLimitChars | readonly NonNullable<import("csstype").Property.MsHyphenateLimitChars>[];
        msHyphenateLimitLines?: import("csstype").Property.MsHyphenateLimitLines | readonly NonNullable<import("csstype").Property.MsHyphenateLimitLines>[] | readonly ((string & {}) | import('csstype').Globals | "no-limit")[];
        msHyphenateLimitZone?: readonly (string | (string & {}))[] | import("csstype").Property.MsHyphenateLimitZone<string | number> | readonly NonNullable<import("csstype").Property.MsHyphenateLimitZone<string | number>>[];
        msHyphens?: import("csstype").Property.Hyphens | readonly NonNullable<import("csstype").Property.Hyphens>[] | readonly import("csstype").Property.Hyphens[];
        msImeAlign?: import("csstype").Property.MsImeAlign | readonly NonNullable<import("csstype").Property.MsImeAlign>[] | readonly import("csstype").Property.MsImeAlign[];
        msLineBreak?: import("csstype").Property.LineBreak | readonly NonNullable<import("csstype").Property.LineBreak>[] | readonly import("csstype").Property.LineBreak[];
        msOrder?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.Order | readonly NonNullable<import("csstype").Property.Order>[];
        msOverflowStyle?: import("csstype").Property.MsOverflowStyle | readonly NonNullable<import("csstype").Property.MsOverflowStyle>[] | readonly import("csstype").Property.MsOverflowStyle[];
        msOverflowX?: import("csstype").Property.OverflowX | readonly NonNullable<import("csstype").Property.OverflowX>[] | readonly import("csstype").Property.OverflowX[];
        msOverflowY?: import("csstype").Property.OverflowY | readonly NonNullable<import("csstype").Property.OverflowY>[] | readonly import("csstype").Property.OverflowY[];
        msScrollChaining?: import("csstype").Property.MsScrollChaining | readonly NonNullable<import("csstype").Property.MsScrollChaining>[] | readonly import("csstype").Property.MsScrollChaining[];
        msScrollLimitXMax?: readonly string[] | import("csstype").Property.MsScrollLimitXMax<string | number> | readonly NonNullable<import("csstype").Property.MsScrollLimitXMax<string | number>>[];
        msScrollLimitXMin?: readonly string[] | import("csstype").Property.MsScrollLimitXMin<string | number> | readonly NonNullable<import("csstype").Property.MsScrollLimitXMin<string | number>>[];
        msScrollLimitYMax?: readonly string[] | import("csstype").Property.MsScrollLimitYMax<string | number> | readonly NonNullable<import("csstype").Property.MsScrollLimitYMax<string | number>>[];
        msScrollLimitYMin?: readonly string[] | import("csstype").Property.MsScrollLimitYMin<string | number> | readonly NonNullable<import("csstype").Property.MsScrollLimitYMin<string | number>>[];
        msScrollRails?: import("csstype").Property.MsScrollRails | readonly NonNullable<import("csstype").Property.MsScrollRails>[] | readonly import("csstype").Property.MsScrollRails[];
        msScrollSnapPointsX?: readonly string[] | import("csstype").Property.MsScrollSnapPointsX | readonly import("csstype").Property.MsScrollSnapPointsX[];
        msScrollSnapPointsY?: readonly string[] | import("csstype").Property.MsScrollSnapPointsY | readonly import("csstype").Property.MsScrollSnapPointsY[];
        msScrollSnapType?: import("csstype").Property.MsScrollSnapType | readonly NonNullable<import("csstype").Property.MsScrollSnapType>[] | readonly import("csstype").Property.MsScrollSnapType[];
        msScrollTranslation?: import("csstype").Property.MsScrollTranslation | readonly NonNullable<import("csstype").Property.MsScrollTranslation>[] | readonly import("csstype").Property.MsScrollTranslation[];
        msScrollbar3dlightColor?: readonly string[] | import("csstype").Property.MsScrollbar3dlightColor | readonly import("csstype").Property.MsScrollbar3dlightColor[];
        msScrollbarArrowColor?: readonly string[] | import("csstype").Property.MsScrollbarArrowColor | readonly import("csstype").Property.MsScrollbarArrowColor[];
        msScrollbarBaseColor?: readonly string[] | import("csstype").Property.MsScrollbarBaseColor | readonly import("csstype").Property.MsScrollbarBaseColor[];
        msScrollbarDarkshadowColor?: readonly string[] | import("csstype").Property.MsScrollbarDarkshadowColor | readonly import("csstype").Property.MsScrollbarDarkshadowColor[];
        msScrollbarFaceColor?: readonly string[] | import("csstype").Property.MsScrollbarFaceColor | readonly import("csstype").Property.MsScrollbarFaceColor[];
        msScrollbarHighlightColor?: readonly string[] | import("csstype").Property.MsScrollbarHighlightColor | readonly import("csstype").Property.MsScrollbarHighlightColor[];
        msScrollbarShadowColor?: readonly string[] | import("csstype").Property.MsScrollbarShadowColor | readonly import("csstype").Property.MsScrollbarShadowColor[];
        msScrollbarTrackColor?: readonly string[] | import("csstype").Property.MsScrollbarTrackColor | readonly import("csstype").Property.MsScrollbarTrackColor[];
        msTextAutospace?: import("csstype").Property.MsTextAutospace | readonly NonNullable<import("csstype").Property.MsTextAutospace>[] | readonly import("csstype").Property.MsTextAutospace[];
        msTextCombineHorizontal?: readonly string[] | import("csstype").Property.TextCombineUpright | readonly import("csstype").Property.TextCombineUpright[];
        msTextOverflow?: readonly string[] | import("csstype").Property.TextOverflow | readonly import("csstype").Property.TextOverflow[];
        msTouchAction?: readonly string[] | import("csstype").Property.TouchAction | readonly import("csstype").Property.TouchAction[];
        msTouchSelect?: import("csstype").Property.MsTouchSelect | readonly NonNullable<import("csstype").Property.MsTouchSelect>[] | readonly import("csstype").Property.MsTouchSelect[];
        msTransform?: readonly string[] | import("csstype").Property.Transform | readonly import("csstype").Property.Transform[];
        msTransformOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.TransformOrigin<string | number> | readonly NonNullable<import("csstype").Property.TransformOrigin<string | number>>[];
        msTransitionDelay?: readonly string[] | import("csstype").Property.TransitionDelay<string & {}> | readonly import("csstype").Property.TransitionDelay<string & {}>[];
        msTransitionDuration?: readonly string[] | import("csstype").Property.TransitionDuration<string & {}> | readonly import("csstype").Property.TransitionDuration<string & {}>[];
        msTransitionProperty?: readonly string[] | import("csstype").Property.TransitionProperty | readonly import("csstype").Property.TransitionProperty[];
        msTransitionTimingFunction?: readonly string[] | import("csstype").Property.TransitionTimingFunction | readonly import("csstype").Property.TransitionTimingFunction[];
        msUserSelect?: import("csstype").Property.MsUserSelect | readonly NonNullable<import("csstype").Property.MsUserSelect>[] | readonly import("csstype").Property.MsUserSelect[];
        msWordBreak?: import("csstype").Property.WordBreak | readonly NonNullable<import("csstype").Property.WordBreak>[] | readonly import("csstype").Property.WordBreak[];
        msWrapFlow?: import("csstype").Property.MsWrapFlow | readonly NonNullable<import("csstype").Property.MsWrapFlow>[] | readonly import("csstype").Property.MsWrapFlow[];
        msWrapMargin?: readonly string[] | import("csstype").Property.MsWrapMargin<string | number> | readonly NonNullable<import("csstype").Property.MsWrapMargin<string | number>>[];
        msWrapThrough?: import("csstype").Property.MsWrapThrough | readonly NonNullable<import("csstype").Property.MsWrapThrough>[] | readonly import("csstype").Property.MsWrapThrough[];
        msWritingMode?: import("csstype").Property.WritingMode | readonly NonNullable<import("csstype").Property.WritingMode>[] | readonly import("csstype").Property.WritingMode[];
        WebkitAlignContent?: readonly string[] | import("csstype").Property.AlignContent | readonly import("csstype").Property.AlignContent[];
        WebkitAlignItems?: readonly string[] | import("csstype").Property.AlignItems | readonly import("csstype").Property.AlignItems[];
        WebkitAlignSelf?: readonly string[] | import("csstype").Property.AlignSelf | readonly import("csstype").Property.AlignSelf[];
        WebkitAnimationDelay?: readonly string[] | import("csstype").Property.AnimationDelay<string & {}> | readonly import("csstype").Property.AnimationDelay<string & {}>[];
        WebkitAnimationDirection?: readonly string[] | import("csstype").Property.AnimationDirection | readonly import("csstype").Property.AnimationDirection[];
        WebkitAnimationDuration?: readonly string[] | import("csstype").Property.AnimationDuration<string & {}> | readonly import("csstype").Property.AnimationDuration<string & {}>[];
        WebkitAnimationFillMode?: readonly string[] | import("csstype").Property.AnimationFillMode | readonly import("csstype").Property.AnimationFillMode[];
        WebkitAnimationIterationCount?: import("csstype").Property.AnimationIterationCount | readonly NonNullable<import("csstype").Property.AnimationIterationCount>[] | readonly ((string & {}) | import('csstype').Globals | "infinite")[];
        WebkitAnimationName?: readonly string[] | import("csstype").Property.AnimationName | readonly import("csstype").Property.AnimationName[];
        WebkitAnimationPlayState?: readonly string[] | import("csstype").Property.AnimationPlayState | readonly import("csstype").Property.AnimationPlayState[];
        WebkitAnimationTimingFunction?: readonly string[] | import("csstype").Property.AnimationTimingFunction | readonly import("csstype").Property.AnimationTimingFunction[];
        WebkitAppearance?: import("csstype").Property.WebkitAppearance | readonly NonNullable<import("csstype").Property.WebkitAppearance>[] | readonly import("csstype").Property.WebkitAppearance[];
        WebkitBackdropFilter?: readonly string[] | import("csstype").Property.BackdropFilter | readonly import("csstype").Property.BackdropFilter[];
        WebkitBackfaceVisibility?: import("csstype").Property.BackfaceVisibility | readonly NonNullable<import("csstype").Property.BackfaceVisibility>[] | readonly import("csstype").Property.BackfaceVisibility[];
        WebkitBackgroundClip?: readonly string[] | import("csstype").Property.BackgroundClip | readonly import("csstype").Property.BackgroundClip[];
        WebkitBackgroundOrigin?: readonly string[] | import("csstype").Property.BackgroundOrigin | readonly import("csstype").Property.BackgroundOrigin[];
        WebkitBackgroundSize?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundSize<string | number> | readonly NonNullable<import("csstype").Property.BackgroundSize<string | number>>[];
        WebkitBorderBeforeColor?: readonly string[] | import("csstype").Property.WebkitBorderBeforeColor | readonly import("csstype").Property.WebkitBorderBeforeColor[];
        WebkitBorderBeforeStyle?: readonly string[] | import("csstype").Property.WebkitBorderBeforeStyle | readonly import("csstype").Property.WebkitBorderBeforeStyle[];
        WebkitBorderBeforeWidth?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitBorderBeforeWidth<string | number> | readonly NonNullable<import("csstype").Property.WebkitBorderBeforeWidth<string | number>>[];
        WebkitBorderBottomLeftRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomLeftRadius<string | number>>[];
        WebkitBorderBottomRightRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomRightRadius<string | number>>[];
        WebkitBorderImageSlice?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BorderImageSlice | readonly NonNullable<import("csstype").Property.BorderImageSlice>[];
        WebkitBorderTopLeftRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopLeftRadius<string | number>>[];
        WebkitBorderTopRightRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopRightRadius<string | number>>[];
        WebkitBoxDecorationBreak?: import("csstype").Property.BoxDecorationBreak | readonly NonNullable<import("csstype").Property.BoxDecorationBreak>[] | readonly import("csstype").Property.BoxDecorationBreak[];
        WebkitBoxReflect?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitBoxReflect<string | number> | readonly NonNullable<import("csstype").Property.WebkitBoxReflect<string | number>>[];
        WebkitBoxShadow?: readonly string[] | import("csstype").Property.BoxShadow | readonly import("csstype").Property.BoxShadow[];
        WebkitBoxSizing?: import("csstype").Property.BoxSizing | readonly NonNullable<import("csstype").Property.BoxSizing>[] | readonly import("csstype").Property.BoxSizing[];
        WebkitClipPath?: readonly string[] | import("csstype").Property.ClipPath | readonly import("csstype").Property.ClipPath[];
        WebkitColumnCount?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.ColumnCount | readonly NonNullable<import("csstype").Property.ColumnCount>[];
        WebkitColumnFill?: import("csstype").Property.ColumnFill | readonly NonNullable<import("csstype").Property.ColumnFill>[] | readonly import("csstype").Property.ColumnFill[];
        WebkitColumnRuleColor?: readonly string[] | import("csstype").Property.ColumnRuleColor | readonly import("csstype").Property.ColumnRuleColor[];
        WebkitColumnRuleStyle?: readonly string[] | import("csstype").Property.ColumnRuleStyle | readonly import("csstype").Property.ColumnRuleStyle[];
        WebkitColumnRuleWidth?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRuleWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnRuleWidth<string | number>>[];
        WebkitColumnSpan?: import("csstype").Property.ColumnSpan | readonly NonNullable<import("csstype").Property.ColumnSpan>[] | readonly import("csstype").Property.ColumnSpan[];
        WebkitColumnWidth?: readonly string[] | import("csstype").Property.ColumnWidth<string | number> | readonly NonNullable<import("csstype").Property.ColumnWidth<string | number>>[];
        WebkitFilter?: readonly string[] | import("csstype").Property.Filter | readonly import("csstype").Property.Filter[];
        WebkitFlexBasis?: readonly (string | (string & {}))[] | import("csstype").Property.FlexBasis<string | number> | readonly NonNullable<import("csstype").Property.FlexBasis<string | number>>[];
        WebkitFlexDirection?: import("csstype").Property.FlexDirection | readonly NonNullable<import("csstype").Property.FlexDirection>[] | readonly import("csstype").Property.FlexDirection[];
        WebkitFlexGrow?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FlexGrow | readonly NonNullable<import("csstype").Property.FlexGrow>[];
        WebkitFlexShrink?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FlexShrink | readonly NonNullable<import("csstype").Property.FlexShrink>[];
        WebkitFlexWrap?: import("csstype").Property.FlexWrap | readonly NonNullable<import("csstype").Property.FlexWrap>[] | readonly import("csstype").Property.FlexWrap[];
        WebkitFontFeatureSettings?: readonly string[] | import("csstype").Property.FontFeatureSettings | readonly import("csstype").Property.FontFeatureSettings[];
        WebkitFontKerning?: import("csstype").Property.FontKerning | readonly NonNullable<import("csstype").Property.FontKerning>[] | readonly import("csstype").Property.FontKerning[];
        WebkitFontSmoothing?: readonly string[] | import("csstype").Property.FontSmooth<string | number> | readonly NonNullable<import("csstype").Property.FontSmooth<string | number>>[];
        WebkitFontVariantLigatures?: readonly string[] | import("csstype").Property.FontVariantLigatures | readonly import("csstype").Property.FontVariantLigatures[];
        WebkitHyphenateCharacter?: readonly string[] | import("csstype").Property.HyphenateCharacter | readonly import("csstype").Property.HyphenateCharacter[];
        WebkitHyphens?: import("csstype").Property.Hyphens | readonly NonNullable<import("csstype").Property.Hyphens>[] | readonly import("csstype").Property.Hyphens[];
        WebkitInitialLetter?: import("csstype").Property.InitialLetter | readonly NonNullable<import("csstype").Property.InitialLetter>[] | readonly ((string & {}) | "normal" | import('csstype').Globals)[];
        WebkitJustifyContent?: readonly string[] | import("csstype").Property.JustifyContent | readonly import("csstype").Property.JustifyContent[];
        WebkitLineBreak?: import("csstype").Property.LineBreak | readonly NonNullable<import("csstype").Property.LineBreak>[] | readonly import("csstype").Property.LineBreak[];
        WebkitLineClamp?: readonly ("none" | (string & {}) | import('csstype').Globals)[] | import("csstype").Property.WebkitLineClamp | readonly NonNullable<import("csstype").Property.WebkitLineClamp>[];
        WebkitMarginEnd?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineEnd<string | number>>[];
        WebkitMarginStart?: readonly (string | (string & {}))[] | import("csstype").Property.MarginInlineStart<string | number> | readonly NonNullable<import("csstype").Property.MarginInlineStart<string | number>>[];
        WebkitMaskAttachment?: readonly string[] | import("csstype").Property.WebkitMaskAttachment | readonly import("csstype").Property.WebkitMaskAttachment[];
        WebkitMaskBoxImageOutset?: readonly (string | (string & {}))[] | import("csstype").Property.MaskBorderOutset<string | number> | readonly NonNullable<import("csstype").Property.MaskBorderOutset<string | number>>[];
        WebkitMaskBoxImageRepeat?: readonly string[] | import("csstype").Property.MaskBorderRepeat | readonly import("csstype").Property.MaskBorderRepeat[];
        WebkitMaskBoxImageSlice?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.MaskBorderSlice | readonly NonNullable<import("csstype").Property.MaskBorderSlice>[];
        WebkitMaskBoxImageSource?: readonly string[] | import("csstype").Property.MaskBorderSource | readonly import("csstype").Property.MaskBorderSource[];
        WebkitMaskBoxImageWidth?: readonly (string | (string & {}))[] | import("csstype").Property.MaskBorderWidth<string | number> | readonly NonNullable<import("csstype").Property.MaskBorderWidth<string | number>>[];
        WebkitMaskClip?: readonly string[] | import("csstype").Property.WebkitMaskClip | readonly import("csstype").Property.WebkitMaskClip[];
        WebkitMaskComposite?: readonly string[] | import("csstype").Property.WebkitMaskComposite | readonly import("csstype").Property.WebkitMaskComposite[];
        WebkitMaskImage?: readonly string[] | import("csstype").Property.WebkitMaskImage | readonly import("csstype").Property.WebkitMaskImage[];
        WebkitMaskOrigin?: readonly string[] | import("csstype").Property.WebkitMaskOrigin | readonly import("csstype").Property.WebkitMaskOrigin[];
        WebkitMaskPosition?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitMaskPosition<string | number> | readonly NonNullable<import("csstype").Property.WebkitMaskPosition<string | number>>[];
        WebkitMaskPositionX?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitMaskPositionX<string | number> | readonly NonNullable<import("csstype").Property.WebkitMaskPositionX<string | number>>[];
        WebkitMaskPositionY?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitMaskPositionY<string | number> | readonly NonNullable<import("csstype").Property.WebkitMaskPositionY<string | number>>[];
        WebkitMaskRepeat?: readonly string[] | import("csstype").Property.WebkitMaskRepeat | readonly import("csstype").Property.WebkitMaskRepeat[];
        WebkitMaskRepeatX?: import("csstype").Property.WebkitMaskRepeatX | readonly NonNullable<import("csstype").Property.WebkitMaskRepeatX>[] | readonly import("csstype").Property.WebkitMaskRepeatX[];
        WebkitMaskRepeatY?: import("csstype").Property.WebkitMaskRepeatY | readonly NonNullable<import("csstype").Property.WebkitMaskRepeatY>[] | readonly import("csstype").Property.WebkitMaskRepeatY[];
        WebkitMaskSize?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitMaskSize<string | number> | readonly NonNullable<import("csstype").Property.WebkitMaskSize<string | number>>[];
        WebkitMaxInlineSize?: readonly (string | (string & {}))[] | import("csstype").Property.MaxInlineSize<string | number> | readonly NonNullable<import("csstype").Property.MaxInlineSize<string | number>>[];
        WebkitOrder?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.Order | readonly NonNullable<import("csstype").Property.Order>[];
        WebkitOverflowScrolling?: import("csstype").Property.WebkitOverflowScrolling | readonly NonNullable<import("csstype").Property.WebkitOverflowScrolling>[] | readonly import("csstype").Property.WebkitOverflowScrolling[];
        WebkitPaddingEnd?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineEnd<string | number>>[];
        WebkitPaddingStart?: readonly (string | (string & {}))[] | import("csstype").Property.PaddingInlineStart<string | number> | readonly NonNullable<import("csstype").Property.PaddingInlineStart<string | number>>[];
        WebkitPerspective?: readonly string[] | import("csstype").Property.Perspective<string | number> | readonly NonNullable<import("csstype").Property.Perspective<string | number>>[];
        WebkitPerspectiveOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.PerspectiveOrigin<string | number> | readonly NonNullable<import("csstype").Property.PerspectiveOrigin<string | number>>[];
        WebkitPrintColorAdjust?: import("csstype").Property.PrintColorAdjust | readonly NonNullable<import("csstype").Property.PrintColorAdjust>[] | readonly import("csstype").Property.PrintColorAdjust[];
        WebkitRubyPosition?: readonly string[] | import("csstype").Property.RubyPosition | readonly import("csstype").Property.RubyPosition[];
        WebkitScrollSnapType?: readonly string[] | import("csstype").Property.ScrollSnapType | readonly import("csstype").Property.ScrollSnapType[];
        WebkitShapeMargin?: readonly (string | (string & {}))[] | import("csstype").Property.ShapeMargin<string | number> | readonly NonNullable<import("csstype").Property.ShapeMargin<string | number>>[];
        WebkitTapHighlightColor?: readonly string[] | import("csstype").Property.WebkitTapHighlightColor | readonly import("csstype").Property.WebkitTapHighlightColor[];
        WebkitTextCombine?: readonly string[] | import("csstype").Property.TextCombineUpright | readonly import("csstype").Property.TextCombineUpright[];
        WebkitTextDecorationColor?: readonly string[] | import("csstype").Property.TextDecorationColor | readonly import("csstype").Property.TextDecorationColor[];
        WebkitTextDecorationLine?: readonly string[] | import("csstype").Property.TextDecorationLine | readonly import("csstype").Property.TextDecorationLine[];
        WebkitTextDecorationSkip?: readonly string[] | import("csstype").Property.TextDecorationSkip | readonly import("csstype").Property.TextDecorationSkip[];
        WebkitTextDecorationStyle?: import("csstype").Property.TextDecorationStyle | readonly NonNullable<import("csstype").Property.TextDecorationStyle>[] | readonly import("csstype").Property.TextDecorationStyle[];
        WebkitTextEmphasisColor?: readonly string[] | import("csstype").Property.TextEmphasisColor | readonly import("csstype").Property.TextEmphasisColor[];
        WebkitTextEmphasisPosition?: readonly string[] | import("csstype").Property.TextEmphasisPosition | readonly import("csstype").Property.TextEmphasisPosition[];
        WebkitTextEmphasisStyle?: readonly string[] | import("csstype").Property.TextEmphasisStyle | readonly import("csstype").Property.TextEmphasisStyle[];
        WebkitTextFillColor?: readonly string[] | import("csstype").Property.WebkitTextFillColor | readonly import("csstype").Property.WebkitTextFillColor[];
        WebkitTextOrientation?: import("csstype").Property.TextOrientation | readonly NonNullable<import("csstype").Property.TextOrientation>[] | readonly import("csstype").Property.TextOrientation[];
        WebkitTextSizeAdjust?: readonly string[] | import("csstype").Property.TextSizeAdjust | readonly import("csstype").Property.TextSizeAdjust[];
        WebkitTextStrokeColor?: readonly string[] | import("csstype").Property.WebkitTextStrokeColor | readonly import("csstype").Property.WebkitTextStrokeColor[];
        WebkitTextStrokeWidth?: readonly string[] | import("csstype").Property.WebkitTextStrokeWidth<string | number> | readonly NonNullable<import("csstype").Property.WebkitTextStrokeWidth<string | number>>[];
        WebkitTextUnderlinePosition?: readonly string[] | import("csstype").Property.TextUnderlinePosition | readonly import("csstype").Property.TextUnderlinePosition[];
        WebkitTouchCallout?: import("csstype").Property.WebkitTouchCallout | readonly NonNullable<import("csstype").Property.WebkitTouchCallout>[] | readonly import("csstype").Property.WebkitTouchCallout[];
        WebkitTransform?: readonly string[] | import("csstype").Property.Transform | readonly import("csstype").Property.Transform[];
        WebkitTransformOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.TransformOrigin<string | number> | readonly NonNullable<import("csstype").Property.TransformOrigin<string | number>>[];
        WebkitTransformStyle?: import("csstype").Property.TransformStyle | readonly NonNullable<import("csstype").Property.TransformStyle>[] | readonly import("csstype").Property.TransformStyle[];
        WebkitTransitionDelay?: readonly string[] | import("csstype").Property.TransitionDelay<string & {}> | readonly import("csstype").Property.TransitionDelay<string & {}>[];
        WebkitTransitionDuration?: readonly string[] | import("csstype").Property.TransitionDuration<string & {}> | readonly import("csstype").Property.TransitionDuration<string & {}>[];
        WebkitTransitionProperty?: readonly string[] | import("csstype").Property.TransitionProperty | readonly import("csstype").Property.TransitionProperty[];
        WebkitTransitionTimingFunction?: readonly string[] | import("csstype").Property.TransitionTimingFunction | readonly import("csstype").Property.TransitionTimingFunction[];
        WebkitUserModify?: import("csstype").Property.WebkitUserModify | readonly NonNullable<import("csstype").Property.WebkitUserModify>[] | readonly import("csstype").Property.WebkitUserModify[];
        WebkitUserSelect?: import("csstype").Property.UserSelect | readonly NonNullable<import("csstype").Property.UserSelect>[] | readonly import("csstype").Property.UserSelect[];
        WebkitWritingMode?: import("csstype").Property.WritingMode | readonly NonNullable<import("csstype").Property.WritingMode>[] | readonly import("csstype").Property.WritingMode[];
        MozAnimation?: import("csstype").Property.Animation<string & {}> | readonly NonNullable<import("csstype").Property.Animation<string & {}>>[] | readonly ("none" | (string & {}) | "normal" | "reverse" | import('csstype').Globals | "auto" | "ease" | "ease-in" | "ease-in-out" | "ease-out" | "step-end" | "step-start" | "linear" | "alternate" | "alternate-reverse" | "backwards" | "both" | "forwards" | "infinite" | "paused" | "running")[];
        MozBorderImage?: import("csstype").Property.BorderImage | readonly NonNullable<import("csstype").Property.BorderImage>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space")[];
        MozColumnRule?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRule<string | number> | readonly NonNullable<import("csstype").Property.ColumnRule<string | number>>[];
        MozColumns?: readonly (string | (string & {}))[] | import("csstype").Property.Columns<string | number> | readonly NonNullable<import("csstype").Property.Columns<string | number>>[];
        MozOutlineRadius?: readonly (string | (string & {}))[] | import("csstype").Property.MozOutlineRadius<string | number> | readonly NonNullable<import("csstype").Property.MozOutlineRadius<string | number>>[];
        msContentZoomLimit?: readonly string[] | import("csstype").Property.MsContentZoomLimit | readonly import("csstype").Property.MsContentZoomLimit[];
        msContentZoomSnap?: readonly string[] | import("csstype").Property.MsContentZoomSnap | readonly import("csstype").Property.MsContentZoomSnap[];
        msFlex?: readonly (string | (string & {}))[] | import("csstype").Property.Flex<string | number> | readonly NonNullable<import("csstype").Property.Flex<string | number>>[];
        msScrollLimit?: readonly string[] | import("csstype").Property.MsScrollLimit | readonly import("csstype").Property.MsScrollLimit[];
        msScrollSnapX?: readonly string[] | import("csstype").Property.MsScrollSnapX | readonly import("csstype").Property.MsScrollSnapX[];
        msScrollSnapY?: readonly string[] | import("csstype").Property.MsScrollSnapY | readonly import("csstype").Property.MsScrollSnapY[];
        msTransition?: readonly string[] | import("csstype").Property.Transition<string & {}> | readonly import("csstype").Property.Transition<string & {}>[];
        WebkitAnimation?: import("csstype").Property.Animation<string & {}> | readonly NonNullable<import("csstype").Property.Animation<string & {}>>[] | readonly ("none" | (string & {}) | "normal" | "reverse" | import('csstype').Globals | "auto" | "ease" | "ease-in" | "ease-in-out" | "ease-out" | "step-end" | "step-start" | "linear" | "alternate" | "alternate-reverse" | "backwards" | "both" | "forwards" | "infinite" | "paused" | "running")[];
        WebkitBorderBefore?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitBorderBefore<string | number> | readonly NonNullable<import("csstype").Property.WebkitBorderBefore<string | number>>[];
        WebkitBorderImage?: import("csstype").Property.BorderImage | readonly NonNullable<import("csstype").Property.BorderImage>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space")[];
        WebkitBorderRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderRadius<string | number>>[];
        WebkitColumnRule?: readonly (string | (string & {}))[] | import("csstype").Property.ColumnRule<string | number> | readonly NonNullable<import("csstype").Property.ColumnRule<string | number>>[];
        WebkitColumns?: readonly (string | (string & {}))[] | import("csstype").Property.Columns<string | number> | readonly NonNullable<import("csstype").Property.Columns<string | number>>[];
        WebkitFlex?: readonly (string | (string & {}))[] | import("csstype").Property.Flex<string | number> | readonly NonNullable<import("csstype").Property.Flex<string | number>>[];
        WebkitFlexFlow?: readonly string[] | import("csstype").Property.FlexFlow | readonly import("csstype").Property.FlexFlow[];
        WebkitMask?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitMask<string | number> | readonly NonNullable<import("csstype").Property.WebkitMask<string | number>>[];
        WebkitMaskBoxImage?: import("csstype").Property.MaskBorder | readonly NonNullable<import("csstype").Property.MaskBorder>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space" | "alpha" | "luminance")[];
        WebkitTextEmphasis?: readonly string[] | import("csstype").Property.TextEmphasis | readonly import("csstype").Property.TextEmphasis[];
        WebkitTextStroke?: readonly (string | (string & {}))[] | import("csstype").Property.WebkitTextStroke<string | number> | readonly NonNullable<import("csstype").Property.WebkitTextStroke<string | number>>[];
        WebkitTransition?: readonly string[] | import("csstype").Property.Transition<string & {}> | readonly import("csstype").Property.Transition<string & {}>[];
        azimuth?: readonly string[] | import("csstype").Property.Azimuth | readonly import("csstype").Property.Azimuth[];
        boxAlign?: import("csstype").Property.BoxAlign | readonly NonNullable<import("csstype").Property.BoxAlign>[] | readonly import("csstype").Property.BoxAlign[];
        boxDirection?: import("csstype").Property.BoxDirection | readonly NonNullable<import("csstype").Property.BoxDirection>[] | readonly import("csstype").Property.BoxDirection[];
        boxFlex?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlex | readonly NonNullable<import("csstype").Property.BoxFlex>[];
        boxFlexGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlexGroup | readonly NonNullable<import("csstype").Property.BoxFlexGroup>[];
        boxLines?: import("csstype").Property.BoxLines | readonly NonNullable<import("csstype").Property.BoxLines>[] | readonly import("csstype").Property.BoxLines[];
        boxOrdinalGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxOrdinalGroup | readonly NonNullable<import("csstype").Property.BoxOrdinalGroup>[];
        boxOrient?: import("csstype").Property.BoxOrient | readonly NonNullable<import("csstype").Property.BoxOrient>[] | readonly import("csstype").Property.BoxOrient[];
        boxPack?: import("csstype").Property.BoxPack | readonly NonNullable<import("csstype").Property.BoxPack>[] | readonly import("csstype").Property.BoxPack[];
        clip?: readonly string[] | import("csstype").Property.Clip | readonly import("csstype").Property.Clip[];
        gridColumnGap?: readonly (string | (string & {}))[] | import("csstype").Property.GridColumnGap<string | number> | readonly NonNullable<import("csstype").Property.GridColumnGap<string | number>>[];
        gridGap?: readonly (string | (string & {}))[] | import("csstype").Property.GridGap<string | number> | readonly NonNullable<import("csstype").Property.GridGap<string | number>>[];
        gridRowGap?: readonly (string | (string & {}))[] | import("csstype").Property.GridRowGap<string | number> | readonly NonNullable<import("csstype").Property.GridRowGap<string | number>>[];
        imeMode?: import("csstype").Property.ImeMode | readonly NonNullable<import("csstype").Property.ImeMode>[] | readonly import("csstype").Property.ImeMode[];
        offsetBlock?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlock<string | number> | readonly NonNullable<import("csstype").Property.InsetBlock<string | number>>[];
        offsetBlockEnd?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlockEnd<string | number> | readonly NonNullable<import("csstype").Property.InsetBlockEnd<string | number>>[];
        offsetBlockStart?: readonly (string | (string & {}))[] | import("csstype").Property.InsetBlockStart<string | number> | readonly NonNullable<import("csstype").Property.InsetBlockStart<string | number>>[];
        offsetInline?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInline<string | number> | readonly NonNullable<import("csstype").Property.InsetInline<string | number>>[];
        offsetInlineEnd?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInlineEnd<string | number> | readonly NonNullable<import("csstype").Property.InsetInlineEnd<string | number>>[];
        offsetInlineStart?: readonly (string | (string & {}))[] | import("csstype").Property.InsetInlineStart<string | number> | readonly NonNullable<import("csstype").Property.InsetInlineStart<string | number>>[];
        scrollSnapCoordinate?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollSnapCoordinate<string | number> | readonly NonNullable<import("csstype").Property.ScrollSnapCoordinate<string | number>>[];
        scrollSnapDestination?: readonly (string | (string & {}))[] | import("csstype").Property.ScrollSnapDestination<string | number> | readonly NonNullable<import("csstype").Property.ScrollSnapDestination<string | number>>[];
        scrollSnapPointsX?: readonly string[] | import("csstype").Property.ScrollSnapPointsX | readonly import("csstype").Property.ScrollSnapPointsX[];
        scrollSnapPointsY?: readonly string[] | import("csstype").Property.ScrollSnapPointsY | readonly import("csstype").Property.ScrollSnapPointsY[];
        scrollSnapTypeX?: import("csstype").Property.ScrollSnapTypeX | readonly NonNullable<import("csstype").Property.ScrollSnapTypeX>[] | readonly import("csstype").Property.ScrollSnapTypeX[];
        scrollSnapTypeY?: import("csstype").Property.ScrollSnapTypeY | readonly NonNullable<import("csstype").Property.ScrollSnapTypeY>[] | readonly import("csstype").Property.ScrollSnapTypeY[];
        KhtmlBoxAlign?: import("csstype").Property.BoxAlign | readonly NonNullable<import("csstype").Property.BoxAlign>[] | readonly import("csstype").Property.BoxAlign[];
        KhtmlBoxDirection?: import("csstype").Property.BoxDirection | readonly NonNullable<import("csstype").Property.BoxDirection>[] | readonly import("csstype").Property.BoxDirection[];
        KhtmlBoxFlex?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlex | readonly NonNullable<import("csstype").Property.BoxFlex>[];
        KhtmlBoxFlexGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlexGroup | readonly NonNullable<import("csstype").Property.BoxFlexGroup>[];
        KhtmlBoxLines?: import("csstype").Property.BoxLines | readonly NonNullable<import("csstype").Property.BoxLines>[] | readonly import("csstype").Property.BoxLines[];
        KhtmlBoxOrdinalGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxOrdinalGroup | readonly NonNullable<import("csstype").Property.BoxOrdinalGroup>[];
        KhtmlBoxOrient?: import("csstype").Property.BoxOrient | readonly NonNullable<import("csstype").Property.BoxOrient>[] | readonly import("csstype").Property.BoxOrient[];
        KhtmlBoxPack?: import("csstype").Property.BoxPack | readonly NonNullable<import("csstype").Property.BoxPack>[] | readonly import("csstype").Property.BoxPack[];
        KhtmlLineBreak?: import("csstype").Property.LineBreak | readonly NonNullable<import("csstype").Property.LineBreak>[] | readonly import("csstype").Property.LineBreak[];
        KhtmlOpacity?: import("csstype").Property.Opacity | readonly NonNullable<import("csstype").Property.Opacity>[] | readonly ((string & {}) | import('csstype').Globals)[];
        KhtmlUserSelect?: import("csstype").Property.UserSelect | readonly NonNullable<import("csstype").Property.UserSelect>[] | readonly import("csstype").Property.UserSelect[];
        MozBackfaceVisibility?: import("csstype").Property.BackfaceVisibility | readonly NonNullable<import("csstype").Property.BackfaceVisibility>[] | readonly import("csstype").Property.BackfaceVisibility[];
        MozBackgroundClip?: readonly string[] | import("csstype").Property.BackgroundClip | readonly import("csstype").Property.BackgroundClip[];
        MozBackgroundInlinePolicy?: import("csstype").Property.BoxDecorationBreak | readonly NonNullable<import("csstype").Property.BoxDecorationBreak>[] | readonly import("csstype").Property.BoxDecorationBreak[];
        MozBackgroundOrigin?: readonly string[] | import("csstype").Property.BackgroundOrigin | readonly import("csstype").Property.BackgroundOrigin[];
        MozBackgroundSize?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundSize<string | number> | readonly NonNullable<import("csstype").Property.BackgroundSize<string | number>>[];
        MozBorderRadius?: readonly (string | (string & {}))[] | import("csstype").Property.BorderRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderRadius<string | number>>[];
        MozBorderRadiusBottomleft?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomLeftRadius<string | number>>[];
        MozBorderRadiusBottomright?: readonly (string | (string & {}))[] | import("csstype").Property.BorderBottomRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderBottomRightRadius<string | number>>[];
        MozBorderRadiusTopleft?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopLeftRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopLeftRadius<string | number>>[];
        MozBorderRadiusTopright?: readonly (string | (string & {}))[] | import("csstype").Property.BorderTopRightRadius<string | number> | readonly NonNullable<import("csstype").Property.BorderTopRightRadius<string | number>>[];
        MozBoxAlign?: import("csstype").Property.BoxAlign | readonly NonNullable<import("csstype").Property.BoxAlign>[] | readonly import("csstype").Property.BoxAlign[];
        MozBoxDirection?: import("csstype").Property.BoxDirection | readonly NonNullable<import("csstype").Property.BoxDirection>[] | readonly import("csstype").Property.BoxDirection[];
        MozBoxFlex?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlex | readonly NonNullable<import("csstype").Property.BoxFlex>[];
        MozBoxOrdinalGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxOrdinalGroup | readonly NonNullable<import("csstype").Property.BoxOrdinalGroup>[];
        MozBoxOrient?: import("csstype").Property.BoxOrient | readonly NonNullable<import("csstype").Property.BoxOrient>[] | readonly import("csstype").Property.BoxOrient[];
        MozBoxPack?: import("csstype").Property.BoxPack | readonly NonNullable<import("csstype").Property.BoxPack>[] | readonly import("csstype").Property.BoxPack[];
        MozBoxShadow?: readonly string[] | import("csstype").Property.BoxShadow | readonly import("csstype").Property.BoxShadow[];
        MozFloatEdge?: import("csstype").Property.MozFloatEdge | readonly NonNullable<import("csstype").Property.MozFloatEdge>[] | readonly import("csstype").Property.MozFloatEdge[];
        MozForceBrokenImageIcon?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.MozForceBrokenImageIcon | readonly NonNullable<import("csstype").Property.MozForceBrokenImageIcon>[];
        MozOpacity?: import("csstype").Property.Opacity | readonly NonNullable<import("csstype").Property.Opacity>[] | readonly ((string & {}) | import('csstype').Globals)[];
        MozOutline?: readonly (string | (string & {}))[] | import("csstype").Property.Outline<string | number> | readonly NonNullable<import("csstype").Property.Outline<string | number>>[];
        MozOutlineColor?: readonly string[] | import("csstype").Property.OutlineColor | readonly import("csstype").Property.OutlineColor[];
        MozOutlineStyle?: readonly string[] | import("csstype").Property.OutlineStyle | readonly import("csstype").Property.OutlineStyle[];
        MozOutlineWidth?: readonly string[] | import("csstype").Property.OutlineWidth<string | number> | readonly NonNullable<import("csstype").Property.OutlineWidth<string | number>>[];
        MozPerspective?: readonly string[] | import("csstype").Property.Perspective<string | number> | readonly NonNullable<import("csstype").Property.Perspective<string | number>>[];
        MozPerspectiveOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.PerspectiveOrigin<string | number> | readonly NonNullable<import("csstype").Property.PerspectiveOrigin<string | number>>[];
        MozTextAlignLast?: import("csstype").Property.TextAlignLast | readonly NonNullable<import("csstype").Property.TextAlignLast>[] | readonly import("csstype").Property.TextAlignLast[];
        MozTextDecorationColor?: readonly string[] | import("csstype").Property.TextDecorationColor | readonly import("csstype").Property.TextDecorationColor[];
        MozTextDecorationLine?: readonly string[] | import("csstype").Property.TextDecorationLine | readonly import("csstype").Property.TextDecorationLine[];
        MozTextDecorationStyle?: import("csstype").Property.TextDecorationStyle | readonly NonNullable<import("csstype").Property.TextDecorationStyle>[] | readonly import("csstype").Property.TextDecorationStyle[];
        MozTransform?: readonly string[] | import("csstype").Property.Transform | readonly import("csstype").Property.Transform[];
        MozTransformOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.TransformOrigin<string | number> | readonly NonNullable<import("csstype").Property.TransformOrigin<string | number>>[];
        MozTransformStyle?: import("csstype").Property.TransformStyle | readonly NonNullable<import("csstype").Property.TransformStyle>[] | readonly import("csstype").Property.TransformStyle[];
        MozTransition?: readonly string[] | import("csstype").Property.Transition<string & {}> | readonly import("csstype").Property.Transition<string & {}>[];
        MozTransitionDelay?: readonly string[] | import("csstype").Property.TransitionDelay<string & {}> | readonly import("csstype").Property.TransitionDelay<string & {}>[];
        MozTransitionDuration?: readonly string[] | import("csstype").Property.TransitionDuration<string & {}> | readonly import("csstype").Property.TransitionDuration<string & {}>[];
        MozTransitionProperty?: readonly string[] | import("csstype").Property.TransitionProperty | readonly import("csstype").Property.TransitionProperty[];
        MozTransitionTimingFunction?: readonly string[] | import("csstype").Property.TransitionTimingFunction | readonly import("csstype").Property.TransitionTimingFunction[];
        MozUserInput?: import("csstype").Property.MozUserInput | readonly NonNullable<import("csstype").Property.MozUserInput>[] | readonly import("csstype").Property.MozUserInput[];
        msImeMode?: import("csstype").Property.ImeMode | readonly NonNullable<import("csstype").Property.ImeMode>[] | readonly import("csstype").Property.ImeMode[];
        OAnimation?: import("csstype").Property.Animation<string & {}> | readonly NonNullable<import("csstype").Property.Animation<string & {}>>[] | readonly ("none" | (string & {}) | "normal" | "reverse" | import('csstype').Globals | "auto" | "ease" | "ease-in" | "ease-in-out" | "ease-out" | "step-end" | "step-start" | "linear" | "alternate" | "alternate-reverse" | "backwards" | "both" | "forwards" | "infinite" | "paused" | "running")[];
        OAnimationDelay?: readonly string[] | import("csstype").Property.AnimationDelay<string & {}> | readonly import("csstype").Property.AnimationDelay<string & {}>[];
        OAnimationDirection?: readonly string[] | import("csstype").Property.AnimationDirection | readonly import("csstype").Property.AnimationDirection[];
        OAnimationDuration?: readonly string[] | import("csstype").Property.AnimationDuration<string & {}> | readonly import("csstype").Property.AnimationDuration<string & {}>[];
        OAnimationFillMode?: readonly string[] | import("csstype").Property.AnimationFillMode | readonly import("csstype").Property.AnimationFillMode[];
        OAnimationIterationCount?: import("csstype").Property.AnimationIterationCount | readonly NonNullable<import("csstype").Property.AnimationIterationCount>[] | readonly ((string & {}) | import('csstype').Globals | "infinite")[];
        OAnimationName?: readonly string[] | import("csstype").Property.AnimationName | readonly import("csstype").Property.AnimationName[];
        OAnimationPlayState?: readonly string[] | import("csstype").Property.AnimationPlayState | readonly import("csstype").Property.AnimationPlayState[];
        OAnimationTimingFunction?: readonly string[] | import("csstype").Property.AnimationTimingFunction | readonly import("csstype").Property.AnimationTimingFunction[];
        OBackgroundSize?: readonly (string | (string & {}))[] | import("csstype").Property.BackgroundSize<string | number> | readonly NonNullable<import("csstype").Property.BackgroundSize<string | number>>[];
        OBorderImage?: import("csstype").Property.BorderImage | readonly NonNullable<import("csstype").Property.BorderImage>[] | readonly ("none" | (string & {}) | "repeat" | import('csstype').Globals | "stretch" | "round" | "space")[];
        OObjectFit?: import("csstype").Property.ObjectFit | readonly NonNullable<import("csstype").Property.ObjectFit>[] | readonly import("csstype").Property.ObjectFit[];
        OObjectPosition?: readonly (string | (string & {}))[] | import("csstype").Property.ObjectPosition<string | number> | readonly NonNullable<import("csstype").Property.ObjectPosition<string | number>>[];
        OTabSize?: readonly (string | (string & {}))[] | import("csstype").Property.TabSize<string | number> | readonly NonNullable<import("csstype").Property.TabSize<string | number>>[];
        OTextOverflow?: readonly string[] | import("csstype").Property.TextOverflow | readonly import("csstype").Property.TextOverflow[];
        OTransform?: readonly string[] | import("csstype").Property.Transform | readonly import("csstype").Property.Transform[];
        OTransformOrigin?: readonly (string | (string & {}))[] | import("csstype").Property.TransformOrigin<string | number> | readonly NonNullable<import("csstype").Property.TransformOrigin<string | number>>[];
        OTransition?: readonly string[] | import("csstype").Property.Transition<string & {}> | readonly import("csstype").Property.Transition<string & {}>[];
        OTransitionDelay?: readonly string[] | import("csstype").Property.TransitionDelay<string & {}> | readonly import("csstype").Property.TransitionDelay<string & {}>[];
        OTransitionDuration?: readonly string[] | import("csstype").Property.TransitionDuration<string & {}> | readonly import("csstype").Property.TransitionDuration<string & {}>[];
        OTransitionProperty?: readonly string[] | import("csstype").Property.TransitionProperty | readonly import("csstype").Property.TransitionProperty[];
        OTransitionTimingFunction?: readonly string[] | import("csstype").Property.TransitionTimingFunction | readonly import("csstype").Property.TransitionTimingFunction[];
        WebkitBoxAlign?: import("csstype").Property.BoxAlign | readonly NonNullable<import("csstype").Property.BoxAlign>[] | readonly import("csstype").Property.BoxAlign[];
        WebkitBoxDirection?: import("csstype").Property.BoxDirection | readonly NonNullable<import("csstype").Property.BoxDirection>[] | readonly import("csstype").Property.BoxDirection[];
        WebkitBoxFlex?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlex | readonly NonNullable<import("csstype").Property.BoxFlex>[];
        WebkitBoxFlexGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxFlexGroup | readonly NonNullable<import("csstype").Property.BoxFlexGroup>[];
        WebkitBoxLines?: import("csstype").Property.BoxLines | readonly NonNullable<import("csstype").Property.BoxLines>[] | readonly import("csstype").Property.BoxLines[];
        WebkitBoxOrdinalGroup?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.BoxOrdinalGroup | readonly NonNullable<import("csstype").Property.BoxOrdinalGroup>[];
        WebkitBoxOrient?: import("csstype").Property.BoxOrient | readonly NonNullable<import("csstype").Property.BoxOrient>[] | readonly import("csstype").Property.BoxOrient[];
        WebkitBoxPack?: import("csstype").Property.BoxPack | readonly NonNullable<import("csstype").Property.BoxPack>[] | readonly import("csstype").Property.BoxPack[];
        alignmentBaseline?: import("csstype").Property.AlignmentBaseline | readonly NonNullable<import("csstype").Property.AlignmentBaseline>[] | readonly import("csstype").Property.AlignmentBaseline[];
        baselineShift?: readonly (string | (string & {}))[] | import("csstype").Property.BaselineShift<string | number> | readonly NonNullable<import("csstype").Property.BaselineShift<string | number>>[];
        clipRule?: import("csstype").Property.ClipRule | readonly NonNullable<import("csstype").Property.ClipRule>[] | readonly import("csstype").Property.ClipRule[];
        colorInterpolation?: import("csstype").Property.ColorInterpolation | readonly NonNullable<import("csstype").Property.ColorInterpolation>[] | readonly import("csstype").Property.ColorInterpolation[];
        colorRendering?: import("csstype").Property.ColorRendering | readonly NonNullable<import("csstype").Property.ColorRendering>[] | readonly import("csstype").Property.ColorRendering[];
        dominantBaseline?: import("csstype").Property.DominantBaseline | readonly NonNullable<import("csstype").Property.DominantBaseline>[] | readonly import("csstype").Property.DominantBaseline[];
        fill?: readonly string[] | import("csstype").Property.Fill | readonly import("csstype").Property.Fill[];
        fillOpacity?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FillOpacity | readonly NonNullable<import("csstype").Property.FillOpacity>[];
        fillRule?: import("csstype").Property.FillRule | readonly NonNullable<import("csstype").Property.FillRule>[] | readonly import("csstype").Property.FillRule[];
        floodColor?: readonly string[] | import("csstype").Property.FloodColor | readonly import("csstype").Property.FloodColor[];
        floodOpacity?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.FloodOpacity | readonly NonNullable<import("csstype").Property.FloodOpacity>[];
        glyphOrientationVertical?: readonly ((string & {}) | import('csstype').Globals | "auto")[] | import("csstype").Property.GlyphOrientationVertical | readonly NonNullable<import("csstype").Property.GlyphOrientationVertical>[];
        lightingColor?: readonly string[] | import("csstype").Property.LightingColor | readonly import("csstype").Property.LightingColor[];
        marker?: readonly string[] | import("csstype").Property.Marker | readonly import("csstype").Property.Marker[];
        markerEnd?: readonly string[] | import("csstype").Property.MarkerEnd | readonly import("csstype").Property.MarkerEnd[];
        markerMid?: readonly string[] | import("csstype").Property.MarkerMid | readonly import("csstype").Property.MarkerMid[];
        markerStart?: readonly string[] | import("csstype").Property.MarkerStart | readonly import("csstype").Property.MarkerStart[];
        shapeRendering?: import("csstype").Property.ShapeRendering | readonly NonNullable<import("csstype").Property.ShapeRendering>[] | readonly import("csstype").Property.ShapeRendering[];
        stopColor?: readonly string[] | import("csstype").Property.StopColor | readonly import("csstype").Property.StopColor[];
        stopOpacity?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.StopOpacity | readonly NonNullable<import("csstype").Property.StopOpacity>[];
        stroke?: readonly string[] | import("csstype").Property.Stroke | readonly import("csstype").Property.Stroke[];
        strokeDasharray?: readonly (string | (string & {}))[] | import("csstype").Property.StrokeDasharray<string | number> | readonly NonNullable<import("csstype").Property.StrokeDasharray<string | number>>[];
        strokeDashoffset?: readonly (string | (string & {}))[] | import("csstype").Property.StrokeDashoffset<string | number> | readonly NonNullable<import("csstype").Property.StrokeDashoffset<string | number>>[];
        strokeLinecap?: import("csstype").Property.StrokeLinecap | readonly NonNullable<import("csstype").Property.StrokeLinecap>[] | readonly import("csstype").Property.StrokeLinecap[];
        strokeLinejoin?: import("csstype").Property.StrokeLinejoin | readonly NonNullable<import("csstype").Property.StrokeLinejoin>[] | readonly import("csstype").Property.StrokeLinejoin[];
        strokeMiterlimit?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.StrokeMiterlimit | readonly NonNullable<import("csstype").Property.StrokeMiterlimit>[];
        strokeOpacity?: readonly ((string & {}) | import('csstype').Globals)[] | import("csstype").Property.StrokeOpacity | readonly NonNullable<import("csstype").Property.StrokeOpacity>[];
        strokeWidth?: readonly (string | (string & {}))[] | import("csstype").Property.StrokeWidth<string | number> | readonly NonNullable<import("csstype").Property.StrokeWidth<string | number>>[];
        textAnchor?: import("csstype").Property.TextAnchor | readonly NonNullable<import("csstype").Property.TextAnchor>[] | readonly import("csstype").Property.TextAnchor[];
        vectorEffect?: import("csstype").Property.VectorEffect | readonly NonNullable<import("csstype").Property.VectorEffect>[] | readonly import("csstype").Property.VectorEffect[];
        ":-moz-any()"?: import('@emotion/serialize').CSSObject;
        ":-moz-dir"?: import('@emotion/serialize').CSSObject;
        ":-webkit-any()"?: import('@emotion/serialize').CSSObject;
        "::cue"?: import('@emotion/serialize').CSSObject;
        "::cue-region"?: import('@emotion/serialize').CSSObject;
        "::part"?: import('@emotion/serialize').CSSObject;
        "::slotted"?: import('@emotion/serialize').CSSObject;
        "::view-transition-group"?: import('@emotion/serialize').CSSObject;
        "::view-transition-image-pair"?: import('@emotion/serialize').CSSObject;
        "::view-transition-new"?: import('@emotion/serialize').CSSObject;
        "::view-transition-old"?: import('@emotion/serialize').CSSObject;
        ":dir"?: import('@emotion/serialize').CSSObject;
        ":has"?: import('@emotion/serialize').CSSObject;
        ":host"?: import('@emotion/serialize').CSSObject;
        ":host-context"?: import('@emotion/serialize').CSSObject;
        ":is"?: import('@emotion/serialize').CSSObject;
        ":lang"?: import('@emotion/serialize').CSSObject;
        ":matches()"?: import('@emotion/serialize').CSSObject;
        ":not"?: import('@emotion/serialize').CSSObject;
        ":nth-child"?: import('@emotion/serialize').CSSObject;
        ":nth-last-child"?: import('@emotion/serialize').CSSObject;
        ":nth-last-of-type"?: import('@emotion/serialize').CSSObject;
        ":nth-of-type"?: import('@emotion/serialize').CSSObject;
        ":where"?: import('@emotion/serialize').CSSObject;
        ":-khtml-any-link"?: import('@emotion/serialize').CSSObject;
        ":-moz-any-link"?: import('@emotion/serialize').CSSObject;
        ":-moz-focusring"?: import('@emotion/serialize').CSSObject;
        ":-moz-full-screen"?: import('@emotion/serialize').CSSObject;
        ":-moz-placeholder"?: import('@emotion/serialize').CSSObject;
        ":-moz-read-only"?: import('@emotion/serialize').CSSObject;
        ":-moz-read-write"?: import('@emotion/serialize').CSSObject;
        ":-moz-ui-invalid"?: import('@emotion/serialize').CSSObject;
        ":-moz-ui-valid"?: import('@emotion/serialize').CSSObject;
        ":-ms-fullscreen"?: import('@emotion/serialize').CSSObject;
        ":-ms-input-placeholder"?: import('@emotion/serialize').CSSObject;
        ":-webkit-any-link"?: import('@emotion/serialize').CSSObject;
        ":-webkit-full-screen"?: import('@emotion/serialize').CSSObject;
        "::-moz-placeholder"?: import('@emotion/serialize').CSSObject;
        "::-moz-progress-bar"?: import('@emotion/serialize').CSSObject;
        "::-moz-range-progress"?: import('@emotion/serialize').CSSObject;
        "::-moz-range-thumb"?: import('@emotion/serialize').CSSObject;
        "::-moz-range-track"?: import('@emotion/serialize').CSSObject;
        "::-moz-selection"?: import('@emotion/serialize').CSSObject;
        "::-ms-backdrop"?: import('@emotion/serialize').CSSObject;
        "::-ms-browse"?: import('@emotion/serialize').CSSObject;
        "::-ms-check"?: import('@emotion/serialize').CSSObject;
        "::-ms-clear"?: import('@emotion/serialize').CSSObject;
        "::-ms-expand"?: import('@emotion/serialize').CSSObject;
        "::-ms-fill"?: import('@emotion/serialize').CSSObject;
        "::-ms-fill-lower"?: import('@emotion/serialize').CSSObject;
        "::-ms-fill-upper"?: import('@emotion/serialize').CSSObject;
        "::-ms-input-placeholder"?: import('@emotion/serialize').CSSObject;
        "::-ms-reveal"?: import('@emotion/serialize').CSSObject;
        "::-ms-thumb"?: import('@emotion/serialize').CSSObject;
        "::-ms-ticks-after"?: import('@emotion/serialize').CSSObject;
        "::-ms-ticks-before"?: import('@emotion/serialize').CSSObject;
        "::-ms-tooltip"?: import('@emotion/serialize').CSSObject;
        "::-ms-track"?: import('@emotion/serialize').CSSObject;
        "::-ms-value"?: import('@emotion/serialize').CSSObject;
        "::-webkit-backdrop"?: import('@emotion/serialize').CSSObject;
        "::-webkit-input-placeholder"?: import('@emotion/serialize').CSSObject;
        "::-webkit-progress-bar"?: import('@emotion/serialize').CSSObject;
        "::-webkit-progress-inner-value"?: import('@emotion/serialize').CSSObject;
        "::-webkit-progress-value"?: import('@emotion/serialize').CSSObject;
        "::-webkit-slider-runnable-track"?: import('@emotion/serialize').CSSObject;
        "::-webkit-slider-thumb"?: import('@emotion/serialize').CSSObject;
        "::after"?: import('@emotion/serialize').CSSObject;
        "::backdrop"?: import('@emotion/serialize').CSSObject;
        "::before"?: import('@emotion/serialize').CSSObject;
        "::first-letter"?: import('@emotion/serialize').CSSObject;
        "::first-line"?: import('@emotion/serialize').CSSObject;
        "::grammar-error"?: import('@emotion/serialize').CSSObject;
        "::marker"?: import('@emotion/serialize').CSSObject;
        "::placeholder"?: import('@emotion/serialize').CSSObject;
        "::selection"?: import('@emotion/serialize').CSSObject;
        "::spelling-error"?: import('@emotion/serialize').CSSObject;
        "::target-text"?: import('@emotion/serialize').CSSObject;
        "::view-transition"?: import('@emotion/serialize').CSSObject;
        ":active"?: import('@emotion/serialize').CSSObject;
        ":after"?: import('@emotion/serialize').CSSObject;
        ":any-link"?: import('@emotion/serialize').CSSObject;
        ":before"?: import('@emotion/serialize').CSSObject;
        ":blank"?: import('@emotion/serialize').CSSObject;
        ":checked"?: import('@emotion/serialize').CSSObject;
        ":current"?: import('@emotion/serialize').CSSObject;
        ":default"?: import('@emotion/serialize').CSSObject;
        ":defined"?: import('@emotion/serialize').CSSObject;
        ":disabled"?: import('@emotion/serialize').CSSObject;
        ":empty"?: import('@emotion/serialize').CSSObject;
        ":enabled"?: import('@emotion/serialize').CSSObject;
        ":first"?: import('@emotion/serialize').CSSObject;
        ":first-child"?: import('@emotion/serialize').CSSObject;
        ":first-letter"?: import('@emotion/serialize').CSSObject;
        ":first-line"?: import('@emotion/serialize').CSSObject;
        ":first-of-type"?: import('@emotion/serialize').CSSObject;
        ":focus"?: import('@emotion/serialize').CSSObject;
        ":focus-visible"?: import('@emotion/serialize').CSSObject;
        ":focus-within"?: import('@emotion/serialize').CSSObject;
        ":fullscreen"?: import('@emotion/serialize').CSSObject;
        ":future"?: import('@emotion/serialize').CSSObject;
        ":hover"?: import('@emotion/serialize').CSSObject;
        ":in-range"?: import('@emotion/serialize').CSSObject;
        ":indeterminate"?: import('@emotion/serialize').CSSObject;
        ":invalid"?: import('@emotion/serialize').CSSObject;
        ":last-child"?: import('@emotion/serialize').CSSObject;
        ":last-of-type"?: import('@emotion/serialize').CSSObject;
        ":left"?: import('@emotion/serialize').CSSObject;
        ":link"?: import('@emotion/serialize').CSSObject;
        ":local-link"?: import('@emotion/serialize').CSSObject;
        ":nth-col"?: import('@emotion/serialize').CSSObject;
        ":nth-last-col"?: import('@emotion/serialize').CSSObject;
        ":only-child"?: import('@emotion/serialize').CSSObject;
        ":only-of-type"?: import('@emotion/serialize').CSSObject;
        ":optional"?: import('@emotion/serialize').CSSObject;
        ":out-of-range"?: import('@emotion/serialize').CSSObject;
        ":past"?: import('@emotion/serialize').CSSObject;
        ":paused"?: import('@emotion/serialize').CSSObject;
        ":picture-in-picture"?: import('@emotion/serialize').CSSObject;
        ":placeholder-shown"?: import('@emotion/serialize').CSSObject;
        ":playing"?: import('@emotion/serialize').CSSObject;
        ":read-only"?: import('@emotion/serialize').CSSObject;
        ":read-write"?: import('@emotion/serialize').CSSObject;
        ":required"?: import('@emotion/serialize').CSSObject;
        ":right"?: import('@emotion/serialize').CSSObject;
        ":root"?: import('@emotion/serialize').CSSObject;
        ":scope"?: import('@emotion/serialize').CSSObject;
        ":target"?: import('@emotion/serialize').CSSObject;
        ":target-within"?: import('@emotion/serialize').CSSObject;
        ":user-invalid"?: import('@emotion/serialize').CSSObject;
        ":user-valid"?: import('@emotion/serialize').CSSObject;
        ":valid"?: import('@emotion/serialize').CSSObject;
        ":visited"?: import('@emotion/serialize').CSSObject;
    };
};
